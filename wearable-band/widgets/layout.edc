/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

///////////////////////////////////////////////////////////////////////////////
/*************************************************/
/* elm_layout -> fundamental template style      */
/*************************************************/
group { name: "elm/layout/application/default";
   parts {
      part { name: "elm.swallow.bg";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
   }
}

   group { name: "elm/layout/nocontents/default";
      parts {
         part {
            name: "bg";
            type: RECT;
            scale: 1;
            description {
               state: "default" 0.0;
               color: 255 255 255 25;
            }
         }
         part {
            name: "left_padding";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               min: NOCONTENT_LR_PADDING_SIZE 0;
               max: NOCONTENT_LR_PADDING_SIZE -1;
               fixed: 1 1;
               align: 0.0 0.0;
               rel1 {
                  to: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "bg";
                  relative: 0.0 0.0;
               }
            }
         }
         part {
            name: "right_padding";
            type: SPACER;
            scale: 1;
            description {
               state: "default" 0.0;
               min: NOCONTENT_LR_PADDING_SIZE 0;
               max: NOCONTENT_LR_PADDING_SIZE -1;
               fixed: 1 1;
               align: 1.0 0.0;
               rel1 {
                  to: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "bg";
                  relative: 1.0 0.0;
               }
            }
         }
         part { name: "fake_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
                min: 0 (NOCONTENT_IMAGE_SIZE+NOCONTENT_IMAGE_PADDING_HEIGHT);
                max: -1 (NOCONTENT_IMAGE_SIZE+NOCONTENT_IMAGE_PADDING_HEIGHT);
                rel2.relative: 1.0 0.0;
                fixed: 0 1;
                align: 0.5 0.0;
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "icon_clip";
            description { state: "default" 0.0;
               min: NOCONTENT_IMAGE_SIZE NOCONTENT_IMAGE_SIZE;
               max: NOCONTENT_IMAGE_SIZE NOCONTENT_IMAGE_SIZE;
               rel1.to: "image_bottom_padding";
               rel2 {
                  to: "image_bottom_padding";
                  relative: 1.0 0.0;
               }
               fixed: 0 1;
               align: 0.5 1.0;
            }
         }
         part { name: "icon_clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.swallow.icon";
               rel2.to: "elm.swallow.icon";
               color: 255 255 255 179;
            }
         }
         part { name: "image_bottom_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 NOCONTENT_IMAGE_PADDING_HEIGHT;
               max: -1 NOCONTENT_IMAGE_PADDING_HEIGHT;
               rel1.to: "elm.text";
               rel2 {
                  to: "elm.text";
                  relative: 1.0 0.0;
               }
               fixed: 0 1;
               align: 0.5 1.0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  to_x: "left_padding";
                  relative: 1.0 0.5;
               }
               rel2 {
                  to_x: "right_padding";
                  relative: 0.0 0.5;
               }
               text {
                  style: "nocontent_style";
                  min: 0 1;
                  max: 0 1;
               }
            }
            description { state: "image_visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_x: "left_padding";
                  to_y: "fake_padding";
                  relative: 1.0 1.0;
               }
               rel2 {
                  to_x: "right_padding";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
      }
      programs {
         program { name: "image_hidden";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "image_visible";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "image_visible" 0.0;
            target: "elm.text";
         }
      }
   }
