/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * vim:ts=3
*/

//****************************************************************************//
// *****************  EDJE description have 24 patterns **********************//
 //**************************************************************************//
// ------------------
// | --> HERE
// ------------------
 #define DESC_FROM_L( PARAM ) \
   description { state: "default" 0.0;\
      fixed: 1 0; \
      align: 0.0 0.5; \
      rel2.relative: 0.0 1.0; \
      PARAM\
   }

// ------------------
//         HERE <-- |
// ------------------
 #define DESC_FROM_R( PARAM ) \
   description { state: "default" 0.0;\
      fixed: 1 0; \
      align: 1.0 0.5; \
      rel1.relative: 1 0; \
      PARAM\
   }

// ----------
// |  HERE  |
// ----------
// |        |
// ----------
 #define DESC_FROM_T( PARAM ) \
   description { state: "default" 0.0;\
      fixed: 0 1; \
      align: 0.5 0.0; \
      rel2.relative: 1.0 0.0; \
      PARAM\
   }

// ----------
// |  HERE  |
// ----------
// |        |
// ----------
 #define DESC_FROM_B( PARAM ) \
   description { state: "default" 0.0;\
      fixed: 0 1; \
      rel1.relative: 0.0 1.0; \
      align: 0.5 1.0; \
      PARAM\
   }

// ------------------
// |  PART == HERE  |
// ------------------
 #define DESC_TO( PART, PARAM ) \
   description { state: "default" 0.0;\
      rel1 { \
         relative: 0 0; \
         to: PART; \
      }\
      rel2 {\
         relative: 1 1;\
         to: PART; \
      }\
      PARAM\
   }

//      |   TOP  |
// ---------------------
// LEFT |  HERE  | RIGHT
// ---------------------
//      | BOTTOM |
#define DESC_LRTB( LEFT, RIGHT, TOP, BOTTOM, PARAM ) \
   description { state: "default" 0.0;\
      rel1 { \
         relative: 1 1; \
         to_x: LEFT; \
         to_y: TOP; \
      }\
      rel2 {\
         relative: 0 0;\
         to_x: RIGHT;\
         to_y: BOTTOM;\
      }\
      PARAM\
   }

// ---------------------
// LEFT |--> HERE
// ---------------------
#define DESC_L( LEFT, PARAM ) \
   description { state: "default" 0.0;\
      align: 0 0.5; \
      fixed: 1 0; \
      rel1 { \
         relative: 1 0; \
         to_x: LEFT; \
      }\
      rel2 { \
         relative: 1 1;\
         to_x: LEFT; \
      }\
      PARAM\
   }

// ---------------------
//   HERE  <--| RIGHT
// ---------------------
#define DESC_R( RIGHT, PARAM ) \
   description { state: "default" 0.0;\
      align: 1 0.5; \
      fixed: 1 0; \
      rel1 { \
         relative: 0 0; \
         to_x: RIGHT; \
      }\
      rel2 {\
         relative: 0 1;\
         to_x: RIGHT; \
      }\
      PARAM\
   }

// --------------------------
// LEFT |--> HERE  <--| RIGHT
// --------------------------
#define DESC_LR( LEFT, RIGHT, PARAM ) \
   description { state: "default" 0.0;\
      rel1 { \
         relative: 1 0; \
         to_x: LEFT; \
      }\
      rel2 {\
         relative: 0 1;\
         to_x: RIGHT;\
      }\
      PARAM\
   }

//   |  TOP     |
// -----------------
//  |  HERE  <--| RIGHT
// -----------------
//  | BOTTOM   |
#define DESC_RTB( RIGHT, TOP, BOTTOM, PARAM ) \
   description { state: "default" 0.0;\
      align: 1 0.5;\
      rel1 { \
         relative: 0 1; \
         to_x: RIGHT; \
         to_y: TOP; \
      }\
      rel2 {\
         relative: 0 0;\
         to_x: RIGHT;\
         to_y: BOTTOM;\
      }\
      PARAM\
   }

// LEFT |  HERE  | RIGHT
// ---------------------
//      | BOTTOM |
#define DESC_LRB( LEFT, RIGHT, BOTTOM, PARAM ) \
   description { state: "default" 0.0;\
      align: 0.5 1;\
      rel1 { \
         relative: 1 0; \
         to_x: LEFT; \
         to_y: BOTTOM; \
      }\
      rel2 {\
         relative: 0 0;\
         to_x: RIGHT;\
         to_y: BOTTOM;\
      }\
      PARAM\
   }

//      |   TOP  |
// ---------------------
// LEFT |  HERE  | RIGHT
#define DESC_LRT( LEFT, RIGHT, TOP, PARAM ) \
   description { state: "default" 0.0;\
      align: 0.5 0;\
      rel1 { \
         relative: 1 1; \
         to_x: LEFT; \
         to_y: TOP; \
      }\
      rel2 {\
         relative: 0 1;\
         to_x: RIGHT;\
         to_y: TOP;\
      }\
      PARAM\
   }

//      |     TOP  |
// ---------------------
// LEFT |--> HERE  |
// ---------------------
//      |   BOTTOM |
#define DESC_LTB( LEFT, TOP, BOTTOM, PARAM ) \
   description { state: "default" 0.0;\
      align: 0 0.5;\
      rel1 { \
         relative: 1 1; \
         to_x: LEFT; \
         to_y: TOP; \
      }\
      rel2 {\
         relative: 1 0;\
         to_x: LEFT;\
         to_y: BOTTOM;\
      }\
      PARAM\
   }

// |   TOP  |
// ----------
// |  HERE  |
// ----------
#define DESC_T( TOP, PARAM ) \
   description { state: "default" 0.0;\
      align: 0.5 0.0;\
      rel1 { \
         relative: 0 1; \
         to_y: TOP; \
      }\
      rel2 {\
         relative: 1 1;\
         to_y: TOP;\
      }\
      PARAM\
   }

// ----------
// |  HERE  |
// ----------
// | BOTTOM |
#define DESC_B( BOTTOM, PARAM ) \
   description { state: "default" 0.0;\
      align: 0.5 1.0;\
      rel1 { \
         relative: 0 0; \
         to_y: BOTTOM; \
      }\
      rel2 {\
         relative: 1 0;\
         to_y: BOTTOM;\
      }\
      PARAM\
   }

//****************************************************************************//
//******************************* Part Macros ********************************//
//****************************************************************************//
#define PART(TYPE, NAME, DESCRIPION) \
   part { name: NAME; \
      scale: 1; \
      type: TYPE; \
      DESCRIPION \
   }

//****************************************************************************//
//**************************** Genlist Macros ********************************//
//****************************************************************************//

#define PART_LIST_BG \
   PART(RECT, "bg",  \
      description { state: "default" 0.0; \
         color: 0 0 0 0; \
      } \
      description { state: "selected" 0.0; \
         inherit: "default" 0.0; \
         color: 51 51 51 255; \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
      } \
   )

//**************************** Genlist PADDING *******************************//

#define PART_LIST_PADDINGS(LEFT_SIZE, RIGHT_SIZE, TOP_SIZE, BOTTOM_SIZE) \
   PART(SPACER, "elm.padding.left", \
      DESC_FROM_L( \
         min: LEFT_SIZE 0; \
         max: LEFT_SIZE -1; \
      ) \
   ) \
   PART(SPACER, "elm.padding.right", \
      DESC_FROM_R( \
         min: RIGHT_SIZE 0; \
         max: RIGHT_SIZE -1; \
      ) \
   ) \
   PART(SPACER, "elm.padding.top", \
      DESC_FROM_T( \
         min: 0 TOP_SIZE; \
         max: -1 TOP_SIZE; \
      ) \
   ) \
   PART(SPACER, "elm.padding.bottom", \
      DESC_FROM_B( \
         min: 0 BOTTOM_SIZE; \
         max: -1 BOTTOM_SIZE; \
      ) \
   )

//***************************  Genlist Programs ****************************//
#define PROGRAM_LIST_DEFAULT( TARGET ) \
   program { name: "default"; \
      signal: "elm,state,default"; \
      source: "elm"; \
      action: STATE_SET "default" 0.0; \
      TARGET \
   } \

#define PROGRAM_LIST_DISABLE( TARGET ) \
   program { name: "enabled"; \
      signal: "elm,state,enabled"; \
      source: "elm"; \
      action: STATE_SET "default" 0.0; \
      TARGET \
   } \
   program { name: "disabled"; \
      signal: "elm,state,disabled"; \
      source: "elm"; \
      action: STATE_SET "disabled" 0.0; \
      TARGET \
   }

#define PROGRAM_LIST_SELECT( TARGET ) \
   program { name: "selected"; \
      signal: "elm,state,selected"; \
      source: "elm"; \
      action: STATE_SET "selected" 0.0; \
      TARGET \
   } \
   program { name: "unselected"; \
      signal: "elm,state,unselected"; \
      source: "elm"; \
      action: STATE_SET "default" 0.0; \
      TARGET \
   }

#define PROGRAM_LIST_SOUND \
   program { name: "play_sound"; \
      signal: "elm,state,clicked"; \
      source: "elm"; \
      script { \
         run_program(PROGRAM:"play_sample"); \
      } \
   } \
   program { \
      name: "play_sample"; \
      action: RUN_PLUGIN "touch_sound"; \
   }

#define PROGRAMS_LIST( TARGET ) \
   programs { \
      PROGRAM_LIST_DEFAULT( TARGET \
         target: "bg"; \
      ) \
      PROGRAM_LIST_DISABLE( TARGET \
         target: "bg"; \
      ) \
      PROGRAM_LIST_SELECT( TARGET \
         target: "bg"; \
      ) \
      PROGRAM_LIST_SOUND \
   }

//******************************* Genlist TEXT ********************************//
#define PARAM_TEXT(STYLE, PARAM) \
   text { \
      min: 0 1; \
      style: STYLE; \
      PARAM \
   }

#define DESCRIPIONS_TEXT(DISABLED, SELECTED) \
   description { state: "disabled" 0.0; \
      inherit: "default" 0.0; \
      text.style: DISABLED; \
   } \
   description { state: "selected" 0.0; \
      inherit: "default" 0.0; \
      text.style: SELECTED; \
   }
