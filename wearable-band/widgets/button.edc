/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
group { name: "elm/button/base/default";
   script {
      public mouse_down = 0;
      public multi_down = 0;
      public selected = 0;
      public disabled = 0;
      public text = 0;
      public content = 0;
   }
   images {
      image: "core_button_stroke.#.png" COMP;
      image: "core_button_bg.#.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         clip_to: "bg_clip";
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
         }
         description { state: "visible" 0.0;
            min: BUTTON_DEFAULT_BG_VISIBLE_MIN_SIZE_INC;
         }
         description { state: "icon_only" 0.0;
            min: BUTTON_DEFAULT_BG_ICON_ONLY_MIN_SIZE_INC;
         }
      }
      part { name: "bg_clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            color: 0 0 0 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 127;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel2.relative: 0.0 0.0;
            min: BUTTON_DEFAULT_LEFT_TOP_PADDING_SIZE_INC;
            max: BUTTON_DEFAULT_LEFT_TOP_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1.to: "bg";
            rel1.relative: 1.0 1.0;
            rel2.to: "bg";
            min: BUTTON_DEFAULT_RIGHT_BOTTOM_PADDING_SIZE_INC;
            max: BUTTON_DEFAULT_RIGHT_BOTTOM_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "stroke";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_stroke.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
            color: 0 178 255 178;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 178;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 112 185 216 255;
         }
      }
      part { name: "icon_rect";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "padding_left_top";
            rel2.to_x: "padding_right_bottom";
            rel2.to_y: "padding_left_top";
            rel1.relative: 1.0 1.0;
            rel2.relative: 0.0 1.0;
            align: 0.5 0.0;
         }
         description { state: "visible" 0.0;
            inherit: "default";
            min: BUTTON_BOTTOM_ICON_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to_x: "padding_left_top";
            rel1.to_y: "icon_rect";
            rel1.relative: 1.0 1.0;
            rel2.to: "padding_right_bottom";
            rel2.relative: 0.0 0.0;
            text.style: "button_default_normal";
            text.max: 0 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_press";
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         clip_to: "icon_clipper";
         description { state: "default" 0.0;
            rel1.to: "padding_left_top";
            rel1.relative: 1.0 1.0;
            rel2.to: "padding_right_bottom";
            rel2.relative: 0.0 0.0;
         }
         description { state: "visible" 0.0;
            rel1.to_x: "padding_left_top";
            rel1.to_y: "elm.text";
            rel1.relative: 1.0 0.0;
            rel2.to_x: "padding_right_bottom";
            rel2.to_y: "elm.text";
            rel2.relative: 0.0 0.0;
            min: BUTTON_BOTTOM_ICON_SIZE_INC;
            fixed: 1 1;
            align: 0.5 1.0;
         }
         description { state: "icon_only";
            inherit: "default";
            min: BUTTON_BOTTOM_ICON_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "icon_clipper";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 178 255 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 127;
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  if (get_int(disabled) == 0) {
                     set_state(PART:"bg_clip", "pressed", 0.0);
                     set_state(PART:"stroke", "pressed", 0.0);
                     set_state(PART:"elm.text", "pressed", 0.0);
                     set_state(PART:"icon_clipper", "pressed", 0.0);
                     emit("elm,action,press", "");
                  }
              }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            if (get_int(mouse_down) == 1) {
              set_int(mouse_down, 0);
              if (get_int(disabled) == 0) {
                 set_state(PART:"bg_clip", "default", 0.0);
                 set_state(PART:"stroke", "default", 0.0);
                 set_state(PART:"elm.text", "default", 0.0);
                 set_state(PART:"icon_clipper", "default", 0.0);
                 emit("elm,action,unpress", "");
              }
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            if (get_int(multi_down) == 0) {
               if (get_int(disabled) == 0) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         script {
            set_int(content, 1);
            if (get_int(text) == 1) {
               set_state(PART:"bg", "visible", 0.0);
               set_state(PART:"icon_rect", "visible", 0.0);
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            } else {
               set_state(PART:"bg", "icon_only", 0.0);
               set_state(PART:"elm.swallow.content", "icon_only", 0.0);
               set_state(PART:"padding_left_top", "icon_only", 0.0);
            }
         }
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         script {
            set_int(content, 0);
            set_state(PART:"bg", "default", 0.0);
            set_state(PART:"icon_rect", "default", 0.0);
            set_state(PART:"elm.swallow.content", "default", 0.0);
         }
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            set_int(text, 1);
            if (get_int(content) == 1) {
               set_state(PART:"bg", "visible", 0.0);
               set_state(PART:"icon_rect", "visible", 0.0);
               set_state(PART:"elm.swallow.content", "visible", 0.0);
            }
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            set_int(text, 0);
            if (get_int(content) == 1) {
                set_state(PART:"bg", "icon_only", 0.0);
                set_state(PART:"elm.swallow.content", "icon_only", 0.0);
            }
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_state(PART:"bg_clip", "disabled", 0.0);
            set_state(PART:"stroke", "disabled", 0.0);
            set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"icon_clipper", "disabled", 0.0);
            set_int(disabled, 1);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_state(PART:"bg_clip", "default", 0.0);
            set_state(PART:"stroke", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"icon_clipper", "default", 0.0);
            set_int(disabled, 0);
         }
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}
// NOTICE: This style is for inheritence purpose.
//         Do not use this style directly.
group { name: "elm/button/base/inherit_only";
   script {
      public mouse_down = 0;
      public multi_down = 0;
      public selected = 0;
      public disabled = 0;
   }
   images {
      image: "core_button_stroke.#.png" COMP;
      image: "core_button_bg.#.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
            color: 0 0 0 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 127;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            rel2.relative: 0.0 0.0;
            min: BUTTON_DEFAULT_LEFT_TOP_PADDING_SIZE_INC;
            max: BUTTON_DEFAULT_LEFT_TOP_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1.to: "bg";
            rel1.relative: 1.0 1.0;
            rel2.to: "bg";
            min: BUTTON_DEFAULT_RIGHT_BOTTOM_PADDING_SIZE_INC;
            max: BUTTON_DEFAULT_RIGHT_BOTTOM_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "stroke";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_stroke.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
            color: 0 178 255 178;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 178;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 112 185 216 255;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 1.0 1.0;
            rel1.to: "padding_left_top";
            rel2.relative: 0.0 0.0;
            rel2.to: "padding_right_bottom";
            text {
               style: "button_default_normal";
               max: 1 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_press";
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  if (get_int(disabled) == 0) {
                     set_state(PART:"bg", "pressed", 0.0);
                     set_state(PART:"stroke", "pressed", 0.0);
                     set_state(PART:"elm.text", "pressed", 0.0);
                     emit("elm,action,press", "");
                  }
              }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            if (get_int(mouse_down) == 1) {
              set_int(mouse_down, 0);
              if (get_int(disabled) == 0) {
                 set_state(PART:"bg", "default", 0.0);
                 set_state(PART:"stroke", "default", 0.0);
                 set_state(PART:"elm.text", "default", 0.0);
                 emit("elm,action,unpress", "");
              }
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            if (get_int(multi_down) == 0) {
               if (get_int(disabled) == 0) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_state(PART:"bg", "disabled", 0.0);
            set_state(PART:"stroke", "disabled", 0.0);
            set_state(PART:"elm.text", "disabled", 0.0);
            set_int(disabled, 1);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_state(PART:"bg", "default", 0.0);
            set_state(PART:"stroke", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            set_int(disabled, 0);
         }
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/focus";
   inherit: "elm/button/base/inherit_only";
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
            color: 0 0 0 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 127;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "stroke";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_stroke.#.png";
            min: BUTTON_DEFAULT_BG_MIN_SIZE_INC;
            color: 0 0 0 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
}

// NOTICE: DO NOT use this style. This style is for production ONLY.
group { name: "elm/button/base/prod/body";
   inherit: "elm/button/base/inherit_only";
   parts {
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 0;
            min: BUTTON_BODY_TEXTBLOCK_MIN_SIZE_INC;
            rel1.relative: 1.0 1.0;
            rel1.to: "padding_left_top";
            rel2.relative: 0.0 0.0;
            rel2.to: "padding_right_bottom";
            text {
               style: "button_default_normal";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_default_press";
         }
      }
   }
}

group { name: "elm/button/base/bottom";
   inherit: "elm/button/base/inherit_only";
   alias: "elm/button/base/popup";
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_BOTTOM_BG_MIN_SIZE_INC;
            color: 0 178 255 51;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 89 127 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 25;
         }
      }
      part { name: "stroke";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_stroke.#.png";
            min: BUTTON_BOTTOM_BG_MIN_SIZE_INC;
            color: 0 178 255 178;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 112 185 216 255;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         clip_to: "icon_clipper";
         insert_before: "event";
         description { state: "default" 0.0;
            min: BUTTON_BOTTOM_ICON_SIZE_INC;
            max: BUTTON_BOTTOM_ICON_SIZE_INC;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "icon_clipper";
         type: RECT;
         scale: 1;
         insert_before: "event";
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 178 255 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 178 255 127;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) {
               set_int(mouse_down, 1);
               if (get_int(disabled) == 0) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"stroke", "pressed", 0.0);
                  set_state(PART:"icon_clipper", "pressed", 0.0);
                  set_state(PART:"elm.text", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               if (get_int(disabled) == 0) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"stroke", "default", 0.0);
                  set_state(PART:"icon_clipper", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_state(PART:"bg", "disabled", 0.0);
            set_state(PART:"stroke", "disabled", 0.0);
            set_state(PART:"elm.text", "disabled", 0.0);
            set_state(PART:"icon_clipper", "disabled", 0.0);
            set_int(disabled, 1);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_state(PART:"bg", "default", 0.0);
            set_state(PART:"stroke", "default", 0.0);
            set_state(PART:"elm.text", "default", 0.0);
            set_state(PART:"icon_clipper", "default", 0.0);
            set_int(disabled, 0);
         }
      }
   }
}

// NOTICE: DO NOT use this style. This style is for production ONLY.
group { name: "elm/button/base/prod/more";
    inherit: "elm/button/base/inherit_only";
    alias: "elm/button/base/more";
    parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_MORE_BG_MIN_SIZE_INC;
            color: 255 255 255 15;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 76;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 15;
         }
      }
      part { name: "stroke";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_stroke.#.png";
            min: BUTTON_MORE_BG_MIN_SIZE_INC;
            color: 255 255 255 51;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 102;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 51;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 0;
            min: BUTTON_MORE_TEXTBLOCK_MIN_SIZE_INC;
            rel1.relative: 1.0 1.0;
            rel1.to: "padding_left_top";
            rel2.relative: 0.0 0.0;
            rel2.to: "padding_right_bottom";
            text {
               style: "button_more_normal";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_more_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_more_press";
         }
      }
   }
}

group { name: "elm/button/base/datetime/ampm";
   inherit: "elm/button/base/inherit_only";
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "core_button_bg.#.png";
            min: BUTTON_DATETIME_TIME_AMPM_BG_SIZE_INC;
            max: BUTTON_DATETIME_TIME_AMPM_BG_SIZE_INC;
            color: 255 255 255 25;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 25;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 25;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 1.0 1.0;
            rel1.to: "padding_left_top";
            rel2.relative: 0.0 0.0;
            rel2.to: "padding_right_bottom";
            text {
               style: "button_datetime_ampm_normal";
               max: 1 0;
            }
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_datetime_ampm_press";
         }
         description { state: "unselected" 0.0;
            inherit: "default" 0.0;
            text.style: "button_datetime_ampm_dim";
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_datetime_ampm_dim";
         }
      }
   }
   programs {
      program { name: "unselected";
         signal: "elm,action,button,unselected";
         source: "elm";
         script {
            set_int(selected, 0);
            set_state(PART:"elm.text", "unselected", 0.0);
         }
      }
      program { name: "selected";
         signal: "elm,action,button,selected";
         source: "elm";
         script {
            set_int(selected, 1);
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "button_unpress1";
         script {
            if (get_int(disabled) == 0) {
               if (get_int(selected) == 0) {
                  set_state(PART:"bg", "unselected", 0.0);
                  set_state(PART:"elm.text", "unselected", 0.0);
               }
               else {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
               }
               emit("elm,action,unpress", "");
            }
         }
      }
   }
}

/******************* SPINNER BUTTONS STYLES **********************/
group { name: "elm/button/base/spinner/increase/default";
  alias: "elm/button/base/spinner/increase/horizontal";
  alias: "elm/button/base/spinner/increase/time_picker";
  alias: "elm/button/base/spinner/increase/date_picker";
  data.item: "focus_highlight" "on";
  images {
     image: "core_picker_button_bg_small.png" COMP;
     image: "core_picker_button_small_plus.png" COMP;
  }
  script {
     public mouse_down = 0;
     public multi_down = 0;
  }
  parts {
     part { name: "bg";
        scale: 1;
        description { state: "default" 0.0;
           color: 255 255 255 25;
           image.normal: "core_picker_button_bg_small.png";
        }
        description { state: "pressed" 0.0;
           inherit: "default" 0.0;
           color: 255 255 255 25;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           color: 255 255 255 25;
        }
     }
     part { name: "arrow";
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "bg";
           rel2.to: "bg";
           color: 255 255 255 255;
           image.normal: "core_picker_button_small_plus.png";
        }
     }
     part { name: "over";
        type: RECT;
        repeat_events: 1;
        description { state: "default" 0.0;
           color: 0 0 0 0;
        }
     }
     part { name: "disabler";
        type: RECT;
        description { state: "default" 0.0;
           color: 0 0 0 0;
           visible: 0;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           visible: 1;
        }
     }
  }
  programs {
     program { name: "button_press";
        signal: "mouse,down,1*";
        source: "over";
        script {
           if ((get_int(multi_down) == 0) &&
               (get_int(mouse_down) == 0)) {
                 set_int(mouse_down, 1);
                 run_program(PROGRAM:"button_press2");
           }
        }
     }
     program { name: "button_press2";
        action: SIGNAL_EMIT "elm,action,press" "";
        after: "button_press_anim";
     }
     program { name: "button_press_anim";
        action: STATE_SET "pressed" 0.0;
        target: "bg";
     }
     program { name: "button_unpress";
        signal: "mouse,up,1*";
        source: "over";
        script {
           if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress2");
                 run_program(PROGRAM:"button_unpress_anim");
           }
        }
     }
     program { name: "button_unpress2";
        action: SIGNAL_EMIT "elm,action,unpress" "";
     }
     program { name: "button_unpress_anim";
        action: STATE_SET "default" 0.0;
        target: "bg";
     }
     program { name: "button_click";
        signal: "mouse,clicked,1";
        source: "over";
        script {
           if (get_int(multi_down) == 0) {
             run_program(PROGRAM:"play_sound");
             run_program(PROGRAM:"button_click2");
           }
        }
     }
     program { name: "play_sound";
        action: RUN_PLUGIN "touch_sound";
     }
     program { name: "longpress_sound";
        signal: "elm,action,longpress";
        source: "elm";
        action: RUN_PLUGIN "touch_haptic";
     }
     program { name: "action_unpressed";
        signal: "elm,action,unpressed";
        source: "elm";
        after: "button_unpress_anim";
     }
     program { name: "action_pressed";
        signal: "elm,action,pressed";
        source: "elm";
        after: "button_press_anim";
     }
     program { name: "button_click2";
        action: SIGNAL_EMIT "elm,action,click" "";
     }
     program { name: "disable";
        signal: "elm,state,disabled";
        source: "elm";
        action: STATE_SET "disabled" 0.0;
        target: "bg";
        target: "disabler";
     }
     program { name: "enable";
        signal: "elm,state,enabled";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "bg";
        target: "disabler";
     }
     program {
        name: "multi_down";
        signal: "elm,action,multi,down";
        source: "elm";
        script {
           set_int(multi_down, 1);
        }
     }
     program {
        name: "multi_up";
        signal: "elm,action,multi,up";
        source: "elm";
        script {
           set_int(multi_down, 0);
        }
     }
  }
}

group { name: "elm/button/base/spinner/decrease/default";
  inherit: "elm/button/base/spinner/increase/default";
  alias: "elm/button/base/spinner/decrease/horizontal";
  alias: "elm/button/base/spinner/decrease/time_picker";
  alias: "elm/button/base/spinner/decrease/date_picker";
  images {
     image: "core_picker_button_small_minus.png" COMP;
  }
  parts {
     part { name: "arrow";
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "bg";
           rel2.to: "bg";
           color: 255 255 255 255;
           image.normal: "core_picker_button_small_minus.png";
        }
     }
  }
}

group { name: "elm/button/base/spinner/default";
  alias: "elm/button/base/spinner/horizontal";
  alias: "elm/button/base/spinner/date_picker";
  alias: "elm/button/base/spinner/time_picker";
  data.item: "focus_highlight" "on";
  parts {
     part { name: "bg";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
        }
     }
     part { name: "elm.text";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            visible: 1;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               style: "button_spinner_horizontal_normal";
               min: 0 0;
               max: 1 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_spinner_horizontal_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_spinner_horizontal_press";
         }
     }
     part { name: "over";
        type: RECT;
        repeat_events: 1;
        description { state: "default" 0.0;
           color: 0 0 0 0;
        }
     }
     part { name: "disabler";
        type: RECT;
        description { state: "default" 0.0;
           color: 0 0 0 0;
           visible: 0;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           visible: 1;
        }
     }
  }
  programs {
     program { name: "button_click";
        signal: "mouse,clicked,1";
        source: "over";
        script {
             run_program(PROGRAM:"play_sound");
             run_program(PROGRAM:"button_click2");
        }
     }
     program { name: "play_sound";
        action: RUN_PLUGIN "touch_sound";
     }
     program { name: "button_click2";
        action: SIGNAL_EMIT "elm,action,click" "";
     }
     program { name: "disable";
        signal: "elm,state,disabled";
        source: "elm";
        action: STATE_SET "disabled" 0.0;
        target: "disabler";
        target: "elm.text";
     }
     program { name: "enable";
        signal: "elm,state,enabled";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "disabler";
        target: "elm.text";
     }
  }
}

/////////////////////////
// Vertical /////////////
/////////////////////////
group { name: "elm/button/base/spinner/increase/vertical";
  alias: "elm/button/base/spinner/increase/vertical/icon";
  alias: "elm/button/base/spinner/increase/vertical/unit";
  data.item: "focus_highlight" "on";
  images {
     image: "core_picker_button_large_plus.png" COMP;
     image: "core_picker_button_bg.png" COMP;
  }
  script {
     public mouse_down = 0;
     public multi_down = 0;
  }
  parts {
     part { name: "bg";
        scale: 1;
        description { state: "default" 0.0;
           color: 255 255 255 25;
           image.normal: "core_picker_button_bg.png";
        }
        description { state: "pressed" 0.0;
           inherit: "default" 0.0;
           color: 255 255 255 25;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           color: 255 255 255 25;
        }
     }
     part { name: "arrow";
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "bg";
           rel2.to: "bg";
           color: 255 255 255 255;
           image.normal: "core_picker_button_large_plus.png";
        }
     }
     part { name: "over";
        type: RECT;
        repeat_events: 1;
        description { state: "default" 0.0;
           color: 0 0 0 0;
        }
     }
     part { name: "disabler";
        type: RECT;
        description { state: "default" 0.0;
           color: 0 0 0 0;
           visible: 0;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           visible: 1;
        }
     }
  }
  programs {
     program { name: "button_press";
        signal: "mouse,down,1*";
        source: "over";
        script {
           if ((get_int(multi_down) == 0) &&
               (get_int(mouse_down) == 0)) {
                 set_int(mouse_down, 1);
                 run_program(PROGRAM:"button_press2");
           }
        }
     }
     program { name: "button_press2";
        action: SIGNAL_EMIT "elm,action,press" "";
        after: "button_press_anim";
     }
     program { name: "button_press_anim";
        action: STATE_SET "pressed" 0.0;
        target: "bg";
     }
     program { name: "button_unpress";
        signal: "mouse,up,1*";
        source: "over";
        script {
           if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress2");
                 run_program(PROGRAM:"button_unpress_anim");
           }
        }
     }
     program { name: "button_unpress2";
        action: SIGNAL_EMIT "elm,action,unpress" "";
     }
     program { name: "button_unpress_anim";
        action: STATE_SET "default" 0.0;
        target: "bg";
     }
     program { name: "button_click";
        signal: "mouse,clicked,1";
        source: "over";
        script {
           if (get_int(multi_down) == 0) {
             run_program(PROGRAM:"play_sound");
             run_program(PROGRAM:"button_click2");
           }
        }
     }
     program { name: "play_sound";
        action: RUN_PLUGIN "touch_sound";
     }
     program { name: "longpress_sound";
        signal: "elm,action,longpress";
        source: "elm";
        action: RUN_PLUGIN "touch_haptic";
     }
     program { name: "action_unpressed";
        signal: "elm,action,unpressed";
        source: "elm";
        after: "button_unpress_anim";
     }
     program { name: "action_pressed";
        signal: "elm,action,pressed";
        source: "elm";
        after: "button_press_anim";
     }
     program { name: "button_click2";
        action: SIGNAL_EMIT "elm,action,click" "";
     }
     program { name: "disable";
        signal: "elm,state,disabled";
        source: "elm";
        action: STATE_SET "disabled" 0.0;
        target: "bg";
        target: "disabler";
     }
     program { name: "enable";
        signal: "elm,state,enabled";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "bg";
        target: "disabler";
     }
     program {
        name: "multi_down";
        signal: "elm,action,multi,down";
        source: "elm";
        script {
           set_int(multi_down, 1);
        }
     }
     program {
        name: "multi_up";
        signal: "elm,action,multi,up";
        source: "elm";
        script {
           set_int(multi_down, 0);
        }
     }
  }
}

group { name: "elm/button/base/spinner/decrease/vertical";
  inherit: "elm/button/base/spinner/increase/vertical";
  alias: "elm/button/base/spinner/decrease/vertical/icon";
  alias: "elm/button/base/spinner/decrease/vertical/unit";
  images {
     image: "core_picker_button_large_minus.png" COMP;
  }
  parts {
     part { name: "arrow";
        scale: 1;
        description { state: "default" 0.0;
           rel1.to: "bg";
           rel2.to: "bg";
           color: 255 255 255 255;
           image.normal: "core_picker_button_large_minus.png";
        }
     }
  }
}

group { name: "elm/button/base/spinner/vertical";
  alias: "elm/button/base/spinner/vertical/icon";
  alias: "elm/button/base/spinner/vertical/unit";
  data.item: "focus_highlight" "on";
  parts {
     part { name: "bg";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
        }
     }
     part { name: "elm.text";
         type: TEXTBLOCK;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            text {
               style: "button_spinner_vertical_normal";
               min: 1 1;
               max: 0 0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_spinner_vertical_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_spinner_vertical_press";
         }
     }
     part { name: "over";
        type: RECT;
        repeat_events: 1;
        description { state: "default" 0.0;
           color: 0 0 0 0;
        }
     }
     part { name: "disabler";
        type: RECT;
        description { state: "default" 0.0;
           color: 0 0 0 0;
           visible: 0;
        }
        description { state: "disabled" 0.0;
           inherit: "default" 0.0;
           visible: 1;
        }
     }
  }
  programs {
     program { name: "button_click";
        signal: "mouse,clicked,1";
        source: "over";
        script {
             run_program(PROGRAM:"play_sound");
             run_program(PROGRAM:"button_click2");
        }
     }
     program { name: "play_sound";
        action: RUN_PLUGIN "touch_sound";
     }
     program { name: "button_click2";
        action: SIGNAL_EMIT "elm,action,click" "";
     }
     program { name: "disable";
        signal: "elm,state,disabled";
        source: "elm";
        action: STATE_SET "disabled" 0.0;
        target: "disabler";
        target: "elm.text";
     }
     program { name: "enable";
        signal: "elm,state,enabled";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "disabler";
        target: "elm.text";
     }
  }
}

/*----------------------------SPINNER BUTTONS STYLES END-----------------------------*/

///////////////////////////////////////////////////////////////////////////////
