/*
 * Copyright (c) 2015 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

///////////////////////////////////////////////////////////////////////////////
   group { name: "elm/progressbar/horizontal/default";
      images {
         image: "core_process_bg.#.png" COMP;
         image: "core_process_bar.#.png" COMP;
      }
      parts {
         part { name: "access";
            type: SPACER;
            description { state: "default" 0.0;
               fixed: 1 1;
            }
         }
         part { name: "elm.background.progressbar";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 PROGRESSBAR_DEFAULT_BG_HEIGHT_SIZE_INC;
            }
         }
         part { name: "elm.swallow.bar";
            type: SWALLOW;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 PROGRESSBAR_DEFAULT_BG_HEIGHT_SIZE_INC;
               max: -1 PROGRESSBAR_DEFAULT_BG_HEIGHT_SIZE_INC;
               rel1.to: "elm.background.progressbar";
               rel2.to: "elm.background.progressbar";
               fixed: 0 1;
            }
         }
         part { name: "background";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
               image.normal: "core_process_bg.#.png";
                 color: 0 178 255 25;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 0 178 255 12;
            }
         }
         part { name: "drag.background";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "background";
                  to_y: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "background";
                  to_y: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.progress.progressbar";
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 0;
               fixed: 1 1;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
                  offset: -1 -1;
               }
               image.normal: "core_process_bar.#.png";
               color: 0 178 255 255;
            }
            description { state: "invert" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_y: "elm.swallow.bar";
                  to_x: "elm.cur.progressbar";
               }
               rel2 {
                  to_y: "elm.swallow.bar";
                  to_x: "background";
                  relative: 1.0 1.0;
               }
            }
            description { state: "state_begin" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 0.1 1.0;
               }
            }
            description { state: "state_end" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to: "elm.swallow.bar";
                  relative: 0.9 0.0;
               }
               rel2 {
                  to: "elm.swallow.bar";
                  relative: 1.0 1.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 163 191 204 255;
            }
         }
         part { name: "elm.cur.progressbar";
            mouse_events: 0;
            scale: 1;
            dragable {
               confine: "drag.background";
               x: 1 1 1;
               y: 0 0 0;
            }
            description { state: "default" 0.0;
               min: 0 PROGRESSBAR_DEFAULT_BG_HEIGHT_SIZE_INC;
               fixed: 1 1;
               visible: 0;
               rel1.to: "drag.background";
               rel2.to: "drag.background";
           }
         }
         part { name: "event";
            scale: 1;
            type: RECT;
            description { state: "default" 0.0;
              rel1.to: "access";
              rel2.to: "access";
              color: 0 0 0 0;
            }
         }
      }
      script {
         public disabled = 0;
      }
      programs {
         program { name: "slide_to_end";
            action: STATE_SET "state_end" 0.0;
            transition: LINEAR 0.5;
            target: "elm.progress.progressbar";
            after: "slide_to_begin";
         }
         program { name: "slide_to_begin";
            signal: "elm,state,slide,begin";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
            transition: LINEAR 0.5;
            after: "slide_to_end";
         }
         program { name: "start_pulse";
            signal: "elm,state,pulse,start";
            source: "elm";
         }
         program { name: "stop_pulse";
            signal: "elm,state,pulse,stop";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
         }
         program { name: "state_pulse";
            signal: "elm,state,pulse";
            source: "elm";
            action: STATE_SET "state_begin" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "state_fraction";
            signal: "elm,state,fraction";
            source: "elm";
            action: ACTION_STOP;
            target: "slide_to_begin";
            target: "slide_to_end";
            target: "start_pulse";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_on";
            signal: "elm,state,inverted,on";
            source: "elm";
            action: STATE_SET "invert" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "set_invert_off";
            signal: "elm,state,inverted,off";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.progress.progressbar";
         }
         program { name: "progressbar_disable";
            signal: "elm,state,disabled";
            source: "elm";
            script {
               set_state(PART:"elm.progress.progressbar", "disabled", 0.0);
               set_state(PART:"background", "disabled", 0.0);
               set_int(disabled, 1);
            }
         }
         program { name: "progressbar_enable";
            signal: "elm,state,enabled";
            source: "elm";
            script {
               set_state(PART:"elm.progress.progressbar", "default", 0.0);
               set_state(PART:"background", "default", 0.0);
               set_int(disabled, 0);
            }
         }
      }
   }

group { name: "elm/progressbar/horizontal/process";
   images {
      image: "activity_indicator_00.png" COMP;
      image: "activity_indicator_01.png" COMP;
      image: "activity_indicator_02.png" COMP;
      image: "activity_indicator_03.png" COMP;
      image: "activity_indicator_04.png" COMP;
      image: "activity_indicator_05.png" COMP;
      image: "activity_indicator_06.png" COMP;
      image: "activity_indicator_07.png" COMP;
      image: "activity_indicator_08.png" COMP;
      image: "activity_indicator_09.png" COMP;
      image: "activity_indicator_10.png" COMP;
      image: "activity_indicator_11.png" COMP;
      image: "activity_indicator_12.png" COMP;
      image: "activity_indicator_13.png" COMP;
      image: "activity_indicator_14.png" COMP;
      image: "activity_indicator_15.png" COMP;
      image: "activity_indicator_16.png" COMP;
      image: "activity_indicator_17.png" COMP;
      image: "activity_indicator_18.png" COMP;
      image: "activity_indicator_19.png" COMP;
      image: "activity_indicator_20.png" COMP;
      image: "activity_indicator_21.png" COMP;
      image: "activity_indicator_22.png" COMP;
      image: "activity_indicator_23.png" COMP;
      image: "activity_indicator_24.png" COMP;
      image: "activity_indicator_25.png" COMP;
      image: "activity_indicator_26.png" COMP;
      image: "activity_indicator_27.png" COMP;
      image: "activity_indicator_28.png" COMP;
      image: "activity_indicator_29.png" COMP;
   }
   parts {
      part { name: "access";
         type: RECT;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.background.progressbar";
         mouse_events: 0;
         scale: 1;
         type: RECT;
         description {
            state: "default" 0.0;
         }
      }
      part { name: "bar";
         mouse_events: 0;
         scale: 1;
         clip_to: "elm.background.progressbar";
         description {
            state: "default" 0.0;
            min: PROGRESSBAR_PROCESS_BAR_IMAGE_SIZE_INC;
            max: PROGRESSBAR_PROCESS_BAR_IMAGE_SIZE_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "activity_indicator_00.png";
            image.tween: "activity_indicator_01.png";
            image.tween: "activity_indicator_02.png";
            image.tween: "activity_indicator_03.png";
            image.tween: "activity_indicator_04.png";
            image.tween: "activity_indicator_05.png";
            image.tween: "activity_indicator_06.png";
            image.tween: "activity_indicator_07.png";
            image.tween: "activity_indicator_08.png";
            image.tween: "activity_indicator_09.png";
            image.tween: "activity_indicator_10.png";
            image.tween: "activity_indicator_11.png";
            image.tween: "activity_indicator_12.png";
            image.tween: "activity_indicator_13.png";
            image.tween: "activity_indicator_14.png";
            image.tween: "activity_indicator_15.png";
            image.tween: "activity_indicator_16.png";
            image.tween: "activity_indicator_17.png";
            image.tween: "activity_indicator_18.png";
            image.tween: "activity_indicator_19.png";
            image.tween: "activity_indicator_20.png";
            image.tween: "activity_indicator_21.png";
            image.tween: "activity_indicator_22.png";
            image.tween: "activity_indicator_23.png";
            image.tween: "activity_indicator_24.png";
            image.tween: "activity_indicator_25.png";
            image.tween: "activity_indicator_26.png";
            image.tween: "activity_indicator_27.png";
            image.tween: "activity_indicator_28.png";
            image.tween: "activity_indicator_29.png";
            color: 0 178 255 255;
         }
      }
   }
   programs {
      program { name: "start_pulse";
         signal: "elm,state,pulse,start";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bar";
         transition: LINEAR 1.0;
         after: "start_pulse";
      }
      program { name: "stop_pulse";
         signal: "elm,state,pulse,stop";
         source: "elm";
         action: ACTION_STOP;
         target: "start_pulse";
         after: "init_pulse";
      }
      program { name: "init_pulse";
         action: STATE_SET "default" 0.0;
         target: "bar";
      }
   }
}

group { name: "elm/progressbar/horizontal/process/small";
   images {
      image: "tiny_activity_indicator_00.png" COMP;
      image: "tiny_activity_indicator_01.png" COMP;
      image: "tiny_activity_indicator_02.png" COMP;
      image: "tiny_activity_indicator_03.png" COMP;
      image: "tiny_activity_indicator_04.png" COMP;
      image: "tiny_activity_indicator_05.png" COMP;
      image: "tiny_activity_indicator_06.png" COMP;
      image: "tiny_activity_indicator_07.png" COMP;
      image: "tiny_activity_indicator_08.png" COMP;
      image: "tiny_activity_indicator_09.png" COMP;
      image: "tiny_activity_indicator_10.png" COMP;
      image: "tiny_activity_indicator_11.png" COMP;
      image: "tiny_activity_indicator_12.png" COMP;
      image: "tiny_activity_indicator_13.png" COMP;
      image: "tiny_activity_indicator_14.png" COMP;
      image: "tiny_activity_indicator_15.png" COMP;
      image: "tiny_activity_indicator_16.png" COMP;
      image: "tiny_activity_indicator_17.png" COMP;
      image: "tiny_activity_indicator_18.png" COMP;
      image: "tiny_activity_indicator_19.png" COMP;
      image: "tiny_activity_indicator_20.png" COMP;
      image: "tiny_activity_indicator_21.png" COMP;
      image: "tiny_activity_indicator_22.png" COMP;
      image: "tiny_activity_indicator_23.png" COMP;
      image: "tiny_activity_indicator_24.png" COMP;
      image: "tiny_activity_indicator_25.png" COMP;
      image: "tiny_activity_indicator_26.png" COMP;
      image: "tiny_activity_indicator_27.png" COMP;
      image: "tiny_activity_indicator_28.png" COMP;
      image: "tiny_activity_indicator_29.png" COMP;
   }
   parts {
      part { name: "access";
         type: RECT;
         description { state: "default" 0.0;
            fixed: 1 1;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.background.progressbar";
         mouse_events: 0;
         scale: 1;
         type: RECT;
         description {
            state: "default" 0.0;
         }
      }
      part { name: "bar";
         mouse_events: 0;
         scale: 1;
         clip_to: "elm.background.progressbar";
         description {
            state: "default" 0.0;
            min: PROGRESSBAR_PROCESS_SMALL_BAR_IMAGE_SIZE_INC;
            max: PROGRESSBAR_PROCESS_SMALL_BAR_IMAGE_SIZE_INC;
            aspect: 1.0 1.0;
            aspect_preference: BOTH;
            image.normal: "tiny_activity_indicator_00.png";
            image.tween: "tiny_activity_indicator_01.png";
            image.tween: "tiny_activity_indicator_02.png";
            image.tween: "tiny_activity_indicator_03.png";
            image.tween: "tiny_activity_indicator_04.png";
            image.tween: "tiny_activity_indicator_05.png";
            image.tween: "tiny_activity_indicator_06.png";
            image.tween: "tiny_activity_indicator_07.png";
            image.tween: "tiny_activity_indicator_08.png";
            image.tween: "tiny_activity_indicator_09.png";
            image.tween: "tiny_activity_indicator_10.png";
            image.tween: "tiny_activity_indicator_11.png";
            image.tween: "tiny_activity_indicator_12.png";
            image.tween: "tiny_activity_indicator_13.png";
            image.tween: "tiny_activity_indicator_14.png";
            image.tween: "tiny_activity_indicator_15.png";
            image.tween: "tiny_activity_indicator_16.png";
            image.tween: "tiny_activity_indicator_17.png";
            image.tween: "tiny_activity_indicator_18.png";
            image.tween: "tiny_activity_indicator_19.png";
            image.tween: "tiny_activity_indicator_20.png";
            image.tween: "tiny_activity_indicator_21.png";
            image.tween: "tiny_activity_indicator_22.png";
            image.tween: "tiny_activity_indicator_23.png";
            image.tween: "tiny_activity_indicator_24.png";
            image.tween: "tiny_activity_indicator_25.png";
            image.tween: "tiny_activity_indicator_26.png";
            image.tween: "tiny_activity_indicator_27.png";
            image.tween: "tiny_activity_indicator_28.png";
            image.tween: "tiny_activity_indicator_29.png";
            color: 0 178 255 255;
         }
      }
   }
   programs {
      program { name: "start_pulse";
         signal: "elm,state,pulse,start";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bar";
         transition: LINEAR 1.0;
         after: "start_pulse";
      }
      program { name: "stop_pulse";
         signal: "elm,state,pulse,stop";
         source: "elm";
         action: ACTION_STOP;
         target: "start_pulse";
         after: "init_pulse";
      }
      program { name: "init_pulse";
         action: STATE_SET "default" 0.0;
         target: "bar";
      }
   }
}
