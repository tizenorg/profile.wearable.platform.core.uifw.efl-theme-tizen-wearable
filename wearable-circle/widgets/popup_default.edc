/*
 * Copyright (c) 2013 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Licensed under the Flora License, Version 1.1 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://floralicense.org/license/
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

group { name: "elm/popup/buttons1/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0; }
      }
   }
}

group { name: "elm/popup/buttons2/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name: "c_padding";
        type: RECT;
        scale: 1;
        description { state: "default" 0.0;
          min: POPUP_BUTTON_CENTER_PADDING_SIZE 0;
          max: POPUP_BUTTON_CENTER_PADDING_SIZE -1;
          fixed: 1 0;
          align: 0.5 0.5;
          color: 0 25 48 255; /*(Changeable UI) color_class: "B0553";*/
        }
      }
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel2 {
              to_x: "c_padding";
              relative: 0.0 1.0;
            }
         }
      }
      part{ name:"actionbtn2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
              to_x: "c_padding";
              relative: 1.0 0.0;
            }
         }
      }
   }
}

group { name: "elm/popup/content/default";
   parts{
      part { name: "top_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 0.0;
            min: 0 POPUP_CENTER_PADDING_HEIGHT;
            max: -1 POPUP_CENTER_PADDING_HEIGHT;
         }
      }
      part { name:"elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "top_padding";
            rel1.relative: 0.0 1.0;
            min: POPUP_DEFAULT_CONTENT_AREA_DEFAULT_MIN_INC;
            max: POPUP_DEFAULT_CONTENT_AREA_DEFAULT_MAX_INC;
         }
      }
   }
}

group { name: "elm/popup/base/default";
   data {
      item: "default_orient" "2";  //top:0, center:1 bottom:2
      item: "title_height" POPUP_TITLE_AREA_HEIGHT;
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
      item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   }
   images {
      image: "b_popup_edge_shadow.png" COMP;
      image: "b_popup_edge_Inner_glow.png" COMP;
   }
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_BASE_DEFAULT_BASE_DEFAULT_MIN_INC;
            max: POPUP_BASE_DEFAULT_BASE_DEFAULT_MAX_INC;
         }
      }
      part { name: "lt_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "rb_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1.relative: 1.0 1.0;
         }
      }
      part { name: "text_title_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TITLE_SIDE_PADDING_SIZE 0;
            max: POPUP_TITLE_SIDE_PADDING_SIZE -1;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "lt_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "lt_padding";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "text_title_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TITLE_SIDE_PADDING_SIZE 0;
            max: POPUP_TITLE_SIDE_PADDING_SIZE -1;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               to_x: "rb_padding";
               relative: 0.0 0.0;
            }
            rel2 {
               to_x: "rb_padding";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to: "lt_padding";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "rb_padding";
               relative: 0.0 0.0;
            }
            color: 0 0 0 255;
         }
      }
      part { name: "elm.bg.title";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            min: 0 0;
            fixed: 1 1;
            rel1 {
               to_x: "left.line";
               to_y: "top.line";
               relative: 1.0 1.0;
            }
            rel2 {
               to_x: "right.line";
               to_y: "top.line";
               relative: 0.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 POPUP_TITLE_TEXT_SIZE;
            max: -1 POPUP_TITLE_TEXT_SIZE;
            fixed: 0 1;
            color: 0 0 0 0;
         }
      }
      part { name: "elm.text.title";
         type: TEXTBLOCK;
         scale:1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1 {
              relative: 1.0 0.0;
              to_x: "text_title_left_padding";
              to_y: "elm.bg.title";
            }
            rel2 {
              relative: 0.0 1.0;
              to_x: "text_title_right_padding";
              to_y: "elm.bg.title";
            }
            text {
              style: "popup_title_style";
              align: 0.0 0.5;
              min: 0 0;
            }
         }
      }
      part { name: "text_title_down_padding";
        type: SWALLOW;
        scale: 1;
        description { state: "default" 0.0;
            // min: 0 POPUP_CENTER_PADDING_HEIGHT;
            // max: -1 POPUP_CENTER_PADDING_HEIGHT;
            min: 0 0;
            max: -1 0;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1 {
               to: "elm.bg.title";
               relative: 0.0 1.0;
            }
            rel2 {
               to: "elm.bg.title";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "access.title";
         type: RECT;
         repeat_events: 1;
              description { state: "default" 0.0;
              rel1.to: "elm.bg.title";
              rel2.to: "elm.bg.title";
              color: 0 0 0 0;
          }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "left.line";
               to_y: "text_title_down_padding";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "right.line";
               to_y: "elm.bg.action_area";
            }
         }
         description { state: "below_title" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "left.line";
               to_y: "text_title_down_padding";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "right.line";
               to_y: "elm.bg.action_area";
            }
         }
         description { state: "below_title_show_actionarea" 0.0;
            inherit: "below_title" 0.0;
         }
         description { state: "show_actionarea" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "access.body";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.bg.action_area";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.5 1.0;
            rel1 {
               to_x: "bg";
               to_y: "bottom.line";
               relative: 0.0 0.0;
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "bg";
               to_y: "bottom.line";
            }
            min: 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 POPUP_BUTTON_HEIGHT;
            max: -1 POPUP_BUTTON_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "elm.swallow.action_area";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            fixed: 1 1;
            rel1.to: "elm.bg.action_area";
            rel2.to: "elm.bg.action_area";
         }
      }
      part { name: "top.line";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            min: 0 0;
            max: -1 0;
            fixed: 1 1;
            rel1 {
               to: "bg";
               relative: 0.0 0.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 POPUP_TITLE_TOP_PADDING_HEIGHT;
            max: -1 POPUP_TITLE_TOP_PADDING_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "left.line";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: POPUP_TEXT_SIDE_PADDING_SIZE 0;
            max: POPUP_TEXT_SIDE_PADDING_SIZE -1;
            fixed: 1 0;
            rel1.to: "bg";
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "right.line";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: POPUP_TEXT_SIDE_PADDING_SIZE 0;
            max: POPUP_TEXT_SIDE_PADDING_SIZE -1;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
         }
      }
      part { name: "bottom.line";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 0;
            max: -1 0;
            fixed: 0 1;
            rel1.to: "bg";
            rel2.to: "bg";
         }
      }
      part { name: "shadow";
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            color: 7 7 7 255;
            image.normal: "b_popup_edge_shadow.png";
         }
      }
      part { name: "inner_glow";
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            color: 0 149 255 255;
            image.normal: "b_popup_edge_Inner_glow.png";
         }
      }
   }
   programs {
      program { name: show_title_area;
         signal: "elm,state,title_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.title", "visible", 0.0);
            set_state(PART:"top.line", "visible", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default")) {
               set_state(PART:"elm.swallow.content", "below_title", 0.0);
            } else if (!strcmp(st, "show_actionarea")) {
               set_state(PART:"elm.swallow.content", "below_title_show_actionarea", 0.0);
            }
         }
      }
      program { name: hide_title_area;
         signal: "elm,state,title_area,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.title", "default", 0.0);
            set_state(PART:"top.line", "default", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "below_title")) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
            } else if (!strcmp(st, "below_title_show_actionarea")) {
               set_state(PART:"elm.swallow.content", "show_actionarea", 0.0);
            }
         }
      }
      program { name: show_action_area;
         signal: "elm,state,action_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.action_area", "visible", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default")) {
               set_state(PART:"elm.swallow.content", "show_actionarea", 0.0);
            } else if (!strcmp(st, "below_title")) {
               set_state(PART:"elm.swallow.content", "below_title_show_actionarea", 0.0);
            }
         }
      }
      program { name: hide_action_area;
         signal: "elm,state,action_area,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.action_area", "default", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "show_actionarea")) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
            } else if (!strcmp(st, "below_title_show_actionarea")) {
               set_state(PART:"elm.swallow.content", "below_title", 0.0);
            }
         }
      }
   }
}

// FIXME: currently popup cannot resize this edje by it's min size.
group { name: "elm/popup/base/toast";
   data {
      item: "default_orient" "2";  //top:0, center:1 bottom:2
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_BG_WIDTH 0;
            rel1 {
              relative: 0.0 0.0;
              to_x: "title_left_padding";
              to_y: "title_top_padding";
            }
            rel2 {
              relative: 1.0 1.0;
              to_x: "title_right_padding";
              to_y: "title_bottom_padding";
            }
            color: 0 148 255 255; /*(Changeable UI) color_class: "B061L1E";*/
         }
      }
      part { name: "title_top_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_PADDING_TOP_SIZE;
            max: -1 POPUP_TOAST_PADDING_TOP_SIZE;
            rel1 {
               relative: 0.0 0.0;
               to_y: "elm.text";
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "elm.text";
            }
         }
         description { state: "icon_visible" 0.0;
            inherit: "default" 0.0;
            rel1.to_y: "toast,icon";
            rel2.to_y: "toast,icon";
         }
      }
      part { name: "top.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1.to: "bg";
            rel2 {
               relative: 1.0 0.0;
               to: "bg";
            }
            color: 0 53 91 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "left.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1.to: "bg";
            rel2 {
               relative: 0.0 1.0;
               to: "bg";
            }
            color: 0 53 91 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "right.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
            color: 0 53 91 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "title_bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_TEXT_PADDING_BOTTOM_SIZE;
            max: -1 POPUP_TOAST_TEXT_PADDING_BOTTOM_SIZE;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 0.0;
               to_y: "bottom_padding";
            }
            rel2 {
               relative: 0.1 0.0;
               to_y: "bottom_padding";
            }
         }
      }
      part { name: "bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_PADDING_BOTTOM_SIZE;
            max: -1 POPUP_TOAST_PADDING_BOTTOM_SIZE;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "bottom.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1 {
               relative: 0.0 1.0;
               to_x: "title_left_padding";
               to_y: "bottom_padding";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "bg";
            }
            color: 0 53 91 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "title_left_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_PADDING_LEFT_SIZE 0;
            max: POPUP_TOAST_PADDING_LEFT_SIZE -1;
            fixed: 1 0;
            align: 0.5 0.5;
            rel2 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "title_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_PADDING_RIGHT_SIZE 0;
            max: POPUP_TOAST_PADDING_RIGHT_SIZE -1;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "toast,icon";
         type: SWALLOW;
         clip_to: "icon_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "title_left_padding";
               to_y: "icon_bottom_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "title_right_padding";
               to_y: "icon_bottom_padding";
               relative: 0.0 0.0;
            }
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_ICON_SIZE;
            max: -1 POPUP_TOAST_ICON_SIZE;
         }
      }
      part { name: "icon_clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "toast,icon";
            rel2.to: "toast,icon";
            color: 249 249 249 255; /*(Changeable UI) color_class: "W173L1";*/
         }
      }
      part { name: "icon_bottom_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2 {
               to: "elm.text";
               relative: 1.0 0.0;
            }
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_ICON_BOTTOM_PADDING_SIZE;
            max: -1 POPUP_TOAST_ICON_BOTTOM_PADDING_SIZE;
            fixed: 0 1;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 1.0;
            min: POPUP_TOAST_TEXT_WIDTH 0;
            max: POPUP_TOAST_TEXT_WIDTH POPUP_TOAST_DEFAULT_TEXT_MAX_HEIGHT_INC;
            rel1 {
              to_x: "title_left_padding";
              to_y: "title_bottom_padding";
              relative: 1.0 0.0;
            }
            rel2 {
              to_x: "title_right_padding";
              to_y: "title_bottom_padding";
              relative: 0.0 0.0;
            }
            text {
               style: "popup_toast_style";
               min: 0 1;
               max: 0 0;
            }
         }
         description { state: "icon_visible" 0.0;
            inherit: "default" 0.0;
            max: POPUP_TOAST_TEXT_WIDTH POPUP_TOAST_ICON_TEXT_MAX_HEIGHT_INC;
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
             fixed: 1 1;
             rel1.to: "bg";
             rel2.to: "bg";
             color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "icon_visible";
         signal: "elm,state,tizen,toast,icon,show";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "title_top_padding";
         target: "elm.text";
      }
      program { name: "icon_invisible";
         signal: "elm,state,tizen,toast,icon,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "title_top_padding";
         target: "elm.text";
      }
   }
}

group { name: "elm/button/base/popup";
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 1;
            min: 0 POPUP_BUTTON_HEIGHT;
            max: -1 POPUP_BUTTON_HEIGHT;
            color: 0 0 0 0;
         }
      }
      part { name: "bg";
         type: RECT;
         scale: 1;
         mouse_events: 0;
         description { state: "default" 0.0;
            fixed: 0 1;
            align: 0.0 0.0;
            rel1.to: "base";
            rel2.to: "base";
            min: 0 POPUP_BUTTON_HEIGHT;
            max: -1 POPUP_BUTTON_HEIGHT;
            color: 5 50 102 255; /*(Changeable UI) color_class: "B065L4";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 36 106 153 255; /*(Changeable UI) color_class: "B065L4P";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 6 41 63 255; /*(Changeable UI) color_class: "B065L4D";*/
         }
      }
      part { name: "padding_left_top";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            rel1.to: "bg";
            rel2 {
               relative: 0.0 0.0;
               to: "bg";
            }
            min: BUTTON_DEFAULT_POPUP_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "padding_right_bottom";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 1.0;
            rel1 {
               relative: 1.0 1.0;
               to: "bg";
            }
            rel2.to: "bg";
            min: BUTTON_DEFAULT_POPUP_PADDING_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "icon_rect";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            rel1 {
               relative: 1.0 1.0;
               to: "padding_left_top";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "padding_left_top";
               to_y: "padding_right_bottom";
            }
            min: 0 0;
            fixed: 1 1;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
            max: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
            fixed: 1 1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         clip_to: "elm.swallow.content.clip";
         scale: 1;
         description { state: "default" 0.0;
            visible: 0;
            align: 0.0 0.5;
            rel1 {
               relative: 1.0 1.0;
               to: "padding_left_top";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "padding_left_top";
               to_y: "padding_right_bottom";
            }
            fixed: 1 0;
         }
         description { state: "visible" 0.0;
            fixed: 1 1;
            min: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
            max: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
            align: 1.0 0.5;
            rel1 {
               relative: 0.0 1.0;
               to_x: "elm.text";
               to_y: "padding_left_top";
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "elm.text";
               to_y: "padding_right_bottom";
            }
         }
         description { state: "icononly" 0.0;
            min: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
            max: BUTTON_DEFAULT_POPUP_ICON_SIZE_INC;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1 {
               relative: 1.0 1.0;
               to_x: "icon_rect";
               to_y: "padding_left_top";
            }
            rel2 {
               relative: 0.0 0.0;
               to: "padding_right_bottom";
            }
            text {
               max: 1 0;
               style: "button_popup_text_normal";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text.style: "button_popup_text_dim";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            text.style: "button_popup_text_press";
         }
      }
      part { name: "elm.swallow.content.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            /*(Changeable UI) color_class: "B0522";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            /*(Changeable UI) color_class: "B0522D";*/
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "base";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               set_state(PART:"elm.text", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "base";
         script {
            if (get_int(mouse_down) == 1) {
              set_int(mouse_down, 0);
              run_program(PROGRAM:"button_unpress1");
            }
         }
      }
      program { name: "button_unpress1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "default", 0.0);
               set_state(PART:"elm.text", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "base";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "text_show";
         signal: "elm,state,text,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "icononly"))
              {
                 set_state(PART:"elm.swallow.content", "visible", 0.0);
                 set_state(PART:"icon_rect", "visible", 0.0);
              }
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled"))
               set_state(PART:"elm.text", "default", 0.0);
            else
               set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "text_hide";
         signal: "elm,state,text,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "visible"))
              {
                 set_state(PART:"elm.swallow.content", "icononly", 0.0);
                 set_state(PART:"icon_rect", "default", 0.0);
              }
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "icon_show";
         signal: "elm,state,icon,visible";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         target: "elm.swallow.content";
         target: "icon_rect";
      }
      program { name: "icon_hide";
         signal: "elm,state,icon,hidden";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "icon_rect";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "bg";
         target: "elm.swallow.content.clip";
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "elm.swallow.content.clip";
         target: "elm.text";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

