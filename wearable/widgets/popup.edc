/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

group { name: "elm/notify/bottom/popup";
   alias: "elm/notify/bottom/toast";
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.relative: 0.0 0.0;
            rel2.relative: 1.0 1.0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            align: 0.5 0.0;
         }
         description { state: "end" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
         }
      }
      part { name: "block";
         scale: 1;
         type: RECT;
         description { state: "default" 0.0;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            visible: 1;
            color: 0 0 0 0;
         }
         description { state: "end" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "load";
         signal: "load";
         source: "";
         action: STATE_SET "end" 0.0;
         target: "elm.swallow.content";
         target: "block";
      }
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         target: "block";
      }
      program { name: "show_1";
         signal: "show";
         action: STATE_SET "default" 0.0;
         target: "elm.swallow.content";
         after: "end2";
      }
      program { name: "end2";
         action: STATE_SET "end" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "block";
         target: "elm.swallow.content";
         after: "showfinished";
      }
      program { name: "showfinished";
         action: SIGNAL_EMIT "elm,action,show,finished" "";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: SIN_FAC 0.25 1.7;
         target: "elm.swallow.content";
      }
   }
}

// FIXME: block events may be not used
group { name: "elm/notify/block_events/popup";
   parts {
      part { name: "block_events_color";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0; /*(Changeable UI) color_class: "transparent";*/
         }
         description { state: "show" 0.0;
            color: 7 7 7 178; /*(Changeable UI) color_class: "W1712";*/
         }
         description { state: "clicked" 0.0;
            color: 7 7 7 178; /*(Changeable UI) color_class: "W1712";*/
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "block_events_color";
       }
      program { name: "show1";
         signal: "show";
         action: STATE_SET "show" 0.0;
         transition: LINEAR 0.25;
         target: "block_events_color";
      }
      program { name: "block_clicked";
         signal: "mouse,clicked,1";
         source: "block_events_color";
         action: SIGNAL_EMIT "elm,action,click" "elm";
         after: "deeper_block_color";
      }
      program {
         name: "deeper_block_color";
         action: STATE_SET "clicked" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.25;
         after: "default_block_color";
      }
      program {
         name: "default_block_color";
         action: STATE_SET "show" 0.0;
         target: "block_events_color";
         transition: LINEAR 0.25;
      }
   }
}

group { name: "elm/label/base/popup/default";
   parts {
      part { name: "top_left_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_LEFT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            max: POPUP_TEXT_PADDING_LEFT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            fixed: 1 1;
            align: 0.0 0.0;
            rel2 {
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "bottom_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_RIGHT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            max: POPUP_TEXT_PADDING_RIGHT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1 {
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1 {
              to: "top_left_padding";
              relative: 1.0 1.0;
            }
            rel2 {
              to: "bottom_right_padding";
              relative: 0.0 0.0;
            }
            text {
               align: 0 0;
               style: "popup_body_default_font_style";
               min: 0 1;
            }
         }
      }
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
}

group { name: "elm/label/base/popup/no_block";
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
      part { name: "top_left_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_LEFT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            max: POPUP_TEXT_PADDING_LEFT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            fixed: 1 1;
            align: 0.0 0.0;
            rel2 {
               relative: 0.0 0.0;
            }
         }
      }
      part { name: "bottom_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_RIGHT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            max: POPUP_TEXT_PADDING_RIGHT_SIZE POPUP_BODY_TEXT_PADDING_TOP_SIZE;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1 {
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1 {
              to: "top_left_padding";
              relative: 1.0 1.0;
            }
            rel2 {
              to: "bottom_right_padding";
              relative: 0.0 0.0;
            }
            text {
               align: 0 0;
               style: "popup_body_default_font_style";
               min: 0 1;
            }
         }
      }
   }
}

group { name: "elm/popup/buttons1/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0; }
      }
   }
}

group { name: "elm/popup/buttons2/default";
   data.item: "action_area_height" POPUP_BUTTON_DEFAULT_ACTION_AREA_HEIGHT;
   parts{
      part { name: "c_padding";
        type: RECT;
        scale: 1;
        description { state: "default" 0.0;
          min: POPUP_BUTTON_CENTER_PADDING_SIZE 0;
          max: POPUP_BUTTON_CENTER_PADDING_SIZE -1;
          fixed: 1 0;
          align: 0.5 0.5;
          color: 0 25 48 255; /*(Changeable UI) color_class: "B0553";*/
        }
      }
      part{ name:"actionbtn1";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel2 {
              to_x: "c_padding";
              relative: 0.0 1.0;
            }
         }
      }
      part{ name:"actionbtn2";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
              to_x: "c_padding";
              relative: 1.0 0.0;
            }
         }
      }
   }
}

group { name: "elm/popup/content/default";
   parts{
      part { name:"elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
   }
}

group { name: "elm/popup/base/default";
   data {
      item: "default_orient" "2";  //top:0, center:1 bottom:2
      item: "title_height" POPUP_TITLE_AREA_HEIGHT;
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
   }
   parts {
      part { name: "base";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
         }
      }
      part { name: "lt_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            align: 0.0 0.0;
            rel2.relative: 0.0 0.0;
         }
      }
      part { name: "rb_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 0;
            fixed: 1 1;
            align: 1.0 1.0;
            rel1.relative: 1.0 1.0;
         }
      }
      part { name: "text_title_left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_LEFT_SIZE 0;
            max: POPUP_TEXT_PADDING_LEFT_SIZE -1;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 {
               to_x: "lt_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "lt_padding";
               relative: 1.0 1.0;
            }
         }
      }
      part { name: "text_title_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TEXT_PADDING_RIGHT_SIZE 0;
            max: POPUP_TEXT_PADDING_RIGHT_SIZE -1;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 {
               to_x: "rb_padding";
               relative: 0.0 0.0;
            }
            rel2 {
               to_x: "rb_padding";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to: "lt_padding";
               relative: 1.0 1.0;
            }
            rel2 {
               to: "rb_padding";
               relative: 0.0 0.0;
            }
            color: 0 19 35 255; /*(Changeable UI) color_class: "B061L1E";*/
         }
      }
      part { name: "elm.bg.title";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            min: 0 0;
            fixed: 1 1;
            rel1 {
               to_x: "left.line";
               to_y: "top.line";
               relative: 1.0 1.0;
            }
            rel2 {
               to_x: "right.line";
               to_y: "top.line";
               relative: 0.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 POPUP_TITLE_HEIGHT;
            max: -1 POPUP_TITLE_HEIGHT;
            fixed: 0 1;
            color: 7 31 56 255; /*(Changeable UI) color_class: "B061L2";*/
         }
      }
      part { name: "elm.text.title";
         type: TEXTBLOCK;
         scale:1;
         description { state: "default" 0.0;
            fixed: 1 0;
            rel1 {
              relative: 1.0 0.0;
              to_x: "text_title_left_padding";
              to_y: "elm.bg.title";
            }
            rel2 {
              relative: 0.0 1.0;
              to_x: "text_title_right_padding";
              to_y: "elm.bg.title";
            }
            text {
              style: "popup_title_style";
              align: 0.0 0.5;
              min: 0 0;
            }
         }
      }
      part { name: "access.title";
         type: RECT;
         repeat_events: 1;
              description { state: "default" 0.0;
              rel1.to: "elm.bg.title";
              rel2.to: "elm.bg.title";
              color: 0 0 0 0;
          }
      }

      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "left.line";
               to_y: "top.line";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "right.line";
               to_y: "elm.bg.action_area";
            }
         }
         description { state: "below_title" 0.0;
            inherit: "default" 0.0;
            rel1 {
               relative: 0.0 1.0;
               to_x: "left.line";
               to_y: "elm.bg.title";
            }
            rel2 {
               relative: 1.0 0.0;
               to_x: "right.line";
               to_y: "elm.bg.action_area";
            }
         }
         description { state: "below_title_show_actionarea" 0.0;
            inherit: "below_title" 0.0;
         }
         description { state: "show_actionarea" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "access.body";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            fixed : 1 1;
            rel1.to: "elm.swallow.content";
            rel2.to: "elm.swallow.content";
            color: 0 0 0 0;
         }
      }
      part { name: "elm.bg.action_area";
         type: SPACER;
         scale : 1;
         description { state: "default" 0.0;
            fixed : 1 1;
            align: 0.5 1.0;
            rel1 {
               to_x: "left.line";
               to_y: "bottom.line";
               relative: 1.0 0.0;
            }
            rel2 {
               relative: 0.0 0.0;
               to_x: "right.line";
               to_y: "bottom.line";
            }
            min: 0 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            min: 0 POPUP_BUTTON_HEIGHT;
            max: -1 POPUP_BUTTON_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "elm.swallow.action_area";
         type: SWALLOW;
         scale : 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            fixed: 1 1;
            rel1.to: "elm.bg.action_area";
            rel2.to: "elm.bg.action_area";
         }
      }
      part { name: "top.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 0.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1 {
               to: "bg";
               relative: 0.0 0.0;
            }
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "left.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.5;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1.to: "bg";
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
            }
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "right.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.5;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "bottom.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1.to: "bg";
            rel2.to: "bg";
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
   }
   programs {
      program { name: show_title_area;
         signal: "elm,state,title_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.title", "visible", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default")) {
               set_state(PART:"elm.swallow.content", "below_title", 0.0);
            } else if (!strcmp(st, "show_actionarea")) {
               set_state(PART:"elm.swallow.content", "below_title_show_actionarea", 0.0);
            }
         }
      }
      program { name: hide_title_area;
         signal: "elm,state,title_area,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.title", "default", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "below_title")) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
            } else if (!strcmp(st, "below_title_show_actionarea")) {
               set_state(PART:"elm.swallow.content", "show_actionarea", 0.0);
            }
         }
      }
      program { name: show_action_area;
         signal: "elm,state,action_area,visible";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.action_area", "visible", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "default")) {
               set_state(PART:"elm.swallow.content", "show_actionarea", 0.0);
            } else if (!strcmp(st, "below_title")) {
               set_state(PART:"elm.swallow.content", "below_title_show_actionarea", 0.0);
            }
         }
      }
      program { name: hide_action_area;
         signal: "elm,state,action_area,hidden";
         source: "elm";
         script {
            new st[31];
            new Float:vl;
            set_state(PART:"elm.bg.action_area", "default", 0.0);
            get_state(PART:"elm.swallow.content", st, 30, vl);
            if (!strcmp(st, "show_actionarea")) {
               set_state(PART:"elm.swallow.content", "default", 0.0);
            } else if (!strcmp(st, "below_title_show_actionarea")) {
               set_state(PART:"elm.swallow.content", "below_title", 0.0);
            }
         }
      }
   }
}

// FIXME: currently popup cannot resize this edje by it's min size.
group { name: "elm/popup/base/toast";
   data {
      item: "default_orient" "2";  //top:0, center:1 bottom:2
      item: "popup_outside_pad" POPUP_OUTSIDE_PADDING;
   }
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
            min: POPUP_TOAST_BG_WIDTH 0;
            rel1 {
              relative: 0.0 0.0;
              to_x: "title_left_padding";
              to_y: "title_top_padding";
            }
            rel2 {
              relative: 1.0 1.0;
              to_x: "title_right_padding";
              to_y: "title_bottom_padding";
            }
            color: 0 19 35 255; /*(Changeable UI) color_class: "B061L1E";*/
         }
      }
      part { name: "title_top_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_PADDING_TOP_SIZE;
            max: -1 POPUP_TOAST_PADDING_TOP_SIZE;
            rel1 {
               relative: 0.0 0.0;
               to_y: "elm.text";
            }
            rel2 {
               relative: 1.0 0.0;
               to_y: "elm.text";
            }
         }
         description { state: "icon_visible" 0.0;
            inherit: "default" 0.0;
            rel1.to_y: "toast,icon";
            rel2.to_y: "toast,icon";
         }
      }
      part { name: "top.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1.to: "bg";
            rel2 {
               relative: 1.0 0.0;
               to: "bg";
            }
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "left.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 0.0;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1.to: "bg";
            rel2 {
               relative: 0.0 1.0;
               to: "bg";
            }
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "right.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 1.0 0.0;
            min: POPUP_LEFT_RIGHT_LINE_WIDTH 0;
            max: POPUP_LEFT_RIGHT_LINE_WIDTH -1;
            fixed: 1 0;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "title_bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_TEXT_PADDING_BOTTOM_SIZE;
            max: -1 POPUP_TOAST_TEXT_PADDING_BOTTOM_SIZE;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 0.0;
               to_y: "bottom_padding";
            }
            rel2 {
               relative: 0.1 0.0;
               to_y: "bottom_padding";
            }
         }
      }
      part { name: "bottom_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: 0 POPUP_TOAST_PADDING_BOTTOM_SIZE;
            max: -1 POPUP_TOAST_PADDING_BOTTOM_SIZE;
            fixed: 0 1;
            align: 0.5 1.0;
            rel1 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "bottom.line";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            align: 0.0 1.0;
            min: 0 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            max: -1 POPUP_TITLE_TOP_BOTTOM_LINE_HEIGHT;
            fixed: 0 1;
            rel1 {
               relative: 0.0 1.0;
               to_x: "title_left_padding";
               to_y: "bottom_padding";
            }
            rel2 {
               relative: 1.0 1.0;
               to: "bg";
            }
            color: 0 110 255 255; /*(Changeable UI) color_class: "B061L7";*/
         }
      }
      part { name: "title_left_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_PADDING_LEFT_SIZE 0;
            max: POPUP_TOAST_PADDING_LEFT_SIZE -1;
            fixed: 1 0;
            align: 0.5 0.5;
            rel2 {
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "title_right_padding";
        type: SPACER;
        scale: 1;
        description { state: "default" 0.0;
            min: POPUP_TOAST_PADDING_RIGHT_SIZE 0;
            max: POPUP_TOAST_PADDING_RIGHT_SIZE -1;
            fixed: 1 0;
            align: 0.5 0.5;
            rel1 {
               relative: 1.0 0.0;
            }
         }
      }
      part { name: "toast,icon";
         type: SWALLOW;
         clip_to: "icon_clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1 {
               to_x: "title_left_padding";
               to_y: "icon_bottom_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to_x: "title_right_padding";
               to_y: "icon_bottom_padding";
               relative: 0.0 0.0;
            }
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_ICON_SIZE;
            max: -1 POPUP_TOAST_ICON_SIZE;
         }
      }
      part { name: "icon_clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "toast,icon";
            rel2.to: "toast,icon";
            color: 249 249 249 255; /*(Changeable UI) color_class: "W173L1";*/
         }
      }
      part { name: "icon_bottom_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2 {
               to: "elm.text";
               relative: 1.0 0.0;
            }
            align: 0.5 1.0;
            min: 0 POPUP_TOAST_ICON_BOTTOM_PADDING_SIZE;
            max: -1 POPUP_TOAST_ICON_BOTTOM_PADDING_SIZE;
            fixed: 0 1;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 0;
            align: 0.5 1.0;
            min: POPUP_TOAST_TEXT_WIDTH 0;
            max: POPUP_TOAST_TEXT_WIDTH POPUP_TOAST_TEXT_MAX_HEIGHT_INC;
            rel1 {
              to_x: "title_left_padding";
              to_y: "title_bottom_padding";
              relative: 1.0 0.0;
            }
            rel2 {
              to_x: "title_right_padding";
              to_y: "title_bottom_padding";
              relative: 0.0 0.0;
            }
            text {
               style: "popup_toast_style";
               min: 0 1;
               max: 0 0;
            }
         }
         description { state: "icon_visible" 0.0;
            inherit: "default" 0.0;
            max: POPUP_TOAST_TEXT_WIDTH POPUP_TOAST_ICON_TEXT_MAX_HEIGHT_INC;
         }
      }
      part { name: "access.outline";
         type: RECT;
         scale: 1;
         repeat_events: 1;
         description { state: "default" 0.0;
             fixed: 1 1;
             rel1.to: "bg";
             rel2.to: "bg";
             color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "icon_visible";
         signal: "elm,state,tizen,toast,icon,show";
         source: "elm";
         action: STATE_SET "icon_visible" 0.0;
         target: "title_top_padding";
         target: "elm.text";
      }
      program { name: "icon_invisible";
         signal: "elm,state,tizen,toast,icon,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "title_top_padding";
         target: "elm.text";
      }
   }
}
