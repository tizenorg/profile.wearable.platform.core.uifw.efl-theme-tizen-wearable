/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#define NAVIFRAME_VIEW_ZOOM_TRANS_TIME 0.25          //Zoom time for push and pop
#define NAVIFRAME_VIEW_SLIDE_TRANS_TIME 0.2          //Sliding time for push and pop
#define NAVIFRAME_VIEW_SLIDE_TRANS_PREPARE_TIME 0.05 //Sliding prepare time for pop
#define NAVIFRAME_TITLE_TRANS_TIME 0.5               //Title transition time
#define NAVIFRAME_TEXT_FADE_OUT_CALC_TIME 0.2         //Text fade out calculation time

group { name: "elm/naviframe/base/default";
   parts {
      part { name: "bg";
         type: RECT;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
}

group { name: "elm/naviframe/item/basic/default";
   data.item: "tizen_zoom" 1;
   images {
      image: "tw_action_text_fadeout_left_holo_dark.png" COMP;
      image: "tw_action_text_fadeout_right_holo_dark.png" COMP;
   }
   script {
      public g_mirrored = 0;                 //Mirrored on/off status
      public g_text_fade_out_calc_timer = 0; //Text fade out calculation timer

      public title_text_fade_out() {
         new x, y, w, h, w2;

         if (get_int(g_text_fade_out_calc_timer)) {
            cancel_timer(g_text_fade_out_calc_timer);
            set_int(g_text_fade_out_calc_timer, 0);
         }

         get_geometry(PART:"elm.text.title", x, y, w, h);
         get_geometry(PART:"title_text_bg", x, y, w2, h);

         if (w > w2) {
            if (get_int(g_mirrored))
              set_state(PART:"title_text_fade_out_effect_right", "show_mirrored", 0.0);
            else
              set_state(PART:"title_text_fade_out_effect_right", "show", 0.0);
         }
         else
           set_state(PART:"title_text_fade_out_effect_right", "default", 0.0);
      }
   }
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            visible: 1;
         }
         description { state: "down" 0.0;
            visible: 0;
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events:  0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            color: 0 19 35 255; /*(Changeable UI) color_class: "B011";*/
         }
         description { state: "down" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 2.0;
         }
      }
      part { name: "title_clip";
         type: RECT;
         clip_to: "clipper";
         description { state: "default" 0.0;
            visible: 1;
            rel1.to: "title_bg";
            rel2.to: "title_bg";
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "title_bg";
         type: RECT;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 0 ACTIONBAR_HEIGHT;
            max: -1 ACTIONBAR_HEIGHT;
            fixed: 1 1;
            align: 0.5 0.0;
            rel1 { relative: 0.0 0.0; to: "base"; }
            rel2 { relative: 1.0 0.0; to: "base"; }
            color: 0 31 63 255; /*(Changeable UI) color_class: "B0511";*/
         }
         description { state: "hide_trans" 0.0;
            inherit: "default" 0.0;
            align: 0.5 1.0;
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            min: 320 0;
            max: 320 0;
         }
      }
      part { name: "title_text_bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            rel1 { relative: 1.0 0.0; to: "left_padding"; }
            rel2 { relative: 0.0 1.0; to: "title_right_padding"; }
            align: 0.0 0.0;
         }
      }
      part { name: "title_text_clip";
         type: RECT;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            rel1.to: "title_text_bg";
            rel2.to: "title_text_bg";
         }
      }
      part { name: "elm.text.title";
         type: TEXTBLOCK;
         scale: 1;
         clip_to: "title_text_clip";
         description { state: "default" 0.0;
            text {
               align: 0.0 0.5;
               min: 1 1;
               style: "action_bar_title";
            }
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to: "title_text_bg";
            rel2.to: "title_text_bg";
         }
      }
      part { name: "left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: ACTIONBAR_PADDING_SIZE 0;
            max: ACTIONBAR_PADDING_SIZE -1;
            fixed: 1 0;
            align: 0.0 0.5;
            rel1 { relative: 0.0 0.0; to: "title_bg"; }
            rel2 { relative: 0.0 1.0; to: "title_bg"; }
         }
      }
      part { name: "click_event_area";
         type: RECT;
         ignore_flags: ON_HOLD;
         description { state: "default" 0.0;
            rel1 { to: "title_bg"; }
            rel2 { to: "title_bg"; }
            color: 0 0 0 0;
         }
      }
      part { name: "access.title";
         type: RECT;
         repeat_events: 1;
         description { state: "default" 0.0;
            rel1.to: "title_bg";
            rel2.to: "title_bg";
            color: 0 0 0 0;
          }
      }
      part { name: "title_right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 6 0;
            max: 6 -1;
            fixed: 1 0;
            align: 1.0 0.5;
            rel1 { relative: 0.0 0.0; to_x: "title_right_btn"; to_y: "title_bg"; }
            rel2 { relative: 0.0 1.0; to_x: "title_right_btn"; to_y: "title_bg"; }
         }
      }
      part { name: "title_text_fade_out_effect_right";
         type: IMAGE;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 -1;
            align: 1.0 0.5;
            fixed: 1 0;
            visible: 0;
            rel1 { relative: 0.0 0.0; to: "title_right_padding"; }
            rel2 { relative: 0.0 1.0; to: "title_right_padding"; }
            color: 0 31 63 255; /*(Changeable UI) color_class: "B0511";*/
            image.normal: "tw_action_text_fadeout_right_holo_dark.png";
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            min: ACTIONBAR_FADE_WIDTH ACTIONBAR_HEIGHT;
            max: ACTIONBAR_FADE_WIDTH ACTIONBAR_HEIGHT;
            visible: 1;
         }
         description { state: "show_mirrored" 0.0;
            inherit: "default" 0.0;
            min: ACTIONBAR_FADE_WIDTH ACTIONBAR_HEIGHT;
            max: ACTIONBAR_FADE_WIDTH ACTIONBAR_HEIGHT;
            visible: 1;
            image.normal: "tw_action_text_fadeout_left_holo_dark.png";
         }
      }
      part { name: "title_right_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            min: 6 0;
            max: ACTIONBAR_TITLE_BTN_SIZE;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 { relative: 1.0 0.0; to: "title_bg"; }
            rel2 { relative: 1.0 1.0; to: "title_bg"; }
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         repeat_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1 { relative: 0.0 1.0; to_x: "base"; to_y: "title_bg"; }
            rel2 { relative: 1.0 1.0; to: "base"; }
         }
      }
      part { name: "elm.swallow.prev_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 1;
            visible: 0;
         }
      }
   }
   programs {
      program { name: "content_new_pushed";
         signal: "elm,state,new,pushed,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_TIME 1.7;
         after: "show_finished";
      }
      program { name: "content_cur_pushed";
         signal: "elm,state,cur,pushed,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_ZOOM_TRANS_TIME 1.7;
         after: "pushed_finished";
      }
      program { name: "content_prev_popped";
         signal: "elm,state,prev,popped,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_ZOOM_TRANS_TIME 1.7;
         after: "show_finished";
      }
      program { name: "content_cur_popped";
         signal: "elm,state,cur,popped,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_PREPARE_TIME 1.7;
         after: "content_cur_popped2";
      }
      program { name: "content_cur_popped2";
         action: STATE_SET "down" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_TIME 1.7;
         after: "popped_finished";
      }
      program { name: "cur_pushed";
         signal: "elm,state,cur,pushed";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
         }
      }
      program { name: "new_pushed";
         signal: "elm,state,new,pushed";
         source: "elm";
         action: STATE_SET "down" 0.0;
         target: "base";
      }
      program { name: "prev_popped";
         signal: "elm,state,prev,popped";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "clipper";
      }
      program { name: "cur_popped";
         signal: "elm,state,cur,popped";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
         }
      }
      program { name: "show_finished";
         script {
            emit("elm,action,show,finished", "");
         }
      }
      program { name: "pushed_finished";
         script {
            emit("elm,action,pushed,finished", "");
         }
      }
      program { name: "popped_finished";
         script {
            emit("elm,action,popped,finished", "");
         }
      }
      program { name: "visible";
         signal: "elm,state,visible";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
            set_state(PART:"clipper", "default", 0.0);
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program { name: "invisible";
         signal: "elm,state,invisible";
         source: "elm";
         script {
            set_state(PART:"clipper", "down", 0.0);
         }
      }
      program { name: "title_hide";
         signal: "elm,state,title,hide";
         source: "elm";
         script {
            set_state(PART:"title_bg", "hide", 0.0);
            set_state(PART:"title_clip", "hide", 0.0);
            set_state(PART:"title_right_btn", "hide", 0.0);
         }
      }
      program { name: "title_hide_trans";
         signal: "elm,action,title,hide";
         source: "elm";
         script {
            new st[32];
            new Float:vl;
            get_state(PART:"title_bg", st, 32, vl);
            if (!strcmp(st, "default")) {
               run_program(PROGRAM:"title_hide_trans2");
            }
         }
      }
      program { name: "title_hide_trans2";
         action: STATE_SET "hide_trans" 0.0;
         target: "title_bg";
         transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
         after: "title_hide_trans3";
      }
      program { name: "title_hide_trans3";
         script {
            run_program(PROGRAM:"title_hide");
         }
         after: "title_trans_finished";
      }
      program { name: "title_trans_finished";
         action: SIGNAL_EMIT "elm,action,title,transition,finished" "";
      }
      program { name: "title_show";
         signal: "elm,state,title,show";
         source: "elm";
         script {
            set_state(PART:"title_bg", "default", 0.0);
            set_state(PART:"title_clip", "default", 0.0);
            set_state(PART:"title_right_btn", "default", 0.0);
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program { name: "title_show_trans";
         signal: "elm,action,title,show";
         source: "elm";
         script {
            new st[32];
            new Float:vl;
            get_state(PART:"title_bg", st, 32, vl);
            if (!strcmp(st, "hide")) {
               set_state(PART:"title_bg", "hide_trans", 0.0);
               set_state(PART:"title_clip", "default", 0.0);
               set_state(PART:"title_right_btn", "default", 0.0);
               run_program(PROGRAM:"title_show_trans2");
            }
         }
      }
      program { name: "title_show_trans2";
         action: STATE_SET "default" 0.0;
         target: "title_bg";
         transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
         after: "title_trans_finished";
      }
      program { name: "title_label_show";
         signal: "elm,state,title_label,show";
         source: "elm";
         script {
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program { name: "title_label_hide";
         signal: "elm,state,title_label,hide";
         source: "elm";
         script {
            set_state(PART:"title_text_fade_out_effect_right", "default", 0.0);
         }
      }
      program { name: "title_right_btn_show";
         signal: "elm,state,title_right_btn,show";
         source: "elm";
         script {
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program { name: "title_right_btn_hide";
         signal: "elm,state,title_right_btn,hide";
         source: "elm";
         script {
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program { name: "title_clicked";
         signal: "mouse,clicked,1";
         source: "click_event_area";
         action: SIGNAL_EMIT "elm,action,title,clicked" "";
      }
      program {
         name: "mirrored_on";
         signal: "edje,state,rtl";
         source: "edje";
         script {
            set_int(g_mirrored, 1);
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program {
         name: "mirrored_off";
         signal: "edje,state,ltr";
         source: "edje";
         script {
            set_int(g_mirrored, 0);
            run_program(PROGRAM:"title_text_fade_out");
         }
      }
      program {
         name: "title_text_fade_out";
         script {
             if (get_int(g_text_fade_out_calc_timer)) {
               cancel_timer(g_text_fade_out_calc_timer);
               set_int(g_text_fade_out_calc_timer, 0);
            }
            set_int(g_text_fade_out_calc_timer, timer(NAVIFRAME_TEXT_FADE_OUT_CALC_TIME, "title_text_fade_out", 0));
         }
      }
   }
}

group { name: "elm/naviframe/item/empty/default";
   data.item: "tizen_zoom" 1;
   parts {
      part { name: "clipper";
         type: RECT;
         description { state: "default" 0.0;
            visible: 1;
         }
         description { state: "down" 0.0;
            visible: 0;
         }
      }
      part { name: "base";
         type: RECT;
         mouse_events:  0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            color: 0 19 35 255; /*(Changeable UI) color_class: "B011";*/
         }
         description { state: "down" 0.0;
            inherit: "default" 0.0;
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 2.0;
         }
      }
      part { name: "title_clip";
         type: RECT;
         clip_to: "clipper";
         description { state: "default" 0.0;
            visible: 1;
            rel1.to: "title";
            rel2.to: "title";
         }
         description { state: "hide" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "title";
         type: SWALLOW;
         scale: 1;
         clip_to: "title_clip";
         description { state: "default" 0.0;
            visible: 0;
            min: 0 0;
            max: -1 0;
            fixed: 0 1;
            align: 0.5 0.0;
            rel1 { relative: 0.0 0.0; to: "base"; }
            rel2 { relative: 1.0 0.0; to: "base"; }
         }
         description { state: "hide_trans" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            max: -1 -1;
            align: 0.5 1.0;
         }
         description { state: "show" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            max: -1 -1;
         }
      }
      part { name: "elm.swallow.content";
         type: SWALLOW;
         scale: 1;
         repeat_events: 0;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1 { relative: 0.0 1.0; to_x: "base"; to_y: "title"; }
            rel2 { relative: 1.0 1.0; to: "base"; }
         }
      }
      part { name: "elm.swallow.prev_btn";
         type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            min: 0 0;
            max: 0 0;
            fixed: 1 1;
            visible: 0;
         }
      }
      // For supporting efl-ext APIs. ///////////////////////////////
      part { name: "elm.swallow.circle";
         type: SWALLOW;
         mouse_events:  0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0; }
      }
      //
   }
   programs {
      program { name: "content_new_pushed";
         signal: "elm,state,new,pushed,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_TIME 1.7;
         after: "show_finished";
      }
      program { name: "content_cur_pushed";
         signal: "elm,state,cur,pushed,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_ZOOM_TRANS_TIME 1.7;
         after: "pushed_finished";
      }
      program { name: "content_prev_popped";
         signal: "elm,state,prev,popped,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_ZOOM_TRANS_TIME 1.7;
         after: "show_finished";
      }
      program { name: "content_cur_popped";
         signal: "elm,state,cur,popped,deferred";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_PREPARE_TIME 1.7;
         after: "content_cur_popped2";
      }
      program { name: "content_cur_popped2";
         action: STATE_SET "down" 0.0;
         target: "base";
         transition: SIN_FAC NAVIFRAME_VIEW_SLIDE_TRANS_TIME 1.7;
         after: "popped_finished";
      }
      program { name: "cur_pushed";
         signal: "elm,state,cur,pushed";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
         }
      }
      program { name: "new_pushed";
         signal: "elm,state,new,pushed";
         source: "elm";
         action: STATE_SET "down" 0.0;
         target: "base";
      }
      program { name: "prev_popped";
         signal: "elm,state,prev,popped";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "clipper";
      }
      program { name: "cur_popped";
         signal: "elm,state,cur,popped";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
         }
      }
      program { name: "show_finished";
         script {
            emit("elm,action,show,finished", "");
         }
      }
      program { name: "pushed_finished";
         script {
            emit("elm,action,pushed,finished", "");
         }
      }
      program { name: "popped_finished";
         script {
            emit("elm,action,popped,finished", "");
         }
      }
      program { name: "visible";
         signal: "elm,state,visible";
         source: "elm";
         script {
            set_state(PART:"base", "default", 0.0);
            set_state(PART:"clipper", "default", 0.0);
         }
      }
      program { name: "invisible";
         signal: "elm,state,invisible";
         source: "elm";
         script {
            set_state(PART:"clipper", "down", 0.0);
         }
      }
      program { name: "title_hide";
         signal: "elm,state,title,hide";
         source: "elm";
         script {
            set_state(PART:"title", "default", 0.0);
            set_state(PART:"title_clip", "hide", 0.0);
         }
      }
      program { name: "title_hide_trans";
         signal: "elm,action,title,hide";
         source: "elm";
         script {
            new st[32];
            new Float:vl;
            get_state(PART:"title", st, 32, vl);
            if (!strcmp(st, "show"))
               run_program(PROGRAM:"title_hide_trans2");
         }
      }
      program { name: "title_hide_trans2";
         action: STATE_SET "hide_trans" 0.0;
         target: "title";
         transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
         after: "title_hide_trans3";
      }
      program { name: "title_hide_trans3";
         script {
            run_program(PROGRAM:"title_hide");
         }
         after: "title_trans_finished";
      }
      program { name: "title_trans_finished";
         action: SIGNAL_EMIT "elm,action,title,transition,finished" "";
      }
      program { name: "title_show";
         signal: "elm,state,title,show";
         source: "elm";
         script {
            set_state(PART:"title", "show", 0.0);
            set_state(PART:"title_clip", "default", 0.0);
         }
      }
      program { name: "title_show_trans";
         signal: "elm,action,title,show";
         source: "elm";
         script {
            new st[32];
            new Float:vl;
            get_state(PART:"title", st, 32, vl);
            if (!strcmp(st, "default")) {
               set_state(PART:"title", "hide_trans", 0.0);
               set_state(PART:"title_clip", "default", 0.0);
               run_program(PROGRAM:"title_show_trans2");
            }
         }
      }
      program { name: "title_show_trans2";
         action: STATE_SET "show" 0.0;
         target: "title";
         transition: SIN_FAC NAVIFRAME_TITLE_TRANS_TIME 1.7;
         after: "title_trans_finished";
      }
   }
}

group { name: "elm/naviframe/item/basic/transparent/default";
   inherit: "elm/naviframe/item/basic/default";
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
         }
      }
   }
}

group { name: "elm/naviframe/item/empty/transparent/default";
   inherit: "elm/naviframe/item/empty/default";
   parts {
      part { name: "base";
         type: SPACER;
         description { state: "default" 0.0;
         }
      }
   }
}
