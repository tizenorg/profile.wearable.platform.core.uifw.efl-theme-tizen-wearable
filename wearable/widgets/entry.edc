/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

// FIXME: There is no UI images for entry !!!
// All images from redwood dark theme

#define ENTRY_PREEDIT_SUB1_COLOR                       "#2EA8E1"
#define ENTRY_PREEDIT_SUB2_COLOR                       "#9962C3"
#define ENTRY_PREEDIT_SUB3_COLOR                       "#76DE37"
#define ENTRY_PREEDIT_SUB4_COLOR                       "#999999"
#define ENTRY_PREEDIT_UNDERLINE_COLOR                  "#FFFFFF"
#define ENTRY_PREEDIT_TEXT_COLOR                       "#000000"
#define ENTRY_PREEDIT_BACKGROUND_COLOR                 "#FFFFFF"
#define ENTRY_SELECTION_BG_COLOR                       19 106 144 255
#define ENTRY_SELECTION_EDGE_COLOR                     59 115 182 255

#define ENTRY_BLOCK_HANDLE_SOURCE7 "elm/entry/selection/block_handle_left"
#define ENTRY_BLOCK_HANDLE_SOURCE8 "elm/entry/selection/block_handle_right"
#define ENTRY_CURSOR_HANDLE_SOURCE9 "elm/entry/cursor_handle/default"
#define ENTRY_BLOCK_HANDLE_SOURCE10 "elm/entry/selection/block_handle_edge_left"
#define ENTRY_BLOCK_HANDLE_SOURCE11 "elm/entry/selection/block_handle_edge_right"

#define ENTRY_EDITFIELD_FOCUS_DATA \
   data.item: "focus_highlight" "on";

#define ENTRY_TOP_BOTTOM_PADDING( SIZE ) \
   part { name: "top_padding"; \
      type: SPACER; \
      scale: 1; \
      description { state: "default" 0.0; \
         min: 0 SIZE; \
         max: 0 SIZE; \
         align: 0.5 0.0; \
         fixed: 0 1; \
         rel1.relative: 0.0 0.0; \
         rel2.relative: 1.0 0.0; \
      } \
   } \
   part { name: "bottom_padding"; \
      type: SPACER; \
      scale: 1; \
      description { state: "default" 0.0; \
         min: 0 SIZE; \
         max: 0 SIZE; \
         align: 0.5 1.0; \
         fixed: 0 1; \
         rel1.relative: 0.0 1.0; \
         rel2.relative: 1.0 1.0; \
      } \
   }

#define ENTRY_TOP_BOTTOM_REL \
   rel1 { \
      to_y: "top_padding"; \
      relative: 0.0 1.0; \
   } \
   rel2 { \
      to_y: "bottom_padding"; \
      relative: 1.0 0.0; \
   }

#define ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL \
   rel1 { \
      to_x: "focus_left_padding"; \
      to_y: "top_padding";\
      relative: 1.0 1.0; \
   } \
   rel2 { \
      to_x: "clear_padding"; \
      to_y: "bottom_padding"; \
      relative: 0.0 0.0; \
   }

#define ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC \
   script { \
      public scroll_enabled; \
   }

#define ENTRY_EDITFIELD_SWALLOW_PARTS \
   part { name: "clear_padding"; \
      type: SPACER; \
      scale: 1; \
      description { state: "default" 0.0; \
         align: 1.0 0.5; \
         fixed: 1 0; \
         rel1 { \
            to_x: "focus_right_padding"; \
            relative: 0.0 0.0; \
         } \
         rel2 { \
            to_x: "focus_right_padding"; \
            relative: 0.0 1.0; \
         } \
      } \
      description { state: "visible" 0.0; \
         inherit: "default" 0.0; \
         min: ENTRY_EDITFIELD_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0; \
         max: ENTRY_EDITFIELD_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0; \
      } \
   } \
   part { name: "elm.swallow.clear"; \
      type: SWALLOW; \
      scale: 1; \
      description { state: "default" 0.0; \
         align: 1.0 0.5; \
         fixed: 1 1; \
         rel1 { \
            to_x: "focus_right_padding"; \
            relative: 0.0 0.0; \
         } \
         rel2 { \
            to_x: "focus_right_padding"; \
            relative: 0.0 1.0; \
         } \
         visible: 0; \
      } \
      description { state: "visible" 0.0; \
         inherit: "default" 0.0; \
         visible: 1; \
      } \
   }

#define ENTRY_EDITFIELD_FOCUS_PARTS \
   ENTRY_TOP_BOTTOM_PADDING(ENTRY_TOP_BOTTOM_PADDING_HEIGHT) \
   part { name: "focus_bg"; \
      type: RECT; \
      scale: 1; \
      mouse_events: 0; \
      repeat_events: 1; \
      description { state: "default" 0.0; \
         visible: 1; \
         rel1.relative: 0.0 0.0; \
         rel2.relative: 1.0 1.0; \
         color: 7 7 7 255; /*(Changeable UI) color_class: "B099L1";*/ \
      } \
      description { state: "focused" 0.0; \
         inherit: "default" 0.0; \
         visible: 1; \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         color: 7 7 7 255; /*(Changeable UI) color_class: "B099L1D";*/ \
         visible: 1; \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         visible: 0; \
      } \
   } \
   part { name: "focus_left_padding"; \
      type: SPACER; \
      scale: 1; \
      description { state: "default" 0.0; \
         min: 10 0; \
         max: 10 0; \
         fixed: 1 0; \
         align: 0.0 0.5; \
         rel1 { \
            to_x: "focus_bg"; \
            relative: 0.0 0.0; \
         } \
         rel2 { \
            to_x: "focus_bg"; \
            relative: 0.0 1.0; \
         } \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         min: 0 0; \
         max: 0 0; \
      } \
   } \
   part { name: "focus_right_padding"; \
      type: SPACER; \
      scale: 1; \
      description { state: "default" 0.0; \
         min: 10 0; \
         max: 10 0; \
         align: 1.0 0.5; \
         fixed: 1 0; \
         rel1 { \
            to_x: "focus_bg"; \
            relative: 1.0 0.0; \
         } \
         rel2 { \
            to_x: "focus_bg"; \
            relative: 1.0 1.0; \
         } \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         min: 0 0; \
         max: 0 0; \
      } \
   } \
   part { name: "focus_rect_top"; \
      type: RECT; \
      scale: 1; \
      mouse_events: 0; \
      description { state: "default" 0.0; \
         visible: 1; \
         min: 0 ENTRY_FOCUS_RECT_EDGE_INC; \
         max: -1 ENTRY_FOCUS_RECT_EDGE_INC; \
         align: 0.0 0.0; \
         rel1 { \
            to: "focus_bg"; \
            relative: 0.0 0.0; \
         } \
         rel2 { \
            to: "focus_bg"; \
            relative: 1.0 1.0; \
         } \
         color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/ \
      } \
      description { state: "focused" 0.0; \
         inherit: "default" 0.0; \
         color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/ \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/ \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         visible: 0; \
      } \
   } \
   part { name: "focus_rect_left"; \
      type: RECT; \
      scale: 1; \
      mouse_events: 0; \
      description { state: "default" 0.0; \
         visible: 1; \
         min: ENTRY_FOCUS_RECT_EDGE_INC 0; \
         max: ENTRY_FOCUS_RECT_EDGE_INC -1; \
         align: 0.0 0.0; \
         rel1 { \
            to: "focus_rect_top"; \
            relative: 0.0 1.0; \
         } \
         rel2 { \
            to: "focus_bg"; \
            relative: 1.0 1.0; \
         } \
         color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/ \
      } \
      description { state: "focused" 0.0; \
         inherit: "default" 0.0; \
         color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/ \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/ \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         visible: 0; \
      } \
   } \
   part { name: "focus_rect_right"; \
      type: RECT; \
      scale: 1; \
      mouse_events: 0; \
      description { state: "default" 0.0; \
         visible: 1; \
         min: ENTRY_FOCUS_RECT_EDGE_INC 0; \
         max: ENTRY_FOCUS_RECT_EDGE_INC -1; \
         align: 1.0 0.0; \
         rel1 { \
            to: "focus_rect_top"; \
            relative: 0.0 1.0; \
         } \
         rel2 { \
            to: "focus_bg"; \
            relative: 1.0 1.0; \
         } \
         color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/ \
      } \
      description { state: "focused" 0.0; \
         inherit: "default" 0.0; \
         color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/ \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/ \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         visible: 0; \
      } \
   } \
   part { name: "focus_rect_bottom"; \
      type: RECT; \
      scale: 1; \
      mouse_events: 0; \
      description { state: "default" 0.0; \
         visible: 1; \
         min: 0 ENTRY_FOCUS_RECT_EDGE_INC; \
         max: -1 ENTRY_FOCUS_RECT_EDGE_INC; \
         align: 0.0 1.0; \
         rel1 { \
            to: "focus_rect_left"; \
            relative: 1.0 0.0; \
         } \
         rel2 { \
            to: "focus_rect_right"; \
            relative: 0.0 1.0; \
         } \
         color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/ \
      } \
      description { state: "focused" 0.0; \
         inherit: "default" 0.0; \
         color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/ \
      } \
      description { state: "disabled" 0.0; \
         inherit: "default" 0.0; \
         color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/ \
      } \
      description { state: "hidden" 0.0; \
         inherit: "default" 0.0; \
         visible: 0; \
      } \
   }

#define ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART \
   part { name: "event_rect"; \
      type: SWALLOW; \
      scale: 1; \
      description { state: "default" 0.0; \
         rel1.relative: 0.0 0.0; \
         rel2.relative: 1.0 1.0; \
         visible: 1; \
      } \
   }

#define ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM \
   program { name: "event_rect_touch_snd"; \
      signal: "mouse,clicked,1"; \
      source: "event_rect"; \
      action: RUN_PLUGIN "touch_sound";  \
   }

#define ENTRY_EDITFIELD_SCROLLER_EVENT_RECT_SWALLOW_PART \
   part { name: "scroller_event_rect"; \
      type: SWALLOW; \
      scale: 1; \
      description { state: "default" 0.0; \
         rel1.relative: 0.0 0.0; \
         rel2.relative: 1.0 1.0; \
         visible: 1; \
      } \
   }

#define ENTRY_EDITFIELD_SCROLLER_EVENT_RECT_SWALLOW_PROGRAM \
   program { name: "scroller_event_rect_touch_snd"; \
      signal: "mouse,clicked,1"; \
      source: "scroller_event_rect"; \
      action: RUN_PLUGIN "touch_sound"; \
   }

#define ENTRY_EDITFIELD_SWALLOW_PROGRAMS \
   program { name: "scroll_enabled"; \
      signal: "elm,state,scroll,enabled"; \
      source: "*"; \
      script { \
         set_int(scroll_enabled, 1); \
         set_state(PART:"focus_bg", "hidden", 0.0); \
         set_state(PART:"focus_rect_top", "hidden", 0.0); \
         set_state(PART:"focus_rect_left", "hidden", 0.0); \
         set_state(PART:"focus_rect_right", "hidden", 0.0); \
         set_state(PART:"focus_rect_bottom", "hidden", 0.0); \
         set_state(PART:"focus_left_padding", "hidden", 0.0); \
         set_state(PART:"focus_right_padding", "hidden", 0.0); \
      } \
   } \
   program { name: "scroll_disabled"; \
      signal: "elm,state,scroll,disabled"; \
      source: "*"; \
      script { \
         set_int(scroll_enabled, 0); \
         set_state(PART:"focus_bg", "default", 0.0); \
         set_state(PART:"focus_rect_top", "default", 0.0); \
         set_state(PART:"focus_rect_left", "default", 0.0); \
         set_state(PART:"focus_rect_right", "default", 0.0); \
         set_state(PART:"focus_rect_bottom", "default", 0.0); \
         set_state(PART:"focus_left_padding", "default", 0.0); \
         set_state(PART:"focus_right_padding", "default", 0.0); \
      } \
   } \
   program { name: "clear_show"; \
      signal: "elm,state,clear,visible"; \
      source: "*"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"elm.swallow.clear", "visible", 0.0); \
            set_state(PART:"clear_padding", "visible", 0.0); \
         } \
      } \
   } \
   program { name: "clear_hide"; \
      signal: "elm,state,clear,hidden"; \
      source: "*"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"elm.swallow.clear", "default", 0.0); \
            set_state(PART:"clear_padding", "default", 0.0); \
         } \
      } \
   }

#define ENTRY_EDITFIELD_FOCUS_PROGRAMS \
   program { name: "action_focus"; \
      signal: "elm,state,focus,on"; \
      source: "*"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"focus_bg", "focused", 0.0); \
            set_state(PART:"focus_rect_top", "focused", 0.0); \
            set_state(PART:"focus_rect_left", "focused", 0.0); \
            set_state(PART:"focus_rect_right", "focused", 0.0); \
            set_state(PART:"focus_rect_bottom", "focused", 0.0); \
         } \
         set_state(PART:"elm.text", "focused", 0.0); \
      } \
   } \
   program { name: "action_unfocus"; \
      signal: "elm,state,focus,off"; \
      source: "*"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"focus_bg", "default", 0.0); \
            set_state(PART:"focus_rect_top", "default", 0.0); \
            set_state(PART:"focus_rect_left", "default", 0.0); \
            set_state(PART:"focus_rect_right", "default", 0.0); \
            set_state(PART:"focus_rect_bottom", "default", 0.0); \
         } \
         set_state(PART:"elm.text", "default", 0.0); \
      } \
   } \
   program { name: "enable_focus_bg"; \
      signal: "elm,state,enabled"; \
      source: "elm"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"focus_bg", "default", 0.0); \
            set_state(PART:"focus_rect_top", "default", 0.0); \
            set_state(PART:"focus_rect_left", "default", 0.0); \
            set_state(PART:"focus_rect_right", "default", 0.0); \
            set_state(PART:"focus_rect_bottom", "default", 0.0); \
         } \
      } \
   } \
   program { name: "disable_focus_bg"; \
      signal: "elm,state,disabled"; \
      source: "elm"; \
      script { \
         new v; \
         v = get_int(scroll_enabled); \
         if (!v) { \
            set_state(PART:"focus_bg", "disabled", 0.0); \
            set_state(PART:"focus_rect_top", "disabled", 0.0); \
            set_state(PART:"focus_rect_left", "disabled", 0.0); \
            set_state(PART:"focus_rect_right", "disabled", 0.0); \
            set_state(PART:"focus_rect_bottom", "disabled", 0.0); \
         } \
      } \
   }

#define ENTRY_SOUND_PROGRAM \
   program { name: "touch_snd"; \
      signal: "mouse,clicked,1"; \
      source: "elm.text"; \
      script { \
         new st[31]; \
         new Float:vl; \
         get_state(PART:"elm.text", st, 30, vl); \
         if (strcmp(st, "disabled")) \
            run_program(PROGRAM:"play_sound"); \
      } \
   } \
   program { name: "play_sound"; \
      action: RUN_PLUGIN "touch_sound"; \
   }

group { name: "elm/entry/base/editfield";
   alias: "elm/entry/base-mixedwrap/editfield";
   alias: "elm/entry/base/editfield/default";
   alias: "elm/entry/base/editfield/lighting";
   alias: "elm/entry/base/editfield/multiline";
   alias: "elm/entry/base/editfield/multiline/default";
   alias: "elm/entry/base/editfield/multiline/lighting";
   alias: "elm/entry/base/editfield/searchbar/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_textblock_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=mixed left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=mixed left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=mixed left_margin=1 right_margin=2 text_class=T121D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF left_margin=4 right_margin=2 ellipsis=1.0 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G left_margin=4 right_margin=2 ellipsis=1.0 text_class=T121G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_textblock_guide_style";
               min: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
            style: "editfield_textblock_style";
               min: 0 1;
               max: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_focused_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_disabled_style";
               min: 0 1;
               max: 0 1;
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-noedit/editfield";
   alias: "elm/entry/base-noedit-mixedwrap/editfield";
   alias: "elm/entry/base-noedit/editfield/default";
   alias: "elm/entry/base-noedit/editfield/lighting";
   alias: "elm/entry/base-noedit/editfield/multiline";
   alias: "elm/entry/base-noedit/editfield/multiline/default";
   alias: "elm/entry/base-noedit/editfield/multiline/lighting";
   inherit: "elm/entry/base/editfield";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base/editfield/fixed_size";
   alias: "elm/entry/base-mixedwrap/editfield/fixed_size";
   alias: "elm/entry/base/editfield/multiline/fixed_size";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_textblock_fixed_size_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=mixed left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_fixed_size_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=mixed left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_fixed_size_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=mixed left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=mixed left_margin=1 right_margin=2 text_class=T121D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_fixed_size_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF left_margin=4 right_margin=2 ellipsis=1.0 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G left_margin=4 right_margin=2 ellipsis=1.0 text_class=T121G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_textblock_fixed_size_guide_style";
               min: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
            style: "editfield_textblock_fixed_size_style";
               min: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_fixed_size_focused_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_fixed_size_disabled_style";
               min: 0 1;
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-noedit/editfield/fixed_size";
   alias: "elm/entry/base-noedit-mixedwrap/editfield/fixed_size";
   alias: "elm/entry/base-noedit/editfield/multiline/fixed_size";
   inherit: "elm/entry/base/editfield/fixed_size";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-charwrap/editfield";
   alias: "elm/entry/base/editfield/char_wrap";
   alias: "elm/entry/base/editfield/default/char_wrap";
   alias: "elm/entry/base/editfield/lighting/char_wrap";
   alias: "elm/entry/base/editfield/multiline/char_wrap";
   alias: "elm/entry/base/editfield/multiline/default/char_wrap";
   alias: "elm/entry/base/editfield/multiline/lighting/char_wrap";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_textblock_char_wrap_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=char left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=char left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDTIFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=char left_margin=1 right_margin=2 text_class=T121D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF left_margin=4 right_margin=2 ellipsis=1.0 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G left_margin=4 right_margin=2 ellipsis=1.0 text_class=T121G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_textblock_char_wrap_guide_style";
               min: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "editfield_textblock_char_wrap_style";
               min: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_char_wrap_focused_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_char_wrap_disabled_style";
               min: 0 1;
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-noedit-charwrap/editfield";
   alias: "elm/entry/base-noedit/editfield/char_wrap";
   alias: "elm/entry/base-noedit/editfield/default/char_wrap";
   alias: "elm/entry/base-noedit/editfield/lighting/char_wrap";
   alias: "elm/entry/base-noedit/editfield/multiline/char_wrap";
   alias: "elm/entry/base-noedit/editfield/multiline/default/char_wrap";
   alias: "elm/entry/base-noedit/editfield/multiline/lighting/char_wrap";
   inherit: "elm/entry/base-charwrap/editfield";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-charwrap/editfield/fixed_size";
   alias: "elm/entry/base/editfield/char_wrap/fixed_size";
   alias: "elm/entry/base/editfield/multiline/char_wrap/fixed_size";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_textblock_char_wrap_fixed_size_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=char left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_fixed_size_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=char left_margin=1 right_margin=2 text_class=T121";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_fixed_size_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=char left_margin=1 right_margin=2 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDTIFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=char left_margin=1 right_margin=2 text_class=T121D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_textblock_char_wrap_fixed_size_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF left_margin=4 right_margin=2 ellipsis=1.0 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G left_margin=4 right_margin=2 ellipsis=1.0 text_class=T121G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_textblock_char_wrap_fixed_size_guide_style";
               min: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "editfield_textblock_char_wrap_fixed_size_style";
               min: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_char_wrap_fixed_size_focused_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_textblock_char_wrap_fixed_size_disabled_style";
               min: 0 1;
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-noedit-charwrap/editfield/fixed_size";
   alias: "elm/entry/base-noedit/editfield/char_wrap/fixed_size";
   alias: "elm/entry/base-noedit/editfield/multiline/char_wrap/fixed_size";
   inherit: "elm/entry/base-charwrap/editfield/fixed_size";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-single/editfield";
   alias: "elm/entry/base-single/editfield/default";
   alias: "elm/entry/base-single/editfield/lighting";
   alias: "elm/entry/base-single/editfield/singleline";
   alias: "elm/entry/base-single/editfield/singleline/default";
   alias: "elm/entry/base-single/editfield/singleline/lighting";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_single_textblock_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=none left_margin=1 right_margin=3 text_class=T121";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=none left_margin=1 right_margin=3 text_class=T121";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=1 right_margin=3 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=none left_margin=1 right_margin=3 text_class=T121D";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF wrap=none left_margin=4 right_margin=3 text_class=entry ellipsis=1.0";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G wrap=none left_margin=4 right_margin=3 text_class=T121G ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: ; // selection over
         //source3: ; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "editfield_single_textblock_style";
               min: 1 1;
               max: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_single_textblock_focused_style";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_single_textblock_disabled_style";
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-single-noedit/editfield";
   alias: "elm/entry/base-single-noedit/editfield/default";
   alias: "elm/entry/base-single-noedit/editfield/lighting";
   alias: "elm/entry/base-single-noedit/editfield/singleline";
   alias: "elm/entry/base-single-noedit/editfield/singleline/default";
   alias: "elm/entry/base-single-noedit/editfield/singleline/lighting";
   inherit: "elm/entry/base-single/editfield";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-single/editfield/fixed_size";
   alias: "elm/entry/base-single/editfield/singleline/fixed_size";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "editfield_single_textblock_fixed_size_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=none left_margin=1 right_margin=3 text_class=T121";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_fixed_size_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=entry";
          // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#CCCCCCFF color_class=T121 wrap=none left_margin=1 right_margin=3 text_class=T121";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_fixed_size_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=1 right_margin=3 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#333333FF color_class=T121D wrap=none left_margin=1 right_margin=3 text_class=T121D";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_single_textblock_fixed_size_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF wrap=none left_margin=4 right_margin=3 text_class=entry ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_TEXT_SIZE_INC" color=#ffffff color=#848484FF color_class=T121G wrap=none left_margin=4 right_margin=3 text_class=T121G ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   ENTRY_EDITFIELD_FOCUS_DATA
   parts {
      ENTRY_EDITFIELD_FOCUS_PARTS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PART
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_single_textblock_fixed_size_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: ; // selection over
         //source3: ; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "editfield_single_textblock_fixed_size_style";
               min: 1 1;
               max: 0 1;
            }
            ENTRY_EDITFIELD_TEXTBLOCK_DEFAULT_REL
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_single_textblock_fixed_size_focused_style";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_single_textblock_fixed_size_disabled_style";
            }
         }
      }
      ENTRY_EDITFIELD_SWALLOW_PARTS
   }
   ENTRY_EDITFIELD_SWALLOW_SCRIPT_PUBLIC
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      ENTRY_SOUND_PROGRAM
      ENTRY_EDITFIELD_SWALLOW_PROGRAMS
      ENTRY_EDITFIELD_FOCUS_PROGRAMS
      ENTRY_EDITFIELD_EVENT_RECT_SWALLOW_PROGRAM
   }
}

group { name: "elm/entry/base-single-noedit/editfield/fixed_size";
   alias: "elm/entry/base-single-noedit/editfield/singleline/fixed_size";
   inherit: "elm/entry/base-single/editfield/fixed_size";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-single/editfield/searchbar/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   styles {
      style { name: "editfield_searchbar_single_textblock_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#CCCCCCFF color_class=T101 wrap=none left_margin=1 right_margin=3 text_class=T101";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#CCCCCCFF color_class=T101 wrap=none left_margin=1 right_margin=3 text_class=T101";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#333333FF color_class=T101D wrap=none left_margin=1 right_margin=3 text_class=T101D";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF wrap=none left_margin=4 right_margin=3 text_class=tizen ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#848484FF color_class=T101G wrap=none left_margin=4 right_margin=3 text_class=T101G ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
      style { name: "editfield_searchbar_single_textblock_disabled_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=4 right_margin=3 text_class=tizen ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#333333FF color_class=T101D wrap=none left_margin=4 right_margin=3 text_class=T101D ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   script {
      public guide_hidden;
      public disabled;
   }
   parts {
      ENTRY_TOP_BOTTOM_PADDING(ENTRY_TOP_BOTTOM_PADDING_HEIGHT)
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_searchbar_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_disabled_guide_style";
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            ENTRY_TOP_BOTTOM_REL
            text {
               style: "editfield_searchbar_single_textblock_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_focused_style";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(disabled, 1);
            if (!get_int(guide_hidden)) {
               set_state(PART:"elm.guide", "disabled", 0.0);
            }
            set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(disabled, 0);
            if (!get_int(guide_hidden)) {
               set_state(PART:"elm.guide", "default", 0.0);
            }
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         script {
            set_int(guide_hidden, 1);
            set_state(PART:"elm.guide", "hidden", 0.0);
         }
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         script {
            set_int(guide_hidden, 0);
            if (get_int(disabled)) {
               set_state(PART:"elm.guide", "disabled", 0.0);
            } else {
               set_state(PART:"elm.guide", "default", 0.0);
            }
         }
      }
      ENTRY_SOUND_PROGRAM
   }
}

group { name: "elm/entry/base-single-noedit/editfield/searchbar/default";
   inherit: "elm/entry/base-single/editfield/searchbar/default";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/base-single/editfield/searchbar/fixed_size";
   alias: "elm/entry/base-single/editfield/popup";
   alias: "elm/entry/base-single/editfield/password/popup";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   styles {
      style { name: "editfield_searchbar_single_textblock_fixed_size_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#CCCCCCFF color_class=T101 wrap=none left_margin=1 right_margin=3 text_class=T101";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_fixed_size_focused_style";
         base: "font=Tizen:style=Regular font_size=28 color=#CCCCCCFF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#CCCCCCFF color_class=T101 wrap=none left_margin=1 right_margin=3 text_class=T101";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_fixed_size_disabled_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=1 right_margin=3 text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#333333FF color_class=T101D wrap=none left_margin=1 right_margin=3 text_class=T101D";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR_INC" color="ENTRY_PREEDIT_TEXT_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR_INC;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR_INC" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR_INC;
      }
      style { name: "editfield_searchbar_single_textblock_fixed_size_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#848484FF wrap=none left_margin=4 right_margin=3 text_class=tizen ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#848484FF color_class=T101G wrap=none left_margin=4 right_margin=3 text_class=T101G ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
      style { name: "editfield_searchbar_single_textblock_fixed_size_disabled_guide_style";
         base: "font=Tizen:style=Regular font_size=28 color=#333333FF wrap=none left_margin=4 right_margin=3 text_class=T101D ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Regular font_size="ENTRY_EDITFIELD_SEARCHBAR_TEXT_SIZE_INC" color=#FFFFFF color=#333333FF color_class=T101D wrap=none left_margin=4 right_margin=3 text_class=T101D ellipsis=1.0";
         tag:  "br" "";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   script {
      public guide_hidden;
      public disabled;
   }
   parts {
      ENTRY_TOP_BOTTOM_PADDING(ENTRY_TOP_BOTTOM_PADDING_HEIGHT)
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "editfield_searchbar_single_textblock_fixed_size_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_fixed_size_disabled_guide_style";
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            ENTRY_TOP_BOTTOM_REL
            text {
               style: "editfield_searchbar_single_textblock_fixed_size_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_fixed_size_focused_style";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "editfield_searchbar_single_textblock_fixed_size_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         script {
            set_int(disabled, 1);
            if (!get_int(guide_hidden)) {
               set_state(PART:"elm.guide", "disabled", 0.0);
            }
            set_state(PART:"elm.text", "disabled", 0.0);
         }
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         script {
            set_int(disabled, 0);
            if (!get_int(guide_hidden)) {
               set_state(PART:"elm.guide", "default", 0.0);
            }
            set_state(PART:"elm.text", "default", 0.0);
         }
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         script {
            set_int(guide_hidden, 1);
            set_state(PART:"elm.guide", "hidden", 0.0);
         }
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         script {
            set_int(guide_hidden, 0);
            if (get_int(disabled)) {
               set_state(PART:"elm.guide", "disabled", 0.0);
            } else {
               set_state(PART:"elm.guide", "default", 0.0);
            }
         }
      }
      ENTRY_SOUND_PROGRAM
   }
}

group { name: "elm/entry/base-single-noedit/editfield/searchbar/fixed_size";
   alias: "elm/entry/base-single-noedit/editfield/popup";
   alias: "elm/entry/base-single-noedit/editfield/password/popup";
   inherit: "elm/entry/base-single/editfield/searchbar/fixed_size";
   parts {
      part { name: "elm.text";
         entry_mode: PLAIN;
         source4: "";
      }
   }
   programs {
      program { name: "touch_snd";
      }
   }
}

group { name: "elm/entry/emoticon/angry/default"; images.image:
   "emo-angry.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-angry.png"; } } } }
group { name: "elm/entry/emoticon/angry-shout/default"; images.image:
   "emo-angry-shout.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-angry-shout.png"; } } } }
group { name: "elm/entry/emoticon/guilty/default"; images.image:
   "emo-guilty.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-guilty.png"; } } } }
group { name: "elm/entry/emoticon/haha/default"; images.image:
   "emo-haha.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-haha.png"; } } } }
group { name: "elm/entry/emoticon/half-smile/default"; images.image:
   "emo-half-smile.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-half-smile.png"; } } } }
group { name: "elm/entry/emoticon/happy/default"; images.image:
   "emo-happy.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-happy.png"; } } } }
group { name: "elm/entry/emoticon/kiss/default"; images.image:
   "emo-kiss.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-kiss.png"; } } } }
group { name: "elm/entry/emoticon/little-bit-sorry/default"; images.image:
   "emo-little-bit-sorry.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-little-bit-sorry.png"; } } } }
group { name: "elm/entry/emoticon/love/default"; images.image:
   "emo-love.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-love.png"; } } } }
group { name: "elm/entry/emoticon/minimal-smile/default"; images.image:
   "emo-minimal-smile.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-minimal-smile.png"; } } } }
group { name: "elm/entry/emoticon/omg/default"; images.image:
   "emo-omg.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-omg.png"; } } } }
group { name: "elm/entry/emoticon/smile/default"; images.image:
   "emo-smile.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-smile.png"; } } } }
group { name: "elm/entry/emoticon/sorry/default"; images.image:
   "emo-sorry.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-sorry.png"; } } } }
group { name: "elm/entry/emoticon/surprised/default"; images.image:
   "emo-surprised.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-surprised.png"; } } } }
group { name: "elm/entry/emoticon/tongue-dangling/default"; images.image:
   "emo-tongue-dangling.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-tongue-dangling.png"; } } } }
group { name: "elm/entry/emoticon/very-sorry/default"; images.image:
   "emo-very-sorry.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-very-sorry.png"; } } } }
group { name: "elm/entry/emoticon/wink/default"; images.image:
   "emo-wink.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-wink.png"; } } } }
group { name: "elm/entry/emoticon/worried/default"; images.image:
   "emo-worried.png" COMP; parts { part { name: "icon"; mouse_events: 0; description { state: "default" 0.0; max: ENTRY_EMOTICON_SIZE; image.normal:
            "emo-worried.png"; } } } }

group { name: "elm/entry/base/default";
   alias: "elm/entry/base-mixedwrap/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "entry_textblock_style";
         base: "font=Tizen:style=Roman font_size=28 color=#F9F9F9FF left_margin=1 right_margin=2 wrap=mixed text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#F9F9F9FF color_class=T122 left_margin=1 right_margin=2 wrap=mixed text_class=T122";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_textblock_disabled_style";
         base: "font=Tizen:style=Roman font_size=28 color=#333333FF left_margin=1 right_margin=2 wrap=mixed text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#333333FF color_class=T122D left_margin=1 right_margin=2 wrap=mixed text_class=T122D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_textblock_guide_style";
         base: "font=Tizen:style=Roman font_size=28 color=#848484FF left_margin=4 right_margin=2 wrap=mixed text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#848484FF color_class=T122G left_margin=4 right_margin=2 wrap=mixed text_class=T122G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-charwrap/default";
   alias: "elm/entry/base/char_wrap";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "entry_textblock_char_wrap_style";
         base: "font=Tizen:style=Roman font_size=28 color=#F9F9F9FF wrap=char left_margin=1 right_margin=2 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#F9F9F9FF color_class=T122 wrap=char left_margin=1 right_margin=2 text_class=T122";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_textblock_char_wrap_disabled_style";
         base: "font=Tizen:style=Roman font_size=28 color=#333333FF wrap=char left_margin=1 right_margin=2 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#333333FF color_class=T122D wrap=char left_margin=1 right_margin=2 text_class=T122D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_textblock_char_wrap_guide_style";
         base: "font=Tizen:style=Roman font_size=28 color=#848484FF wrap=char left_margin=4 right_margin=2 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#848484FF color_class=T122G wrap=char left_margin=4 right_margin=2 text_class=T122G";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_char_wrap_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_char_wrap_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_char_wrap_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
	 program { name: "focus";
        signal: "load";
	    source: "";
	    action: FOCUS_SET;
	    target: "elm.text";
	 }
	 program { name: "disable";
	    signal: "elm,state,disabled";
	    source: "elm";
	    action: STATE_SET "disabled" 0.0;
	    target: "elm.text";
	 }
	 program { name: "enable";
	    signal: "elm,state,enabled";
	    source: "elm";
	    action: STATE_SET "default" 0.0;
	    target: "elm.text";
	 }
     program { name: "gdisable";
        signal: "elm,guide,disabled";
        source: "elm";
        action: STATE_SET "hidden" 0.0;
        target: "elm.guide";
     }
     program { name: "genable";
        signal: "elm,guide,enabled";
        source: "elm";
        action: STATE_SET "default" 0.0;
        target: "elm.guide";
     }
     program { name: "touch_snd";
        signal: "mouse,clicked,1";
        source: "elm.text";
        action: RUN_PLUGIN "touch_sound";
     }
  }
}

group { name: "elm/entry/base-nowrap/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "entry_textblock_style";
               min: 1 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   styles {
      style { name: "entry_single_textblock_style";
         base: "font=Tizen:style=Roman font_size=28 color=#F9F9F9FF wrap=none left_margin=1 right_margin=3 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#F9F9F9FF color_class=T122 wrap=none left_margin=1 right_margin=3 text_class=T122";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_single_textblock_disabled_style";
         base: "font=Tizen:style=Roman font_size=28 color=#333333FF wrap=none left_margin=1 right_margin=3 text_class=entry";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#333333FF color_class=T122D wrap=none left_margin=1 right_margin=3 text_class=T122D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link " "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_single_textblock_guide_style";
         base: "font=Tizen:style=Roman font_size=28 color=#848484FF wrap=none left_margin=4 right_margin=3 text_class=entry ellipsis=1.0";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color=#ffffff color=#848484FF color_class=T122G wrap=none left_margin=4 right_margin=3 text_class=T122G ellipsis=1.0";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_single_textblock_guide_style";
               min: 0 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "entry_single_textblock_style";
               min: 1 1;
               max: 0 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single-noedit/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "entry_single_textblock_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
   }
}

group { name: "elm/entry/base-noedit/default";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "entry_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_textblock_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
   }
}

   group { name: "elm/entry/base-noedit-charwrap/default";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_textblock_char_wrap_guide_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PLAIN;
            select_mode: BLOCK_HANDLE;
            cursor_mode: BEFORE;
            multiline: 1;
            source: "elm/entry/selection/default"; // selection under
            //source2: "X"; // selection over
            //source3: "X"; // cursor under
            source5: "elm/entry/anchor/default"; // anchor under
            source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
            source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
            source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
            //source10: ""; // start edge selection
            //source11: ""; // end edge selection
            description { state: "default" 0.0;
               fixed: 1 0;
               text {
                  style: "entry_textblock_char_wrap_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_textblock_char_wrap_disabled_style";
               }
            }
         }
      }
      programs {
        program { name: "focus";
           signal: "load";
           source: "";
           action: FOCUS_SET;
           target: "elm.text";
        }
        program { name: "disable";
           signal: "elm,state,disabled";
           source: "elm";
           action: STATE_SET "disabled" 0.0;
           target: "elm.text";
        }
        program { name: "enable";
           signal: "elm,state,enabled";
           source: "elm";
           action: STATE_SET "default" 0.0;
           target: "elm.text";
        }
        program { name: "gdisable";
           signal: "elm,guide,disabled";
           source: "elm";
           action: STATE_SET "hidden" 0.0;
           target: "elm.guide";
        }
        program { name: "genable";
           signal: "elm,guide,enabled";
           source: "elm";
           action: STATE_SET "default" 0.0;
           target: "elm.guide";
        }
      }
   }

   group { name: "elm/entry/base-noedit-mixedwrap/default";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_textblock_guide_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PLAIN;
            select_mode: BLOCK_HANDLE;
            cursor_mode: BEFORE;
            multiline: 1;
            source: "elm/entry/selection/default"; // selection under
            //source2: "X"; // selection over
            //source3: "X"; // cursor under
            source5: "elm/entry/anchor/default"; // anchor under
            source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
            source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
            source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
            //source10: ""; // start edge selection
            //source11: ""; // end edge selection
            description { state: "default" 0.0;
               fixed: 1 0;
               text {
                  style: "entry_textblock_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "entry_textblock_disabled_style";
               }
            }
         }
      }
      programs {
         program { name: "focus";
            signal: "load";
            source: "";
            action: FOCUS_SET;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "gdisable";
            signal: "elm,guide,disabled";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "elm.guide";
         }
         program { name: "genable";
            signal: "elm,guide,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.guide";
         }
      }
   }

   group { name: "elm/entry/base-nowrap-noedit/default";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_textblock_guide_style";
                  min: 0 1;
                  align: 0.0 0.0;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
           type: TEXTBLOCK;
           mouse_events: 1;
           scale: 1;
           entry_mode: PLAIN;
           select_mode: BLOCK_HANDLE;
           cursor_mode: BEFORE;
           multiline: 1;
           source: "elm/entry/selection/default"; // selection under
           //source2: "X"; // selection over
           //source3: "X"; // cursor under
           source5: "elm/entry/anchor/default"; // anchor under
           source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
           source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
           source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
           //source10: ""; // start edge selection
           //source11: ""; // end edge selection
           description { state: "default" 0.0;
              text {
                 style: "entry_textblock_style";
                 min: 1 1;
                 align: 0.0 0.0;
              }
           }
           description { state: "disabled" 0.0;
              inherit: "default" 0.0;
              text {
                 style: "entry_textblock_disabled_style";
              }
           }
         }
      }
      programs {
         program { name: "focus";
            signal: "load";
            source: "";
            action: FOCUS_SET;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "gdisable";
            signal: "elm,guide,disabled";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "elm.guide";
         }
         program { name: "genable";
            signal: "elm,guide,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.guide";
         }
      }
   }

  group { name: "elm/entry/base-password/default";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "entry_single_textblock_guide_style";
                  min: 0 1;
                  max: 0 1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PASSWORD;
            select_mode: BLOCK_HANDLE;
            cursor_mode: BEFORE;
            multiline: 0;
            source: "elm/entry/selection/default"; // selection under
            //source2: "X"; // selection over
            //source3: "X"; // cursor under
            source4: "elm/entry/cursor/default"; // cursorover
            source5: "elm/entry/anchor/default"; // anchor under
            source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
            source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
            source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
            //source10: ""; // start edge selection
            //source11: ""; // end edge selection
            description { state: "default" 0.0;
               text {
                  style: "entry_single_textblock_style";
                  repch: "•";
                  min: 1 1;
                  max: 0 1;
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                 style: "entry_single_textblock_disabled_style";
               }
            }
         }
      }
      programs {
         program { name: "focus";
            signal: "load";
            source: "";
            action: FOCUS_SET;
            target: "elm.text";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.text";
         }
         program { name: "gdisable";
            signal: "elm,guide,disabled";
            source: "elm";
            action: STATE_SET "hidden" 0.0;
            target: "elm.guide";
         }
         program { name: "genable";
            signal: "elm,guide,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.guide";
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "elm.text";
            action: RUN_PLUGIN "touch_sound";
         }
      }
   }

   group { name: "elm/entry/base-password/editfield/popup";
      inherit: "elm/entry/base-password/default";
      alias: "elm/entry/base-password/editfield/password/popup";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         ENTRY_TOP_BOTTOM_PADDING(ENTRY_TOP_BOTTOM_PADDING_HEIGHT)
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "editfield_searchbar_single_textblock_fixed_size_guide_style";
                  min: 0 1;
                  max: 0 1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PASSWORD;
            select_mode: BLOCK_HANDLE;
            cursor_mode: BEFORE;
            multiline: 0;
            source: "elm/entry/selection/default"; // selection under
            //source2: "X"; // selection over
            //source3: "X"; // cursor under
            source4: "elm/entry/cursor/default"; // cursorover
            source5: "elm/entry/anchor/default"; // anchor under
            source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
            source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
            source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
            //source10: ""; // start edge selection
            //source11: ""; // end edge selection
            description { state: "default" 0.0;
               ENTRY_TOP_BOTTOM_REL
               text {
                  style: "editfield_searchbar_single_textblock_fixed_size_style";
                  repch: "•";
                  min: 1 1;
                  max: 0 1;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "editfield_searchbar_single_textblock_fixed_size_focused_style";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "editfield_searchbar_single_textblock_fixed_size_disabled_style";
               }
            }
         }
      }
   }

   group { name: "elm/entry/cursor/default";
      parts {
         part { name: "clip2";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "clip";
               rel2.to: "clip";
               visible: 0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clip";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "clip2";
            description { state: "default" 0.0;
               rel1.offset: -10 0;
               rel2.offset: 9 9;
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
                visible: 0;
            }
         }
         part { name: "base";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "clip";
            description { state: "default" 0.0;
               min: 2 2;
               align: 0.5 1.0;
               color: 0 0 0 0;
            }
         }
         part { name: "glow";
            type: RECT;
            mouse_events: 0;
            scale: 1;
            clip_to: "clip2";
            description { state: "default" 0.0;
               min: 3 0;
               fixed: 1 0;
               align: 0.5 0.5;
               rel1 {
                  relative: 0.0  0.0;
                  offset: 0 -2;
               }
               rel2 {
                  relative: 0.0  1.0;
                  offset: 0 -2;
               }
               color: 0 110 255 255; /*(Changeable UI) color_class: "B084";*/
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               color: 0 0 0 0;
            }
         }
      }
      programs {
        program { name: "show";
           action: STATE_SET "hidden" 0.0;
           in: 0.6 0.0;
           target: "glow";
           after: "show4";
        }
        program { name: "show4";
           action: STATE_SET "default" 0.0;
           in: 0.6 0.0;
           target: "glow";
           after: "show";
        }
        program { name: "focused";
           signal: "elm,action,focus";
           source: "elm";
           action: STATE_SET "focused" 0.0;
           target: "clip2";
           after: "show4";
        }
        program { name: "unfocused";
           signal: "elm,action,unfocus";
           source: "elm";
           action: STATE_SET "default" 0.0;
           target: "clip2";
           after: "stop_glow";
        }
        program { name: "stop_glow";
           action: ACTION_STOP;
           target: "show";
           target: "show4";
        }
        program { name: "show_cursor";
           signal: "elm,action,show,cursor";
           source: "elm";
           action: ACTION_STOP;
           target: "show";
           target: "show4";
           after: "show_cursor1";
        }
        program { name: "show_cursor1";
           action: STATE_SET "default" 0.0;
           target: "glow";
           after: "show";
        }
      }
   }

   group { name: "elm/entry/selection/default";
     parts {
        part { name: "bg";
           type: RECT;
           scale: 1;
           mouse_events: 0;
           description { state: "default" 0.0;
              color: 0 110 255 91; /*(Changeable UI) color_class: "B132";*/
           }
        }
     }
   }

   group { name: "elm/entry/selection/block_handle_left";
      data.item: "height" "79";
      data.item: "gap" "32";
    }

    group { name: "elm/entry/selection/block_handle_right";
       data.item: "height" "79";
       data.item: "gap" "32";
    }

   group { name: "elm/entry/cursor_handle/default";
		images {
		  image: "b_handler_bottom_1.png" COMP;
  		  image: "b_handler_bottom_2.png" COMP;
		  image: "b_handler_top_1.png" COMP;
  		  image: "b_handler_top_2.png" COMP;
		}
		parts {
			part { name: "handle";
				scale: 1;
				mouse_events: 1;
				description { state: "default" 0.0;
					max: 41 52;
					min: 41 52;
					align: 0 0;
					visible: 0;
					align: 0.5 0;
					image {
						normal: "b_handler_bottom_1.png";
						border: 0 0 0 0;
					}
					image.middle: SOLID;
					color: 99 173 221 255; /*(Changeable UI) color_class: "B103L1";*/
					fill.smooth: 0;
				}
				description { state: "show" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "top" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					align: 0.5 1.0;
					image {
						normal: "b_handler_top_1.png";
						border: 0 0 0 0;
					}
				}
			}
			part { name: "handle_mask";
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "handle";
					rel2.to: "handle";
					visible: 0;
					align: 0.5 0;
					image {
						normal: "b_handler_bottom_2.png";
						border: 0 0 0 0;
					}
					image.middle: SOLID;
					color: 249 249 249 255; /*(Changeable UI) color_class: "B103L2";*/
					fill.smooth: 0;
				}
				description { state: "show" 0.0;
					inherit: "default" 0.0;
					visible: 1;
				}
				description { state: "top" 0.0;
					inherit: "default" 0.0;
					visible: 1;
					align: 0.5 1.0;
					image {
						normal: "b_handler_top_2.png";
						border: 0 0 0 0;
					}
				}
			}
		}
		script {
			public on_top;
		}
		programs {
			program { name: "focused";
				signal: "edje,focus,in";
				source: "edje";
				script {
					new on_top_val = get_int(on_top);
					if (on_top_val)
					{
						set_state(PART:"handle", "top", 0.0);
						set_state(PART:"handle_mask", "top", 0.0);
					}
					else
					{
						set_state(PART:"handle", "show", 0.0);
						set_state(PART:"handle_mask", "show", 0.0);
					}
				}
			}
			program { name: "unfocused";
				signal: "edje,focus,out";
				source: "edje";
				script {
					set_state(PART:"handle", "default", 0.0);
					set_state(PART:"handle_mask", "default", 0.0);
				}
			}
			program { name: "show";
				signal: "edje,cursor,handle,show";
				source: "edje";
				script {
					set_int(on_top, 0);
					set_state(PART:"handle", "show", 0.0);
					set_state(PART:"handle_mask", "show", 0.0);
				}
			}
			program { name: "hide";
				signal: "edje,cursor,handle,hide";
				source: "edje";
				script {
					set_state(PART:"handle", "default", 0.0);
					set_state(PART:"handle_mask", "default", 0.0);
				}
			}
			program { name: "top";
				signal: "edje,cursor,handle,top";
				source: "edje";
				script {
					set_int(on_top, 1);
					set_state(PART:"handle", "top", 0.0);
					set_state(PART:"handle_mask", "top", 0.0);
				}
			}
		}
	}

    group { name: "elm/entry/selection/block_handle_edge_left";
    }

    group { name: "elm/entry/selection/block_handle_edge_right";
    }

    group { name: "elm/entry/anchor/default";
       parts {
          part { name: "bg";
            type: SPACER;
            description { state: "default" 0.0;
            }
          }
       }
    }

    group { name: "elm/entry/preedit/default";
        parts {
            part { name: "bg";
                type: RECT;
                mouse_events: 0;
                description { state: "default" 0.0;
                    color: 128 128 128 255;
                }
            }
        }
   }

#define MAGNIFIER_SCALE 1.5

	group { name: "elm/entry/magnifier/fixed-size";
		data.item: "height" MAGNIFIER_HEIGHT_FIXED;
		data.item: "scale" MAGNIFIER_SCALE;
		data.item: "arrow" MAGNIFIER_ARROW_HEIGHT_INC;
		images {
		  image: "tw_magnifier_bg.#.png" COMP;
		  image: "tw_magnifier_bg_effect.#.png" COMP;
  		  image: "tw_magnifier_bg_line.#.png" COMP;
		}
		parts {
			part { name: "bg";
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					min: MAGNIFIER_WIDTH_FIXED MAGNIFIER_HEIGHT_FIXED;
					image.normal: "tw_magnifier_bg.#.png";
					color: 0 25 48 255; /*(Changeable UI) color_class: "B131";*/
				}
				description { state: "custom_cc" 0.0;
					inherit: "default" 0.0;
					/*(Changeable UI) color_class: "mgf_custom_cc";*/
				}
			}
			part { name: "bg_line";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "bg";
					rel2.to: "bg";
					image.normal: "tw_magnifier_bg_line.#.png";
					color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
					align: 0.0 0.0;
				}
			}
			part { name: "bg_effect";
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					rel1.to: "bg";
					rel2.to: "bg";
					image.normal: "tw_magnifier_bg_effect.#.png";
					color: 7 7 7 255; /*(Changeable UI) color_class: "B161";*/
					align: 0.0 0.0;
				}
			}
			part { name: "left_offset";
				type: SPACER;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					min: MAGNIFIER_LEFT_OFFSET_INC;
					max: MAGNIFIER_LEFT_OFFSET_INC;
					rel1 {
						to: "bg";
						relative: 0.0 0.0;
					}
					align: 0.0 0.0;
				}
			}
			part { name: "right_offset";
				type: SPACER;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					min: MAGNIFIER_RIGHT_OFFSET_INC;
					max: MAGNIFIER_RIGHT_OFFSET_INC;
					rel1 {
						to: "bg";
						relative: 1.0 1.0;
					}
					rel2 {
						to: "bg";
						relative: 1.0 1.0;
					}
					align: 1.0 1.0;
				}
			}
			part { name: "swallow";
				type: SWALLOW;
				mouse_events: 0;
				scale: 1;
				description { state: "default" 0.0;
					fixed: 1 1;
					align: 0.0 0.0;
					rel1 {
						to: "left_offset";
						relative: 1.0 1.0;
					}
					rel2 {
						to: "right_offset";
						relative: 0.0 0.0;
					}
				}
			}
		}
		script {
			public message(Msg_Type:type, id, ...) {
				if (type == MSG_INT_SET) {
					new r, g, b, a;

					r = getarg(2);
					g = getarg(3);
					b = getarg(4);
					a = getarg(5);

					set_state(PART:"bg", "custom_cc", 0.0);
					set_color_class("mgf_custom_cc", r, g, b, a);
				}
			}
		}
	}

    group { name: "elm/entry/matchlist/default";
        data.item: "max_height" "230";
        parts {
            part { name: "base";
                type: SPACER;
                scale : 1;
                description { state: "default" 0.0;
                    rel1 {
                        relative: 0.0 0.0;
                        offset: 0 20;
                    }
                    rel2 {
                        relative: 1.0 1.0;
                        offset: 0 20;
                    }
                }
            }
            part { name: "elm.swallow.content";
                type: SWALLOW;
                description { state: "default" 0.0;
                    align: 0.0 0.0;
                    rel1 {
                        to: "base";
                    }
                    rel2 {
                        to: "base";
                    }
                }
            }
        }
    }

group { name: "elm/entry/base/font_color_black";
   alias: "elm/entry/base-mixedwrap/font_color_black";
   alias: "elm/entry/base/font_color_black/default";
   alias: "elm/entry/base/font_color_black/lighting";
   alias: "elm/entry/base/font_color_black/multiline";
   alias: "elm/entry/base/font_color_black/multiline/default";
   alias: "elm/entry/base/font_color_black/multiline/lighting";
   alias: "elm/entry/base/editfield/font_color_black";

   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";

   styles {
      style { name: "font_color_black_textblock_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_TEXT_COLOR_INC" wrap=mixed left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_textblock_disabled_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_DISABLED_TEXT_COLOR_INC" wrap=mixed left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_textblock_guide_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_GUIDE_TEXT_COLOR_INC" wrap=mixed left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "font_color_black_textblock_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_textblock_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-noedit/font_color_black";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_textblock_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "font_color_black_textblock_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_textblock_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
   }
}

group { name: "elm/entry/base-charwrap/font_color_black";
   alias: "elm/entry/base/font_color_black/char_wrap";
   alias: "elm/entry/base/font_color_black/default/char_wrap";
   alias: "elm/entry/base/font_color_black/lighting/char_wrap";
   alias: "elm/entry/base/font_color_black/multiline/char_wrap";
   alias: "elm/entry/base/font_color_black/multiline/default/char_wrap";
   alias: "elm/entry/base/font_color_black/multiline/lighting/char_wrap";
   alias: "elm/entry/base-charwrap/editfield/font_color_black";

   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";

   styles {
      style { name: "font_color_black_textblock_char_wrap_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_TEXT_COLOR_INC" wrap=char left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_textblock_char_wrap_disabled_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_DISABLED_TEXT_COLOR_INC" wrap=char left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_textblock_char_wrap_guide_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_GUIDE_TEXT_COLOR_INC" wrap=char left_margin=1 right_margin=2 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_textblock_char_wrap_guide_style";
               min: 0 1;
               align: 0.0 0.0;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 1;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "font_color_black_textblock_char_wrap_style";
               min: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_textblock_char_wrap_disabled_style";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single/font_color_black";
   alias: "elm/entry/base-single/font_color_black/default";
   alias: "elm/entry/base-single/font_color_black/lighting";
   alias: "elm/entry/base-single/font_color_black/singleline";
   alias: "elm/entry/base-single/font_color_black/singleline/default";
   alias: "elm/entry/base-single/font_color_black/singleline/lighting";
   alias: "elm/entry/base-single/editfield/font_color_black";
   alias: "elm/entry/base-single/editfield/searchbar/font_color_black";

   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";

   styles {
      style { name: "font_color_black_single_textblock_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_single_textblock_disabled_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_DISABLED_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "font_color_black_single_textblock_guide_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_GUIDE_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=entry";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single-noedit/font_color_black";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PLAIN;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_style";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
   }
}
group { name: "elm/entry/base-single/font_color_black/tizen_text_class";
   inherit: "elm/entry/base-single/font_color_black";
   styles {
      style { name: "tizen_text_class_single_textblock_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=tizen";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "tizen_text_class_single_textblock_disabled_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_DISABLED_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=tizen";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color=#000000FF";
         tag:  "preedit_sel" "+ backing=on backing_color=#000000FF color=#FFFFFFFF";
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color=#000000FF";
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color=#000000FF";
      }
      style { name: "tizen_text_class_single_textblock_guide_style";
         base: "font=Tizen:style=Roman font_size="ENTRY_TEXT_SIZE" color="ENTRY_FONT_COLOR_BLACK_GUIDE_TEXT_COLOR_INC" wrap=none left_margin=1 right_margin=3 text_class=tizen ellipsis=1.0";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
      }
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "tizen_text_class_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         description { state: "default" 0.0;
            text {
               style: "tizen_text_class_single_textblock_style";
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "tizen_text_class_single_textblock_disabled_style";
            }
         }
      }
   }
}
group { name: "elm/entry/base-password/font_color_black";
   alias: "elm/entry/base-password/editfield/font_color_black";
   data.item: "default_font_size" "24";
   data.item: "min_font_size" "8";
   data.item: "max_font_size" "60";
   data {
      item: context_menu_orientation "horizontal";
   }
   parts {
      part { name: "elm.guide";
         type: TEXTBLOCK;
         mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "elm.text";
            rel2.to: "elm.text";
            text {
               style: "font_color_black_single_textblock_guide_style";
               min: 0 1;
               max: 0 1;
            }
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: PASSWORD;
         select_mode: BLOCK_HANDLE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_style";
               repch: "•";
               min: 1 1;
               max: 0 1;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "font_color_black_single_textblock_disabled_style";
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "gdisable";
         signal: "elm,guide,disabled";
         source: "elm";
         action: STATE_SET "hidden" 0.0;
         target: "elm.guide";
      }
      program { name: "genable";
         signal: "elm,guide,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.guide";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

   group { name: "elm/entry/base-password/editfield";
      inherit: "elm/entry/base-password/default";
      alias: "elm/entry/base-password/editfield/default";
      data.item: "default_font_size" "24";
      data.item: "min_font_size" "8";
      data.item: "max_font_size" "60";
      data {
         item: context_menu_orientation "horizontal";
      }
      parts {
         ENTRY_TOP_BOTTOM_PADDING(ENTRY_TOP_BOTTOM_PADDING_HEIGHT)
         part { name: "elm.guide";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1.to: "elm.text";
               rel2.to: "elm.text";
               text {
                  style: "editfield_single_textblock_guide_style";
                  min: 0 1;
                  max: 0 1;
               }
            }
            description { state: "hidden" 0.0;
               inherit: "default" 0.0;
               visible: 0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 1;
            scale: 1;
            entry_mode: PASSWORD;
            select_mode: BLOCK_HANDLE;
            cursor_mode: BEFORE;
            multiline: 0;
            source: "elm/entry/selection/default"; // selection under
            //source2: "X"; // selection over
            //source3: "X"; // cursor under
            source4: "elm/entry/cursor/default"; // cursorover
            source5: "elm/entry/anchor/default"; // anchor under
            source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
            source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
            source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
            //source10: ""; // start edge selection
            //source11: ""; // end edge selection
            description { state: "default" 0.0;
               ENTRY_TOP_BOTTOM_REL
               text {
                  style: "editfield_single_textblock_style";
                  repch: "•";
                  min: 1 1;
                  max: 0 1;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "editfield_single_textblock_focused_style";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text {
                  style: "editfield_single_textblock_disabled_style";
               }
            }
         }
      }
   }


group { name: "elm/scroller/entry/default";
      data {
         item: "focus_highlight" "off";
      }
      script {
         public sbvis_v, sbvis_h, sbalways_v, sbalways_h, sbvis_timer;
         public timer0(val) {
            new v;
            v = get_int(sbvis_v);
            if (v) {
               v = get_int(sbalways_v);
               if (!v) {
                  emit("do-hide-vbar", "");
                  set_int(sbvis_v, 0);
               }
            }
            v = get_int(sbvis_h);
            if (v) {
               v = get_int(sbalways_h);
               if (!v) {
                  emit("do-hide-hbar", "");
                  set_int(sbvis_h, 0);
               }
            }
            set_int(sbvis_timer, 0);
            return 0;
         }
      }
      parts {
         part { name: "focus_bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "focus_rect_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "focus_rect_left";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "focus_rect_right";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "focus_rect_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
         part { name: "clipper";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               rel1.to: "bg";
               rel2.to: "bg";
            }
         }
         part { name: "contentclipper";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            clip_to: "clipper";
            description { state: "default" 0.0;
               rel1 {
                  to_x: "icon_padding";
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "clear_padding";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "icon_padding";
            type: SPACER;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  to: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "bg";
                  relative: 0.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  to_x: "elm.swallow.icon";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  to: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "bg";
                  relative: 0.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clear_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel1 {
                  to_x: "elm.swallow.clear";
                  relative: 0.0 0.0;
               }
            }
         }
         part { name: "elm.swallow.clear";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.end";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "bg";
                  relative: 1.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.swallow.content";
            clip_to: "contentclipper";
            scale: 1;
            type: SWALLOW;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "icon_padding";
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "clear_padding";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "sb_vbar_clip_master";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar_clip";
            clip_to: "sb_vbar_clip_master";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_vbar";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 10 17;
               align: 1.0 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  to_y:     "elm.swallow.content";
                  to_x:     "clear_padding";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_y:     "sb_hbar";
                  to_x:     "clear_padding";
               }
            }
         }
         part { name: "elm.dragable.vbar";
            type: RECT;
            scale: 1;
            clip_to: "sb_vbar_clip";
            mouse_events: 0;
            dragable {
               x: 0 0 0;
               y: 1 1 0;
               confine: "sb_vbar";
            }
            description { state: "default" 0.0;
               visible: 0;
               fixed: 1 1;
               min: 10 17;
               max: 10 99999;
               rel1 {
                  relative: 0.5  0.5;
                  to: "sb_vbar";
               }
               rel2 {
                  relative: 0.5  0.5;
                  to: "sb_vbar";
               }
            }
         }
         part { name: "sb_hbar_clip_master";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar_clip";
            clip_to: "sb_hbar_clip_master";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
            }
            description { state: "hidden" 0.0;
               visible: 0;
               color: 255 255 255 0;
            }
         }
         part { name: "sb_hbar";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 17 10;
               align: 0.0 1.0;
               rel1 {
                  relative: 0.0 1.0;
                  to_x:     "elm.swallow.content";
                  to_y:     "elm.swallow.content";
               }
               rel2 {
                  relative: 0.0 1.0;
                  to_x:     "sb_vbar";
                  to_y:     "elm.swallow.content";
               }
            }
         }
         part { name: "elm.dragable.hbar";
            type: RECT;
            scale: 1;
            clip_to: "sb_hbar_clip";
            mouse_events: 0;
            dragable {
               x: 1 1 0;
               y: 0 0 0;
               confine: "sb_hbar";
            }
            description { state: "default" 0.0;
               fixed: 1 1;
               min: 17 10;
               max: 99999 10;
               rel1 {
                  relative: 0.5  0.5;
                  to: "sb_hbar";
               }
               rel2 {
                  relative: 0.5  0.5;
                  to: "sb_hbar";
               }
            }
         }
      }
      programs {
         program { name: "load";
            signal: "load";
            source: "";
            script {
               set_state(PART:"sb_hbar_clip", "hidden", 0.0);
               set_state(PART:"sb_vbar_clip", "hidden", 0.0);
               set_int(sbvis_h, 0);
               set_int(sbvis_v, 0);
               set_int(sbalways_v, 0);
               set_int(sbalways_h, 0);
               set_int(sbvis_timer, 0);
               emit("reload", "elm");
            }
         }
         program { name: "icon_show";
            signal: "elm,action,show,icon";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.icon";
            target: "icon_padding";
         }
         program { name: "icon_hide";
            signal: "elm,action,hide,icon";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.icon";
            target: "icon_padding";
         }
         program { name: "clear_show";
            signal: "elm,state,clear,visible";
            source: "*";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
         }
         program { name: "clear_hide";
            signal: "elm,state,clear,hidden";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
         }
         program { name: "end_show";
            signal: "elm,action,show,end";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "end_hide";
            signal: "elm,action,hide,end";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.end";
         }
         program { name: "vbar_show";
            signal: "elm,action,show,vbar";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_hide";
            signal: "elm,action,hide,vbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_vbar_clip_master";
         }
         program { name: "vbar_show_always";
            signal: "elm,action,show_always,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_v);
               if (!v) {
                  set_int(sbalways_v, 1);
                  v = get_int(sbvis_v);
                  if (!v) {
                     emit("do-show-vbar", "");
                     set_int(sbvis_v, 1);
                  }
               }
            }
         }
         program { name: "vbar_show_notalways";
            signal: "elm,action,show_notalways,vbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_v);
               if (v) {
                  set_int(sbalways_v, 0);
                  v = get_int(sbvis_v);
                  if (!v) {
                     emit("do-hide-vbar", "");
                     set_int(sbvis_v, 0);
                  }
               }
            }
         }
         program { name: "sb_vbar_show";
            signal: "do-show-vbar";
            source: "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "sb_vbar_clip";
         }
         program { name: "sb_vbar_hide";
            signal: "do-hide-vbar";
            source: "";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 0.5;
            target: "sb_vbar_clip";
         }

         program { name: "hbar_show";
            signal: "elm,action,show,hbar";
            source: "elm";
            action:  STATE_SET "default" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_hide";
            signal: "elm,action,hide,hbar";
            source: "elm";
            action:  STATE_SET "hidden" 0.0;
            target: "sb_hbar_clip_master";
         }
         program { name: "hbar_show_always";
            signal: "elm,action,show_always,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_h);
               if (!v) {
                  set_int(sbalways_h, 1);
                  v = get_int(sbvis_h);
                  if (!v) {
                     emit("do-show-hbar", "");
                     set_int(sbvis_h, 1);
                  }
               }
            }
         }
         program { name: "hbar_show_notalways";
            signal: "elm,action,show_notalways,hbar";
            source: "elm";
            script {
               new v;
               v = get_int(sbalways_h);
               if (v) {
                  set_int(sbalways_h, 0);
                  v = get_int(sbvis_h);
                  if (!v) {
                     emit("do-hide-hbar", "");
                     set_int(sbvis_h, 0);
                  }
               }
            }
         }
         program { name: "sb_hbar_show";
            signal: "do-show-hbar";
            source: "";
            action:  STATE_SET "default" 0.0;
            transition: LINEAR 0.5;
            target: "sb_hbar_clip";
         }
         program { name: "sb_hbar_hide";
            signal: "do-hide-hbar";
            source: "";
            action:  STATE_SET "hidden" 0.0;
            transition: LINEAR 0.5;
            target: "sb_hbar_clip";
         }

         program { name: "scroll";
            signal: "elm,action,scroll";
            source: "elm";
            script {
               new v;
               v = get_int(sbvis_v);
               v |= get_int(sbalways_v);
               if (!v) {
                  emit("do-show-vbar", "");
                  set_int(sbvis_v, 1);
               }
               v = get_int(sbvis_h);
               v |= get_int(sbalways_h);
               if (!v) {
                  emit("do-show-hbar", "");
                  set_int(sbvis_h, 1);
               }
               v = get_int(sbvis_timer);
               if (v > 0) cancel_timer(v);
               v = timer(1.0, "timer0", 0);
               set_int(sbvis_timer, v);
            }
         }
      }
   }

group { name: "elm/scroller/entry/editfield";
      inherit: "elm/scroller/entry/default";
      alias: "elm/scroller/entry/editfield/fixed_size";
      data {
         item: "focus_highlight" "on";
      }
      parts {
         part { name: "focus_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               color: 7 7 7 255; /*(Changeable UI) color_class: "B099L1";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 7 7 7 255; /*(Changeable UI) color_class: "B099L1D";*/
            }
         }
         part { name: "focus_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 8 0;
               max: 8 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to: "focus_bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "focus_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 8 0;
               max: 8 0;
               align: 1.0 0.5;
               fixed: 1 0;
               rel1 {
                  to: "focus_bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "focus_rect_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 ENTRY_FOCUS_RECT_EDGE_INC;
               max: -1 ENTRY_FOCUS_RECT_EDGE_INC;
               align: 0 0;
               rel1 {
                  to: "focus_bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
               color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/
            }
         }
         part { name: "focus_rect_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               min: ENTRY_FOCUS_RECT_EDGE_INC 0;
               max: ENTRY_FOCUS_RECT_EDGE_INC -1;
               align: 0 0;
               rel1 {
                  to: "focus_rect_top";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
               color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/
            }
         }
         part { name: "focus_rect_right";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               min: ENTRY_FOCUS_RECT_EDGE_INC 0;
               max: ENTRY_FOCUS_RECT_EDGE_INC -1;
               align: 1 0;
               rel1 {
                  to: "focus_rect_top";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
               color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/
            }
         }
         part { name: "focus_rect_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               min: 0 ENTRY_FOCUS_RECT_EDGE_INC;
               max: -1 ENTRY_FOCUS_RECT_EDGE_INC;
               align: 0 1;
               rel1 {
                  to: "focus_rect_left";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "focus_rect_right";
                  relative: 0.0 1.0;
               }
               color: 102 102 102 255; /*(Changeable UI) color_class: "B099L2";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 22 57 91 255; /*(Changeable UI) color_class: "B099L2D";*/
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "focus_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "focus_right_padding";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "clear_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: ENTRY_EDITFIELD_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0;
               max: ENTRY_EDITFIELD_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0;
            }
         }
         part { name: "elm.swallow.clear";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "clear_right_padding";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "clear_right_padding";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clear_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_y: "bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: ENTRY_EDITFIELD_CLEAR_BUTTON_RIGHT_PADDING_MIN_MAX_INC;
               max: ENTRY_EDITFIELD_CLEAR_BUTTON_RIGHT_PADDING_MIN_MAX_INC;
            }
         }
      }
      programs {
         program { name: "action_focus";
            signal: "elm,state,focus,on";
            source: "*";
            action: STATE_SET "focused" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
         }
         program { name: "action_unfocus";
            signal: "elm,state,focus,off";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
         }
         program { name: "enabled";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
         }
         program { name: "clear_show";
            signal: "elm,state,clear,visible";
            source: "*";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
            target: "clear_right_padding";
         }
         program { name: "clear_hide";
            signal: "elm,state,clear,hidden";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
            target: "clear_right_padding";
         }
      }
}

group { name: "elm/scroller/entry/editfield/searchbar/default";
      inherit: "elm/scroller/entry/default";
      alias: "elm/scroller/entry/editfield/searchbar/fixed_size";
      alias: "elm/scroller/entry/editfield/popup";
      alias: "elm/scroller/entry/editfield/password/popup";
      data {
         item: "focus_highlight" "on";
      }
      images {
         image: "b_list_search_icon.png" COMP;
      }
      parts {
         part { name: "focus_bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               visible: 1;
               color: 7 7 7 255; /*(Changeable UI) color_class: "B082L1";*/
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 0 0 0 255; /*(Changeable UI) color_class: "B082L1S";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 7 7 7 255; /*(Changeable UI) color_class: "B082L1D";*/
            }
         }
         part { name: "focus_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 6 0;
               max: 6 0;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to: "focus_bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "focus_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: 8 0;
               max: 8 0;
               align: 1.0 0.5;
               fixed: 1 0;
               rel1 {
                  to: "focus_bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "focus_rect_top";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2";*/
               min: 0 ENTRY_FOCUS_RECT_EDGE_INC;
               max: -1 ENTRY_FOCUS_RECT_EDGE_INC;
               align: 0.0 0.0;
               rel1 {
                  to: "focus_bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "B082L2S";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2D";*/
            }
         }
         part { name: "focus_rect_left";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2";*/
               min: ENTRY_FOCUS_RECT_EDGE_INC 0;
               max: ENTRY_FOCUS_RECT_EDGE_INC -1;
               align: 0.0 0.0;
               rel1 {
                  to: "focus_rect_top";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "B082L2S";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2D";*/
            }
         }
         part { name: "focus_rect_right";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2";*/
               min: ENTRY_FOCUS_RECT_EDGE_INC 0;
               max: ENTRY_FOCUS_RECT_EDGE_INC -1;
               align: 1.0 0.0;
               rel1 {
                  to: "focus_rect_top";
                  relative: 0.0 1.0;
               }
               rel2 {
                  to: "focus_bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "B082L2S";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2D";*/
            }
         }
         part { name: "focus_rect_bottom";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2";*/
               min: 0 ENTRY_FOCUS_RECT_EDGE_INC;
               max: -1 ENTRY_FOCUS_RECT_EDGE_INC;
               align: 0.0 1.0;
               rel1 {
                  to: "focus_rect_left";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to: "focus_rect_right";
                  relative: 0.0 1.0;
               }
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "B082L2S";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 94 94 94 255; /*(Changeable UI) color_class: "B082L2D";*/
            }
         }
         part { name: "search_icon_left_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: ENTRY_SEARCH_ICON_LEFT_PADDING_MIN_MAX_INC;
               max: ENTRY_SEARCH_ICON_LEFT_PADDING_MIN_MAX_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to_x: "focus_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "focus_left_padding";
                  relative: 1.0 1.0;
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
            }
         }
         part { name: "search_icon";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            repeat_events: 1;
            clip_to: "search_icon.clipper";
            description { state: "default" 0.0;
               min: ENTRY_SEARCH_ICON_MIN_MAX_INC;
               max: ENTRY_SEARCH_ICON_MIN_MAX_INC;
               fixed: 1 1;
               align: 0.0 0.5;
               image.normal: "b_list_search_icon.png";
               rel1 {
                  to_x: "search_icon_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "search_icon_left_padding";
                  relative: 1.0 1.0;
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
               visible: 0;
            }
         }
         part { name: "search_icon_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: ENTRY_SEARCH_ICON_RIGHT_PADDING_MIN_MAX_INC;
               max: ENTRY_SEARCH_ICON_RIGHT_PADDING_MIN_MAX_INC;
               fixed: 1 0;
               align: 0.0 0.5;
               rel1 {
                  to_x: "search_icon";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "search_icon";
                  relative: 1.0 1.0;
               }
            }
            description { state: "hide" 0.0;
               inherit: "default" 0.0;
               min: 0 0;
               max: 0 0;
            }
         }
         part { name: "search_icon.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 132 132 132 255; /*(Changeable UI) color_class: "B083";*/
            }
            description { state: "focused" 0.0;
               color: 132 132 132 255; /*(Changeable UI) color_class: "B083";*/
            }
            description { state: "disabled" 0.0;
               color: 249 249 249 51; /*(Changeable UI) color_class: "B083D";*/
            }
         }
         part { name: "search_icon_over";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "search_icon_left_padding";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "search_icon_right_padding";
                  relative: 1.0 1.0;
               }
               color: 0 0 0 0;
            }
         }
         part { name: "search_icon_disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "search_icon";
               rel2.to: "search_icon";
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               rel1 {
                  to_x: "focus_left_padding";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "focus_right_padding";
                  relative: 0.0 1.0;
               }
            }
         }
         part { name: "icon_padding";
            type: SPACER;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "search_icon_right_padding";
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "search_icon_right_padding";
                  to_y: "bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               rel2 {
                  to_x: "elm.swallow.icon";
                  relative: 1.0 1.0;
               }
            }
         }
         part { name: "elm.swallow.icon";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 0.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "search_icon_right_padding";
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_x: "search_icon_right_padding";
                  to_y: "bg";
                  relative: 1.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clear_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "elm.swallow.end";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: ENTRY_SEARCH_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0;
               max: ENTRY_SEARCH_CLEAR_BUTTON_PADDING_MIN_MAX_INC 0;
            }
         }
         part { name: "elm.swallow.clear";
            type: SWALLOW;
            scale: 1;
            clip_to: "clipper";
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_x: "clear_right_padding";
                  to_y: "bg";
                  relative: 0.0 0.0;
               }
               rel2 {
                  to_x: "clear_right_padding";
                  to_y: "bg";
                  relative: 0.0 1.0;
               }
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "clear_right_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 0.5;
               fixed: 1 1;
               rel1 {
                  to_y: "bg";
                  relative: 1.0 0.0;
               }
               rel2 {
                  to_y: "bg";
                  relative: 1.0 1.0;
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: ENTRY_SEARCH_CLEAR_BUTTON_RIGHT_PADDING_MIN_MAX_INC;
               max: ENTRY_SEARCH_CLEAR_BUTTON_RIGHT_PADDING_MIN_MAX_INC;
            }
         }
      }
      programs {
         program { name: "search_icon_show";
            signal: "elm,action,show,search_icon";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "search_icon_left_padding";
            target: "search_icon_right_padding";
            target: "search_icon";
         }
         program { name: "search_icon_hide";
            signal: "elm,action,hide,search_icon";
            source: "*";
            action: STATE_SET "hide" 0.0;
            target: "search_icon_left_padding";
            target: "search_icon_right_padding";
            target: "search_icon";
         }
         program { name: "action_focus";
            signal: "elm,state,focus,on";
            source: "*";
            action: STATE_SET "focused" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
            target: "search_icon.clipper";
         }
         program { name: "action_unfocus";
            signal: "elm,state,focus,off";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
            target: "search_icon.clipper";
            target: "search_icon.clipper";
         }
         program { name: "search_icon_touch_snd";
            signal: "mouse,clicked,1";
            source: "search_icon_over";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "search_icon_disabler";
            target: "search_icon.clipper";
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
            target: "search_icon.clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "search_icon_disabler";
            target: "search_icon.clipper";
            target: "focus_bg";
            target: "focus_rect_top";
            target: "focus_rect_left";
            target: "focus_rect_right";
            target: "focus_rect_bottom";
            target: "search_icon.clipper";
         }
         program { name: "clear_show";
            signal: "elm,state,clear,visible";
            source: "*";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
            target: "clear_right_padding";
         }
         program { name: "clear_hide";
            signal: "elm,state,clear,hidden";
            source: "*";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.clear";
            target: "clear_padding";
            target: "clear_right_padding";
         }
      }
}

////////////////////////////  DATETIME UI //////////////////////////////////////

group { name: "elm/entry/base-single/datetime/style1";
   alias: "elm/entry/base-single/datetime";
   alias: "elm/entry/base-single/spinner/default";
   alias: "elm/entry/base-single/spinner/horizontal";
   alias: "elm/entry/base-single/spinner/vertical";
   alias: "elm/entry/base-single/spinner/datetime";
   data.item: "default_font_size" "52";
   data.item: "min_font_size" "35";
   data.item: "max_font_size" "52";
   images {
      image: "tw_timepicker_focus_line.#.png" COMP;
      image: "tw_timepicker_num_bg_new_transparent.#.png" COMP;
   }
   styles {
      style { name: "entry_datetime_textblock_style_1_3";
         base: "font=Tizen:style=Bold font_size=50 align=center left_margin=1 right_margin=2 color=#F9F9F9FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_DIGIT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#F9F9F9FF color_class=T051 wrap=none text_class=T051";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_datetime_textblock_disabled_style_1_3";
         base: "font=Tizen:style=Bold font_size=50 align=center left_margin=1 right_margin=2 color=#606060FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_DIGIT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#606060FF color_class=T051D wrap=none text_class=T051D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
   }
   data {
      item: context_menu_orientation "none";
   }
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "bg_base";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_num_bg_new_transparent.#.png";
            color: 9 37 63 255; /*(Changeable UI) color_class: "W0811";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_focus_line.#.png";
            color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1 {
               to: "base";
               offset: -3 -3;
            }
            rel2 {
               to: "base";
               offset: 2 2;
            }
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         //source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
         //source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_datetime_textblock_style_1_3";
               min: 0 1;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_datetime_textblock_disabled_style_1_3";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "action_focus";
         signal: "elm,action,focus";
         source: "*";
         action: STATE_SET "focused" 0.0;
         target: "bg";
      }
      program { name: "action_unfocus";
         signal: "elm,action,unfocus";
         source: "*";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single/datetime/style2";
   alias: "elm/entry/base-single/datetime/style3";
   data.item: "default_font_size" "47";
   data.item: "min_font_size" "35";
   data.item: "max_font_size" "47";
   images {
      image: "tw_timepicker_focus_line.#.png" COMP;
      image: "tw_timepicker_num_bg_new_transparent.#.png" COMP;
   }
   styles {
      style { name: "entry_datetime_textblock_style2";
         base: "font=Tizen:style=Roman font_size=46 align=center left_margin=1 right_margin=2 color=#F9F9F9FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_TEXT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#F9F9F9FF color_class=T052 wrap=none text_class=T052";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_datetime_textblock_disabled_style2";
         base: "font=Tizen:style=Roman font_size=46 align=center left_margin=1 right_margin=2 color=#606060FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_TEXT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#606060FF color_class=T052D wrap=none text_class=T052D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
   }
   data {
      item: context_menu_orientation "none";
   }
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "bg_base";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_num_bg_new_transparent.#.png";
            color: 9 37 63 255; /*(Changeable UI) color_class: "W0811";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_focus_line.#.png";
            color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1 {
               to: "base";
               offset: -3 -3;
            }
            rel2 {
               to: "base";
               offset: 2 2;
            }
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "text_bg";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: DATETIME_DATE_MONTH_FIELD_WIDTH 60;  // Here 60 pixal is adjusted to make UI look simiar to radio one.
            max: DATETIME_DATE_MONTH_FIELD_WIDTH 60;
            fixed: 1 1;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         repeat_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         //source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
        // source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to: "text_bg";
            rel2.to: "text_bg";
            text {
               style: "entry_datetime_textblock_style2";
               min: 1 1;
               fit: 1 1;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_datetime_textblock_disabled_style2";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "action_focus";
         signal: "elm,action,focus";
         source: "*";
         action: STATE_SET "focused" 0.0;
         target: "bg";
      }
      program { name: "action_unfocus";
         signal: "elm,action,unfocus";
         source: "*";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

group { name: "elm/entry/base-single/datetime/AM_PM";
   data.item: "default_font_size" "47";
   data.item: "min_font_size" "35";
   data.item: "max_font_size" "47";
   images {
      image: "tw_timepicker_focus_line.#.png" COMP;
      image: "tw_timepicker_num_bg_new.#.png" COMP;
   }
   styles {
      style { name: "entry_datetime_textblock_AM_PM";
         base: "font=Tizen:style=Roman font_size=46 align=center left_margin=1 right_margin=2 color=#F9F9F9FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_TEXT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#F9F9F9FF color_class=T052 wrap=none text_class=T052";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#800 underline=on underline_color=#8008";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
      style { name: "entry_datetime_textblock_disabled_AM_PM";
         base: "font=Tizen:style=Roman font_size=46 align=center left_margin=1 right_margin=2 color=#606060FF wrap=none text_class=tizen";
         // (Changeable UI) base: "font=Tizen:style=Roman font_size="DATETIME_ENTRY_TEXT_SIZE" color=#ffffff align=center left_margin=1 right_margin=2 color=#606060FF color_class=T052D wrap=none text_class=T052D";
         tag:  "br" "\n";
         tag:  "ps" "ps";
         tag:  "tab" "\t";
         tag:  "em" "+ font_style=Oblique";
         tag:  "b" "+ font_weight=Bold";
         tag:  "link" "+ color=#00000080 underline=on underline_color=#00000080";
         tag:  "hilight" "+ font_weight=Bold";
         tag:  "preedit" "+ underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sel" "+ backing=on backing_color="ENTRY_PREEDIT_BACKGROUND_COLOR" color="ENTRY_PREEDIT_TEXT_COLOR" underline=on underline_color="ENTRY_PREEDIT_TEXT_COLOR;
         tag:  "preedit_sub1" "+ backing=on backing_color="ENTRY_PREEDIT_SUB1_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub2" "+ backing=on backing_color="ENTRY_PREEDIT_SUB2_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub3" "+ backing=on backing_color="ENTRY_PREEDIT_SUB3_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
         tag:  "preedit_sub4" "+ backing=on backing_color="ENTRY_PREEDIT_SUB4_COLOR" underline=on underline_color="ENTRY_PREEDIT_UNDERLINE_COLOR;
      }
   }
   data {
      item: context_menu_orientation "none";
   }
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
         }
      }
      part { name: "bg_base";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_num_bg_new.#.png";
            color: 9 37 63 255; /*(Changeable UI) color_class: "W0811";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1.to: "base";
            rel2.to: "base";
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 0 110 255 255; /*(Changeable UI) color_class: "W0812";*/
         }
      }
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_focus_line.#.png";
            color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/
            min: 0 DATETIME_FIELD_HEIGHT;
            max: -1 DATETIME_FIELD_HEIGHT;
            fixed: 0 1;
            rel1 {
               to: "base";
               offset: -3 -3;
            }
            rel2 {
               to: "base";
               offset: 2 2;
            }
            visible: 0;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "elm.text";
         type: TEXTBLOCK;
         mouse_events: 1;
         repeat_events: 1;
         scale: 1;
         entry_mode: EDITABLE;
         select_mode: BLOCK_HANDLE;
         cursor_mode: BEFORE;
         multiline: 0;
         //source: "elm/entry/selection/default"; // selection under
         //source2: "X"; // selection over
         //source3: "X"; // cursor under
         //source4: "elm/entry/cursor/default"; // cursorover
         source5: "elm/entry/anchor/default"; // anchor under
         //source6: "X"; // anchor over
         //source7: ENTRY_BLOCK_HANDLE_SOURCE7; // start selection handler
        // source8: ENTRY_BLOCK_HANDLE_SOURCE8; // end selection handler
         source9: ENTRY_CURSOR_HANDLE_SOURCE9; // cursor handler
         //source10: ""; // start edge selection
         //source11: ""; // end edge selection
         description { state: "default" 0.0;
            fixed: 1 0;
            text {
               style: "entry_datetime_textblock_AM_PM";
               min: 1 0;
               align: 0.0 0.5;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            text {
               style: "entry_datetime_textblock_disabled_AM_PM";
               min: 0 1;
            }
         }
      }
   }
   programs {
      program { name: "focus";
         signal: "load";
         source: "";
         action: FOCUS_SET;
         target: "elm.text";
      }
      program { name: "action_focus";
         signal: "mouse,down,1";
         source: "elm.text";
         action: STATE_SET "focused" 0.0;
         target: "bg";
         target: "bg_base";
      }
      program { name: "action_unfocus";
         signal: "mouse,up,1";
         source: "elm.text";
         action: STATE_SET "default" 0.0;
         target: "bg";
         target: "bg_base";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "elm.text";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "elm.text";
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "elm.text";
         action: RUN_PLUGIN "touch_sound";
      }
   }
}

///////////////////////////////////////////////////////////////////////////////

////////////////////////////   COPY&PASTE UI  ///////////////////////////////////
#define IMAGE_GROUP(GROUP_NAME, IMAGE_NAME) \
   group { name: GROUP_NAME; \
      images.image: IMAGE_NAME COMP; \
      parts { \
         part { name: "image"; \
            description { \
               state: "default" 0.0; \
               visible: 1; \
               image.normal: IMAGE_NAME; \
               aspect: 1 1; \
               aspect_preference: BOTH; \
            } \
         } \
      } \
   }
///////////////////////////////////////////////////////////////////////////////

IMAGE_GROUP("elm/copypaste/clipboard/default", "b_popup_icon_clipboard.png");
IMAGE_GROUP("elm/copypaste/copy/default", "b_popup_icon_copy.png");
IMAGE_GROUP("elm/copypaste/cut/default", "b_popup_icon_cut.png");
IMAGE_GROUP("elm/copypaste/paste/default", "b_popup_icon_paste.png");
IMAGE_GROUP("elm/copypaste/select_all/default", "b_popup_icon_select_all.png");
