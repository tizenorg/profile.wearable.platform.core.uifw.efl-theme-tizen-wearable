/*
 * Copyright (c) 2010 Samsung Electronics Co., Ltd All Rights Reserved
 *
 * BSD 2-Clause License (http://www.opensource.org/licenses/bsd-license.php)
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *   1. Redistributions of source code must retain the above copyright notice, this
 *      list of conditions and the following disclaimer.
 *   2. Redistributions in binary form must reproduce the above copyright notice,
 *      this list of conditions and the following disclaimer in the documentation
 *      and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

   group { name: "elm/button/base/default";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: 0 BUTTON_HEIGHT;
               color: 7 59 102 255; /*(Changeable UI) color_class: "W011";*/
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 32 97 163 255; /*(Changeable UI) color_class: "W011P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 6 41 63 255; /*(Changeable UI) color_class: "W011D";*/
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel2.relative: 0.0 0.0;
               min: BUTTON_PADDING_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1.relative: 1.0 1.0;
               min: BUTTON_PADDING_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               min: 0 0;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            clip_to: "elm.swallow.content.clip";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 1;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "icon_rect";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  max: 1 0;
                  style: "button_general_text_normal";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_general_text_dim";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_general_text_press";
            }
         }
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 249 249 249 255; /*(Changeable UI) color_class: "F022L1i";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 249 249 249 102; /*(Changeable UI) color_class: "F022L1iD";*/
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "bg";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"elm.text", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "bg";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "bg";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     run_program(PROGRAM:"play_sample");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program {
            name: "play_sample";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                 }
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled"))
                  set_state(PART:"elm.text", "default", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "default", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

group { name: "elm/button/base/green";
   inherit: "elm/button/base/default";
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            color: 97 163 16 255; /*(Changeable UI) color_class: "W014";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 145 191 89 255; /*(Changeable UI) color_class: "W014P";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 49 53 47 255; /*(Changeable UI) color_class: "W014D";*/
         }
      }
   }
}

group { name: "elm/button/base/orange";
   inherit: "elm/button/base/default";
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
           color: 237 134 0 255; /*(Changeable UI) color_class: "W013";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 242 170 77 102; /*(Changeable UI) color_class: "W013P";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 68 38 4 255; /*(Changeable UI) color_class: "W013D";*/
         }
      }
   }
}

group { name: "elm/button/base/red";
   inherit: "elm/button/base/default";
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
             color: 206 36 2 255; /*(Changeable UI) color_class: "W012";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
             color: 221 101 77 255; /*(Changeable UI) color_class: "W012P";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
             color: 68 10 0 255; /*(Changeable UI) color_class: "W012D";*/
         }
      }
   }
}

   group { name: "elm/button/base/popup";
      alias: "elm/button/base/popup/circle";
      alias: "elm/button/base/popup/circle/left";
      alias: "elm/button/base/popup/circle/right";
      alias: "elm/button/base/bottom";
      alias: "elm/button/base/bottom/queue";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "base";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 0 1;
               min: 0 POPUP_BUTTON_HEIGHT;
               max: -1 POPUP_BUTTON_HEIGHT;
               color: 0 0 0 0;
            }
         }
         part { name: "bg";
            type: RECT;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               fixed: 0 1;
               align: 0.0 0.0;
               rel1.to: "base";
               rel2.to: "base";
               min: 0 POPUP_BUTTON_HEIGHT;
               max: -1 POPUP_BUTTON_HEIGHT;
               color: 5 50 102 255; /*(Changeable UI) color_class: "B065L4";*/
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 36 106 153 255; /*(Changeable UI) color_class: "B065L4P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 6 41 63 255; /*(Changeable UI) color_class: "B065L4D";*/
            }
         }
         part { name: "padding_left_top";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1.to: "bg";
               rel2 {
                  relative: 0.0 0.0;
                  to: "bg";
               }
               min: BUTTON_PADDING_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "padding_right_bottom";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "bg";
               }
               rel2.to: "bg";
               min: BUTTON_PADDING_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "icon_rect";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               min: 0 0;
               fixed: 1 1;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
               fixed: 1 1;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            clip_to: "elm.swallow.content.clip";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.0 0.5;
               rel1 {
                  relative: 1.0 1.0;
                  to: "padding_left_top";
               }
               rel2 {
                  relative: 1.0 0.0;
                  to_x: "padding_left_top";
                  to_y: "padding_right_bottom";
               }
               fixed: 1 0;
            }
            description { state: "visible" 0.0;
               fixed: 1 1;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
               align: 1.0 0.5;
               rel1 {
                  relative: 0.0 1.0;
                  to_x: "elm.text";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to_x: "elm.text";
                  to_y: "padding_right_bottom";
               }
            }
            description { state: "icononly" 0.0;
               min: BUTTON_ICON_SIZE;
               max: BUTTON_ICON_SIZE;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               fixed: 1 1;
               rel1 {
                  relative: 1.0 1.0;
                  to_x: "icon_rect";
                  to_y: "padding_left_top";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "padding_right_bottom";
               }
               text {
                  max: 1 0;
                  style: "button_popup_text_normal";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               text.style: "button_popup_text_dim";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_popup_text_press";
            }
         }
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               /*(Changeable UI) color_class: "B0522";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               /*(Changeable UI) color_class: "B0522D";*/
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "base";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"elm.text", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "base";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "base";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     run_program(PROGRAM:"play_sample");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program {
            name: "play_sample";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                    set_state(PART:"icon_rect", "visible", 0.0);
                 }
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled"))
                  set_state(PART:"elm.text", "default", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                    set_state(PART:"icon_rect", "default", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
            target: "icon_rect";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/naviframe/title_icon";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "button_bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               min: ACTIONBAR_TITLE_BTN_SIZE;
               max: ACTIONBAR_TITLE_BTN_SIZE;
               visible: 0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               visible: 1;
               color: 34 73 124 255; /*(Changeable UI) color_class: "B0511P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            clip_to: "elm.icon.clipper";
            description { state: "default" 0.0;
               visible: 0;
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
         part { name: "elm.icon.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 239 255 63 255; /*(Changeable UI) color_class: "B052L1";*/
            }
            description { state: "clicked" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               color: 239 255 63 51; /*(Changeable UI) color_class: "B052L1D";*/
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,down,1";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_click1");
                 }
            }
         }
         program { name: "button_click1";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_click_anim";
         }
         program { name: "button_click_anim";
            script {
               set_state(PART:"elm.icon.clipper", "clicked", 0.0);
               set_state(PART:"button_bg", "pressed", 0.0);
            }
         }
         program { name: "button_double_click";
            signal: "mouse,down,1,double";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_click_anim");
                 }
            }
         }
         program { name: "button_unpress";
            action: SIGNAL_EMIT "elm,action,unpress" "";
            after: "button_unclick_anim";
         }
         program { name: "button_unclick_anim";
            action: STATE_SET "default" 0.0;
            target: "button_bg";
         }
         program { name: "button_mouseout_clicked";
            signal: "mouse,up,1";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                    set_int(mouse_down, 0);
                    set_state(PART:"elm.icon.clipper", "default", 0.0);
                    run_program(PROGRAM:"button_unpress");
                 }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_unclick3");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_unclick3";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "elm.icon.clipper";
            target: "button_bg";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "elm.icon.clipper";
            target: "button_bg";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

group { name: "elm/button/base/nextdepth";
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   images {
      image: "tw_btn_next_depth_holo_dark.png" COMP;
   }
   parts {
      part { name: "bg";
         type: IMAGE;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_NEXTDEPTH_SIZE;
            max: BUTTON_NEXTDEPTH_SIZE;
            fixed: 1 1;
            image.normal: "tw_btn_next_depth_holo_dark.png";
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 249 249 249 255; /*(Changeable UI) color_class: "W015P";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 58 58 58 255; /*(Changeable UI) color_class: "W015D";*/
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "bg";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"bg", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "bg";
         script {
            new st[31];
            new Float:vl;
            if (get_int(mouse_down) == 1)
              {
                 set_int(mouse_down, 0);
                 get_state(PART:"bg", st, 30, vl);
                 if (strcmp(st, "disabled")) {
                    set_state(PART:"bg", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
              }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "bg";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "bg";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/plus";
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   images {
      image: "tw_controller_btn_bg.png" COMP;
      image: "tw_controller_btn_plus.png" COMP;
   }
   parts {
      part { name: "btn_bg";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "tw_controller_btn_bg.png";
            /*(Changeable UI) color_class: "W181L2";*/
            visible: 0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_PLUS_SIZE;
            max: BUTTON_PLUS_SIZE;
            fixed: 1 1;
            align: 1.0 0.5;
            image.normal: "tw_controller_btn_plus.png";
            /*(Changeable UI) color_class: "W179L1";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            /*(Changeable UI) color_class: "W180L1";*/
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               set_state(PART:"btn_bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(mouse_down) == 1)
              {
                 set_int(mouse_down, 0);
                 get_state(PART:"event", st, 30, vl);
                 if (strcmp(st, "disabled")) {
                    set_state(PART:"bg", "default", 0.0);
                    set_state(PART:"btn_bg", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
              }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"event", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "bg";
         target: "btn_bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "bg";
         target: "btn_bg";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/minus";
   inherit: "elm/button/base/plus";
   images {
      image: "tw_controller_btn_minus.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_PLUS_SIZE;
            max: BUTTON_PLUS_SIZE;
            fixed: 1 1;
            align: 0.0 0.5;
            image.normal: "tw_controller_btn_minus.png";
            /*(Changeable UI) color_class: "W179L1";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            /*(Changeable UI) color_class: "W180L1";*/
         }
      }
   }
}

group { name: "elm/button/base/controller_plus";
   script {
      public mouse_down = 0;
      public multi_down = 0;
   }
   images {
      image: "tw_timepicker_dialbtn_right_plus.png" COMP;
      image: "tw_timepicker_dialbtn_right.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_dialbtn_right.png";
            /*(Changeable UI) color_class: "W0821L11";*/
         }
         description { state: "pressed" 0.0;
            image.normal: "tw_timepicker_dialbtn_right.png";
            /*(Changeable UI) color_class: "W0821L11P";*/
         }
      }
      part { name: "icon_image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "tw_timepicker_dialbtn_right_plus.png";
            /*(Changeable UI) color_class: "W0821L1";*/
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 0 0 0 0;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
              {
                  set_int(mouse_down, 1);
                  run_program(PROGRAM:"button_press1");
              }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(mouse_down) == 1)
              {
                 set_int(mouse_down, 0);
                 get_state(PART:"event", st, 30, vl);
                 if (strcmp(st, "disabled")) {
                    set_state(PART:"bg", "default", 0.0);
                    emit("elm,action,unpress", "");
                 }
              }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"event", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "bg";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
   }
}

group { name: "elm/button/base/controller_minus";
   inherit: "elm/button/base/controller_plus";
   images {
      image: "tw_timepicker_dialbtn_left_minus.png" COMP;
      image: "tw_timepicker_dialbtn_left.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_timepicker_dialbtn_left.png";
            /*(Changeable UI) color_class: "W0821L11";*/
         }
         description { state: "pressed" 0.0;
            image.normal: "tw_timepicker_dialbtn_left.png";
            /*(Changeable UI) color_class: "W0821L11P";*/
         }
      }
      part { name: "icon_image";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "bg";
            rel2.to: "bg";
            image.normal: "tw_timepicker_dialbtn_left_minus.png";
            /*(Changeable UI) color_class: "W0821L1";*/
         }
      }
   }
}

group { name: "elm/button/base/fast_forward";
   inherit: "elm/button/base/plus";
   images {
      image: "tw_controller_btn_ff.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_controller_btn_ff.png";
            /*(Changeable UI) color_class: "W179L1";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            /*(Changeable UI) color_class: "W180L1";*/
         }
      }
   }
}

group { name: "elm/button/base/rewind";
   inherit: "elm/button/base/fast_forward";
   images {
      image: "tw_controller_btn_rw.png" COMP;
   }
   parts {
      part { name: "bg";
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "tw_controller_btn_rw.png";
            /*(Changeable UI) color_class: "W179L1";*/
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            /*(Changeable UI) color_class: "W180L1";*/
         }
      }
   }
}

group { name: "elm/button/base/list_divider_btn";
   inherit: "elm/button/base/default";
   parts {
      part { name: "bg";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
            color: 0 71 142 255; /*(Changeable UI) color_class: "B041P";*/
         }
      }
      part { name: "left_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_DIVIDER_BTN_PADDING_LEFT_SIZE 0;
            max: BUTTON_DIVIDER_BTN_PADDING_LEFT_SIZE -1;
            fixed: 1 1;
            align: 0.0 0.5;
            rel1.to: "bg";
            rel2 {
               to: "bg";
               relative: 0.0 1.0;
            }
         }
      }
      part { name: "right_padding";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_DIVIDER_BTN_PADDING_RIGHT_SIZE 0;
            max: BUTTON_DIVIDER_BTN_PADDING_RIGHT_SIZE -1;
            fixed: 1 1;
            align: 1.0 0.5;
            rel1 {
               to: "bg";
               relative: 1.0 0.0;
            }
            rel2.to: "bg";
         }
      }
      part { name: "elm.swallow.content";
         clip_to: "elm.swallow.content.clip";
         type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            min: BUTTON_DIVIDER_BTN_ICON_SIZE 0;
            max: BUTTON_DIVIDER_BTN_ICON_SIZE -1;
            fixed: 1 1;
            align: 0.5 0.5;
            visible: 1;
            rel1 {
               to: "left_padding";
               relative: 1.0 0.0;
            }
            rel2 {
               to: "right_padding";
               relative: 0.0 1.0;
            }
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "icononly" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.swallow.content.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 249 249 249 255; /*(Changeable UI) color_class: "F022L1i";*/
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 249 249 249 102; /*(Changeable UI) color_class: "F022L1iD";*/
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         repeat_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"bg", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"event", st, 30, vl);
            if (strcmp(st, "disabled")) {
               run_program(PROGRAM:"play_sample");
               emit("elm,action,click", "");
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "event";
         target: "bg";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "event";
         target: "bg";
      }
   }
}

   group { name: "elm/button/base/editfield_clear";
      alias: "elm/button/base/search_clear";
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      images {
         image: "tw_ic_clear_search_api_holo_dark.png" COMP;
      }
      parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_MIN_MAX_INC;
            }
         }
         part { name: "button_image";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "clear_button";
               rel2.to: "clear_button";
               color: 0 0 0 0; /*(Changeable UI) color_class: "transparent";*/
               visible: 1;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 71 142 255; /*(Changeable UI) color_class: "B041P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "focused" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "clear_button";
            scale: 1;
            mouse_events: 0;
            clip_to: "clear_button.clipper";
            description { state: "default" 0.0;
               min: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               max: BUTTON_EDITFIELD_CLEAR_BUTTON_IMAGE_MIN_MAX_INC;
               align: 0.5 0.5;
               image.normal: "tw_ic_clear_search_api_holo_dark.png";
            }
         }
         part { name: "clear_button.clipper";
            type: RECT;
            description { state: "default" 0.0;
               color: 249 249 249 255; /*(Changeable UI) color_class: "B085";*/
            }
            description { state: "pressed" 0.0;
               color: 249 249 249 255; /*(Changeable UI) color_class: "B085P";*/
            }
            description { state: "disabled" 0.0;
               color: 249 249 249 51; /*(Changeable UI) color_class: "B085D";*/
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
                  }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "clear_button.clipper";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "button_image";
            target: "disabler";
            target: "clear_button.clipper";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }
#define BUTTON_DEFAULT_FOCUS_STYLES(style_name, image_normal) \
   group { name: "elm/button/base/"style_name; \
      data { \
         item: "focus_highlight" "on"; \
      } \
      images { \
         image: image_normal COMP; \
      } \
      script { \
         public mouse_down = 0; \
         public multi_down = 0; \
      } \
      parts { \
         part { name: "elm.swallow.content"; \
            type: SWALLOW; \
            scale: 1; \
            description { state: "default" 0.0; \
            } \
         } \
         part { name: "focus_image"; \
            scale: 1; \
            mouse_events: 0; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               visible: 0; \
               image.normal: image_normal; \
               fill.smooth: 0; \
               color: 0 110 255 255; /*(Changeable UI) color_class: "W201";*/ \
            } \
            description { state: "focused" 0.0; \
               inherit: "default" 0.0; \
               visible: 1; \
            } \
         } \
         part { name: "over2"; \
            type: RECT; \
            repeat_events: 1; \
            ignore_flags: ON_HOLD; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
         part { name: "over3"; \
            type: RECT; \
            repeat_events: 1; \
            description { state: "default" 0.0; \
               color: 0 0 0 0; \
            } \
         } \
      } \
      programs { \
         program { name: "button_press"; \
            signal: "mouse,down,1*"; \
            source: "over2"; \
            script { \
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0)) \
                 { \
                     set_int(mouse_down, 1); \
                     emit("elm,action,press", ""); \
                 } \
            } \
         } \
         program { name: "button_unpress"; \
            signal: "mouse,up,1*"; \
            source: "over3"; \
            script { \
               if (get_int(mouse_down) == 1) \
                 { \
                     set_int(mouse_down, 0); \
                     emit("elm,action,unpress", ""); \
                 } \
            } \
         } \
         program { name: "button_click"; \
            signal: "mouse,clicked,1"; \
            source: "over2"; \
            script { \
               if (get_int(multi_down) == 0) { \
                 emit("elm,action,click", ""); \
               } \
            } \
         } \
         program { name: "action_focus"; \
            signal: "elm,action,focus_highlight,show"; \
            source: "elm"; \
            action: STATE_SET "focused" 0.0; \
            target: "focus_image"; \
         } \
         program { name: "action_unfocus"; \
            signal: "elm,action,focus_highlight,hide"; \
            source: "elm"; \
            action: STATE_SET "default" 0.0; \
            target: "focus_image"; \
         } \
         program { \
            name: "multi_down"; \
            signal: "elm,action,multi,down"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 1); \
            } \
         } \
         program { \
            name: "multi_up"; \
            signal: "elm,action,multi,up"; \
            source: "elm"; \
            script { \
               set_int(multi_down, 0); \
            } \
         } \
      } \
   } \

BUTTON_DEFAULT_FOCUS_STYLES("focus", "tw_focused_effect.#.png")

   group { name: "elm/button/base/datetime/top_btn";
      images {
         image: "tw_timepicker_top.png" COMP;
         image: "tw_timepicker_top_effect.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "top_button_normal";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               min: DATETIME_TOP_FOOT_BUTTON_SIZE;
               max: DATETIME_TOP_FOOT_BUTTON_SIZE;
               image.normal: "tw_timepicker_top.png";
               color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 51; /*(Changeable UI) color_class: "W263D";*/
            }
         }
         part { name: "top_button_effect";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "tw_timepicker_top_effect.png";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
               rel1.to: "top_button_normal";
               rel2.to: "top_button_normal";
            }
         }
         part { name: "over2";
            type: RECT;
            ignore_flags: ON_HOLD;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "over3";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over2";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
                 }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_state_set";
         }
         program { name: "button_press_state_set";
            action: STATE_SET "pressed" 0.0;
            target: "top_button_normal";
            target: "top_button_effect";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over3";
            script {
               if (get_int(mouse_down) == 1)
                 {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_state_set");
                 }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_state_set";
            action: STATE_SET "default" 0.0;
            target: "top_button_normal";
            target: "top_button_effect";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over2";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_state_set";
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "top_button_normal";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.2;
            target: "top_button_normal";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "top_button_normal";
            target: "top_button_effect";
            target: "disabler";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "top_button_normal";
            target: "top_button_effect";
            target: "disabler";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/datetime/foot_btn";
      inherit: "elm/button/base/datetime/top_btn";
      images {
         image: "tw_timepicker_foot.png" COMP;
         image: "tw_timepicker_foot_effect.png" COMP;
      }
      parts {
          part { name: "top_button_normal";
             scale: 1;
             mouse_events: 0;
             description { state: "default" 0.0;
                min: DATETIME_TOP_FOOT_BUTTON_SIZE;
                max: DATETIME_TOP_FOOT_BUTTON_SIZE;
                image.normal: "tw_timepicker_foot.png";
                color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
              }
             description { state: "pressed" 0.0;
                inherit: "default" 0.0;
                color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
             }
             description { state: "disabled" 0.0;
                inherit: "default" 0.0;
                color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
             }
          }
          part { name: "top_button_effect";
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "tw_timepicker_foot_effect.png";
               rel1.to: "top_button_normal";
               rel2.to: "top_button_normal";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
      }
   }

   /******************* SPINNER BUTTONS STYLES **********************/

   group { name: "elm/button/base/spinner/increase/default";
      alias: "elm/button/base/spinner/increase/horizontal";
      data.item: "focus_highlight" "on";
      images {
         image: "tw_timepicker_right.png" COMP;
         image: "tw_timepicker_right_effect.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "arrow.image.bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               min: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
            }
         }
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
               image.normal: "tw_timepicker_right.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 51; /*(Changeable UI) color_class: "W263D";*/
            }
         }
         part { name: "arrow.effect";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image";
               rel2.to: "arrow.image";
               min: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               image.normal: "tw_timepicker_right_effect.png";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over";
            script {
               if ((get_int(multi_down) == 0) &&
                   (get_int(mouse_down) == 0)) {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
               }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over";
            script {
               if (get_int(mouse_down) == 1) {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "arrow.image";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_anim";
         }
         program { name: "action_pressed";
            signal: "elm,action,pressed";
            source: "elm";
            after: "button_press_anim";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "arrow.image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/decrease/default";
      alias: "elm/button/base/spinner/decrease/horizontal";
      inherit: "elm/button/base/spinner/increase/default";
      images {
         image: "tw_timepicker_left.png" COMP;
         image: "tw_timepicker_left_effect.png" COMP;
      }
      parts {
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
               image.normal: "tw_timepicker_left.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 51; /*(Changeable UI) color_class: "W263D";*/
            }
         }
         part { name: "arrow.effect";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image";
               rel2.to: "arrow.image";
               min: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_LEFT_RIGHT_ARROW_BUTTON_SIZE;
               image.normal: "tw_timepicker_left_effect.png";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/default";
      alias: "elm/button/base/spinner/vertical";
      images {
         image: "tw_timepicker_num_bg_new_transparent.#.png" COMP;
      }
      script {
         public button_state;
         public button_disabled;
      }
      parts {
         part { name: "bg";
            scale: 1;
            description { state: "default" 0.0;
               image.normal: "tw_timepicker_num_bg_new_transparent.#.png";
               min: SPINNER_PICKERSTYLE_FIELD_WIDTH SPINNER_PICKERSTYLE_FIELD_HEIGHT;
               color: 9 37 63 255; /*(Changeable UI) color_class: "W0811";*/
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W0812";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 25 38 51 255; /*(Changeable UI) color_class: "W262D";*/
            }
         }
         part { name: "elm.text";
            type: TEXT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 1;
               color: 249 249 249 255; /*(Changeable UI) color_class: "T051";*/
               min: 0 SPINNER_PICKERSTYLE_TEXT_HEIGHT;
               max: -1 SPINNER_PICKERSTYLE_TEXT_HEIGHT;
               rel1.to: "bg";
               rel2.to: "bg";
               text {
                  min: 0 0;
                  max: 1 0;
                  font: "Tizen:style=Light"; size: "60"; /*(Changeable UI) text_class: "T051";*/
                  text_class: "tizen";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0 0 ;
               color: 96 96 96 255; /*(Changeable UI) color_class: "T051D";*/
               text.font: "Tizen:style=Bold"; text.size: "50"; /*(Changeable UI) text_class: "T051D";*/
               text.text_class: "tizen";
            }
            description { state: "on" 0.0;
               inherit: "default" 0.0;
               color: 249 249 249 255; /*(Changeable UI) color_class: "T051";*/
               text.font: "Tizen:style=Bold"; text.size: "50"; /*(Changeable UI) text_class: "T051";*/
               text.text_class: "tizen";
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
                 run_program(PROGRAM:"button_click2");
            }
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "disabler";
            target: "elm.text";
            target: "bg";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "disabler";
            target: "elm.text";
            target: "bg";
         }
         program { name: "select";
            signal: "elm,state,selected";
            source: "elm";
            action: STATE_SET "on" 0.0;
            target: "bg";
            target: "elm.text";
         }
         program { name: "unselect";
            signal: "elm,state,unselected";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "elm.text";
         }
      }
   }

   group { name: "elm/button/base/spinner/increase/vertical";
      alias: "elm/button/base/spinner/inc_button";
      alias: "elm/button/base/spinner/increase/datetime";
      data.item: "focus_highlight" "on";
      images {
         image: "tw_timepicker_top.png" COMP;
         image: "tw_timepicker_top_effect.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "arrow.image.bg";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               align: 0.5 0.0;
               min: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
            }
         }
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
               image.normal: "tw_timepicker_top.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 51; /*(Changeable UI) color_class: "W263D";*/
            }
         }
         part { name: "arrow.effect";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image";
               rel2.to: "arrow.image";
               min: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               image.normal: "tw_timepicker_top_effect.png";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
            }
         }
         part { name: "over";
            type: RECT;
            repeat_events: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
            }
         }
         part { name: "disabler";
            type: RECT;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               visible: 0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               visible: 1;
            }
         }
      }
      programs {
         program { name: "button_press";
            signal: "mouse,down,1*";
            source: "over";
            script {
               if ((get_int(multi_down) == 0) &&
                   (get_int(mouse_down) == 0)) {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press2");
               }
            }
         }
         program { name: "button_press2";
            action: SIGNAL_EMIT "elm,action,press" "";
            after: "button_press_anim";
         }
         program { name: "button_press_anim";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image";
         }
         program { name: "button_unpress";
            signal: "mouse,up,1*";
            source: "over";
            script {
               if (get_int(mouse_down) == 1) {
                     set_int(mouse_down, 0);
                     run_program(PROGRAM:"button_unpress2");
                     run_program(PROGRAM:"button_unpress_anim");
               }
            }
         }
         program { name: "button_unpress2";
            action: SIGNAL_EMIT "elm,action,unpress" "";
         }
         program { name: "button_unpress_anim";
            action: STATE_SET "default" 0.0;
            target: "arrow.image";
         }
         program { name: "button_click";
            signal: "mouse,clicked,1";
            source: "over";
            script {
               if (get_int(multi_down) == 0) {
                 run_program(PROGRAM:"play_sound");
                 run_program(PROGRAM:"button_click2");
               }
            }
         }
         program { name: "play_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "action_unpressed";
            signal: "elm,action,unpressed";
            source: "elm";
            after: "button_unpress_anim";
         }
         program { name: "action_pressed";
            signal: "elm,action,pressed";
            source: "elm";
            after: "button_press_anim";
         }
         program { name: "button_click2";
            action: SIGNAL_EMIT "elm,action,click" "";
         }
         program { name: "access_pressed";
            signal: "elm,action,anim,activate";
            source: "elm";
            action: STATE_SET "pressed" 0.0;
            target: "arrow.image";
            after: "access_pressed_anim";
         }
         program { name: "access_pressed_anim";
            action: STATE_SET "default" 0.0;
            transition: DECELERATE 0.1;
            target: "arrow.image";
         }
         program {
            name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program {
            name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/spinner/decrease/vertical";
      alias: "elm/button/base/spinner/dec_button";
      alias: "elm/button/base/spinner/decrease/datetime";
      inherit: "elm/button/base/spinner/increase/vertical";
      images {
         image: "tw_timepicker_foot.png" COMP;
         image: "tw_timepicker_foot_effect.png" COMP;
      }
      parts {
         part { name: "arrow.image";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image.bg";
               rel2.to: "arrow.image.bg";
               min: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               color: 249 249 249 204; /*(Changeable UI) color_class: "W089";*/
               image.normal: "tw_timepicker_foot.png";
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               color: 0 110 255 255; /*(Changeable UI) color_class: "W089P";*/
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
               color: 244 244 244 51; /*(Changeable UI) color_class: "W263D";*/
            }
         }
         part { name: "arrow.effect";
            scale: 1;
            description { state: "default" 0.0;
               rel1.to: "arrow.image";
               rel2.to: "arrow.image";
               min: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               max: SPINNER_PICKERSTYLE_TOP_DOWN_ARROW_BUTTON_SIZE;
               image.normal: "tw_timepicker_foot_effect.png";
               color: 7 7 7 255; /*(Changeable UI) color_class: "W211";*/
            }
         }
      }
   }


   group { name: "elm/button/base/spinner/datetime";
      inherit: "elm/button/base/spinner/default";
         parts {
            part { name: "elm.text";
               type: TEXT;
               scale: 1;
               description { state: "default" 0.0;
                  visible: 1;
                  color: 249 249 249 255; /*(Changeable UI) color_class: "T094";*/
                  min: 0 SPINNER_PICKERSTYLE_TEXT_HEIGHT;
                  max: -1 SPINNER_PICKERSTYLE_TEXT_HEIGHT;
                  rel1.to: "bg";
                  rel2.to: "bg";
                  text {
                     min: 0 0;
                     max: 1 0;
                     font: "Tizen:style=Regular"; size: "40"; /*(Changeable UI) text_class: "T094";*/
                     text_class: "tizen";
                  }
               }
               description { state: "disabled" 0.0;
                  inherit: "default" 0 0 ;
                  color: 249 249 249 102; /*(Changeable UI) color_class: "T094D";*/
                  text.font: "Tizen:style=Regular"; text.size: "40"; /*(Changeable UI) text_class: "T094D";*/ 
                  text.text_class: "tizen";
               }
               description { state: "on" 0.0;
                  inherit: "default" 0.0;
                  color: 249 249 249 255; /*(Changeable UI) color_class: "T094";*/
                  text.font: "Tizen:style=Regular"; text.size: "40"; /*(Changeable UI) text_class: "T094";*/
                  text.text_class: "tizen";
               }
            }
         }
   }
   /* This transparent button style is used by applications which use webview. */
   group{ name: "elm/button/base/transparent";
       script {
         public mouse_down = 0;
         public multi_down = 0;
       }
       parts {
         part { name: "bg";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            scale: 1;
            description { state: "default" 0.0;
            }
         }
        part { name: "event";
            type: RECT;
            scale: 1;
            /* Do not remove the following line.
             * elm.swallow.content part should receive mouse events. */
            repeat_events: 1;
            description { state: "default" 0.0;
              color: 0 0 0 0;
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     run_program(PROGRAM:"touch_sound");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program { name: "touch_sound";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

   group { name: "elm/button/base/select_mode";
      alias: "elm/button/base/list_number";
      alias: "elm/button/base/edit_mode";
      images{
         image: "tw_list_number_bg.#.png" COMP;
      }
      script {
         public mouse_down = 0;
         public multi_down = 0;
      }
      parts {
         part { name: "base";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               min: BUTTON_LIST_SELECT_MODE_SIZE_INC;
            }
         }
         part { name: "lt_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.0 0.0;
               rel1 {
                  relative: 0.0 0.0;
                  to: "base";
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "base";
               }
               min: BUTTON_LIST_SELECT_MODE_PADDING_LT_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "rb_padding";
            type: SPACER;
            scale: 1;
            description { state: "default" 0.0;
               align: 1.0 1.0;
               rel1 {
                  relative: 1.0 1.0;
                  to: "base";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "base";
               }
               min: BUTTON_LIST_SELECT_MODE_PADDING_RB_SIZE_INC;
               fixed: 1 1;
            }
         }
         part { name: "bg";
            type: IMAGE;
            scale: 1;
            mouse_events: 0;
            description { state: "default" 0.0;
               image.normal: "tw_list_number_bg.#.png";
               rel1.to: "base";
               rel2.to: "base";
               min: BUTTON_LIST_SELECT_MODE_SIZE_INC;
               // color_class: "B057";
               color: 0 106 177 255;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               // color_class: "B057P";
               color: 0 106 177 255;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.swallow.content";
            type: SWALLOW;
            clip_to: "elm.swallow.content.clip";
            scale: 1;
            description { state: "default" 0.0;
               visible: 0;
               fixed: 0 1;
               align: 0.5 0.0;
               min: 0 BUTTON_LIST_SELECT_MODE_BOTTOM_CONTENT_HEIGHT_INC;
               rel1 {
                  relative: 0.0 1.0;
                  to: "lt_padding";
               }
               rel2 {
                  relative: 1.0 1.0;
                  to: "rb_padding";
               }
            }
            description { state: "visible" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "icononly" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "elm.text";
            type: TEXTBLOCK;
            mouse_events: 0;
            scale: 1;
            description { state: "default" 0.0;
               align: 0.5 0.5;
               min: 0 BUTTON_LIST_SELECT_MODE_TEXT_HEIGHT_INC;
               max: BUTTON_LIST_SELECT_MODE_TEXT_WIDTH_INC BUTTON_LIST_SELECT_MODE_TEXT_HEIGHT_INC;
               color: 248 248 248 255;
               rel1 {
                  relative: 1.0 1.0;
                  to: "lt_padding";;
               }
               rel2 {
                  relative: 0.0 0.0;
                  to: "rb_padding";;
               }
               text {
                  min: 1 0;
                  style: "button_list_select_mode_text_normal";
               }
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
            description { state: "pressed" 0.0;
               inherit: "default" 0.0;
               text.style: "button_list_select_mode_text_press";
            }
         }
         part { name: "elm.swallow.content.clip";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
            }
            description { state: "disabled" 0.0;
               inherit: "default" 0.0;
            }
         }
         part { name: "event";
            type: RECT;
            scale: 1;
            description { state: "default" 0.0;
               color: 0 0 0 0;
               rel1.to: "base";
               rel2.to: "base";
            }
         }
      }
      programs {
         program { name: "pressed";
            signal: "mouse,down,1*";
            source: "event";
            script {
               if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
                 {
                     set_int(mouse_down, 1);
                     run_program(PROGRAM:"button_press1");
                 }
            }
         }
         program { name: "button_press1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "pressed", 0.0);
                  set_state(PART:"elm.text", "pressed", 0.0);
                  emit("elm,action,press", "");
               }
            }
         }
         program { name: "unpressed";
            signal: "mouse,up,1";
            source: "event";
            script {
               if (get_int(mouse_down) == 1) {
                 set_int(mouse_down, 0);
                 run_program(PROGRAM:"button_unpress1");
               }
            }
         }
         program { name: "button_unpress1";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  set_state(PART:"bg", "default", 0.0);
                  set_state(PART:"elm.text", "default", 0.0);
                  emit("elm,action,unpress", "");
               }
            }
         }
         program { name: "touch_snd";
            signal: "mouse,clicked,1";
            source: "event";
            script {
               new st[31];
               new Float:vl;
               if (get_int(multi_down) == 0) {
                  get_state(PART:"bg", st, 30, vl);
                  if (strcmp(st, "disabled")) {
                     run_program(PROGRAM:"play_sample");
                     emit("elm,action,click", "");
                  }
               }
            }
         }
         program {
            name: "play_sample";
            action: RUN_PLUGIN "touch_sound";
         }
         program { name: "text_show";
            signal: "elm,state,text,visible";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "icononly"))
                 {
                    set_state(PART:"elm.swallow.content", "visible", 0.0);
                 }
               get_state(PART:"bg", st, 30, vl);
               if (strcmp(st, "disabled"))
                  set_state(PART:"elm.text", "default", 0.0);
               else
                  set_state(PART:"elm.text", "disabled", 0.0);
            }
         }
         program { name: "text_hide";
            signal: "elm,state,text,hidden";
            source: "elm";
            script {
               new st[31];
               new Float:vl;
               get_state(PART:"elm.swallow.content", st, 30, vl);
               if (!strcmp(st, "visible"))
                 {
                    set_state(PART:"elm.swallow.content", "icononly", 0.0);
                 }
               set_state(PART:"elm.text", "default", 0.0);
            }
         }
         program { name: "icon_show";
            signal: "elm,state,icon,visible";
            source: "elm";
            action: STATE_SET "visible" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "icon_hide";
            signal: "elm,state,icon,hidden";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "elm.swallow.content";
         }
         program { name: "disable";
            signal: "elm,state,disabled";
            source: "elm";
            action: STATE_SET "disabled" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "enable";
            signal: "elm,state,enabled";
            source: "elm";
            action: STATE_SET "default" 0.0;
            target: "bg";
            target: "elm.swallow.content.clip";
            target: "elm.text";
         }
         program { name: "multi_down";
            signal: "elm,action,multi,down";
            source: "elm";
            script {
               set_int(multi_down, 1);
            }
         }
         program { name: "multi_up";
            signal: "elm,action,multi,up";
            source: "elm";
            script {
               set_int(multi_down, 0);
            }
         }
      }
   }

group { name: "elm/button/base/rotary_selector_item";
   script {
      public mouse_down = 0;
      public multi_down = 0;
      public selected = 0;
   }
   parts {
      part { name: "base";
         type: SPACER;
         scale: 1;
         description { state: "default" 0.0;
            min: ROTARY_SELECTOR_ITEM_WIDTH_INC ROTARY_SELECTOR_ITEM_HEIGHT_INC;
            max: ROTARY_SELECTOR_ITEM_WIDTH_INC ROTARY_SELECTOR_ITEM_HEIGHT_INC;
         }
      }
      part { name: "item,bg_image";
         scale: 1;
         type: SWALLOW;
         clip_to: "elm.swallow.bg_image.clip";
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            map {
               zoom.x: 1.2;
               zoom.y: 1.2;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.swallow.bg_image.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 250 250 250 255;
            rel1.relative : -0.2 -0.2;
            rel2.relative : 1.2 1.2;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
            color: 191 191 191 255;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            color: 250 250 250 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
            color: 77 77 77 255;
         }
      }
      part { name: "item,icon";
         type: SWALLOW;
         clip_to: "elm.swallow.icon.clip";
         scale: 1;
         description { state: "default" 0.0;
            rel1.to: "base";
            rel2.to: "base";
            map.on: 1;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
            map {
               zoom.x: 1.2;
               zoom.y: 1.2;
            }
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "elm.swallow.icon.clip";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
         color: 20 20 20 255;
         }
         description { state: "pressed" 0.0;
            inherit: "default" 0.0;
         color: 2 130 209 255;
         }
         description { state: "selected" 0.0;
            inherit: "default" 0.0;
         color: 2 130 209 255;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         color: 51 51 51 255;
         }
      }
      part { name: "event";
         type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color: 0 0 0 0;
            rel1.to: "base";
            rel2.to: "base";
         }
      }
   }
   programs {
      program { name: "pressed";
         signal: "mouse,down,1*";
         source: "event";
         script {
            if ((get_int(multi_down) == 0) && (get_int(mouse_down) == 0))
            {
               set_int(mouse_down, 1);
               run_program(PROGRAM:"button_press1");
            }
         }
      }
      program { name: "button_press1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"item,bg_image", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"elm.swallow.bg_image.clip", "pressed", 0.0);
               set_state(PART:"elm.swallow.icon.clip", "pressed", 0.0);
               emit("elm,action,press", "");
            }
         }
      }
      program { name: "unpressed";
         signal: "mouse,up,1";
         source: "event";
         script {
            if (get_int(mouse_down) == 1) {
               set_int(mouse_down, 0);
               run_program(PROGRAM:"button_unpress1");
            }
         }
      }
      program { name: "button_unpress1";
         script {
            new st[31];
            new Float:vl;
            get_state(PART:"item,bg_image", st, 30, vl);
            if (strcmp(st, "disabled")) {
               set_state(PART:"elm.swallow.bg_image.clip", "default", 0.0);
               set_state(PART:"elm.swallow.icon.clip", "default", 0.0);
               emit("elm,action,unpress", "");
            }
         }
      }
      program { name: "touch_snd";
         signal: "mouse,clicked,1";
         source: "event";
         script {
            new st[31];
            new Float:vl;
            if (get_int(multi_down) == 0) {
               get_state(PART:"item,bg_image", st, 30, vl);
               if (strcmp(st, "disabled")) {
                  if (get_int(selected) == 0)
                  {
                     set_int(selected, 1);
                     run_program(PROGRAM:"selected_ef");
                  }
                  else
                  {
                     set_int(selected, 0);
                  }
                  run_program(PROGRAM:"play_sample");
                  emit("elm,action,click", "");
               }
            }
         }
      }
      program { name: "selected_mode";
         signal: "elm,action,button,selected";
         source: "";
         script {
            if (get_int(selected) == 0)
            {
               set_int(selected, 1);
               run_program(PROGRAM:"selected_ef");
            }
         }
      }
      program { name: "unselected_mode";
         signal: "elm,action,button,unselected";
         source: "";
         script {
            if (get_int(selected) == 1)
            {
               set_int(selected, 0);
               run_program(PROGRAM:"unselected_ef");
            }
         }
      }
      program {
         name: "play_sample";
         action: RUN_PLUGIN "touch_sound";
      }
      program { name: "disable";
         signal: "elm,state,disabled";
         source: "elm";
         action: STATE_SET "disabled" 0.0;
         target: "item,bg_image";
         target: "elm.swallow.icon.clip";
      }
      program { name: "enable";
         signal: "elm,state,enabled";
         source: "elm";
         action: STATE_SET "default" 0.0;
         target: "item,bg_image";
         target: "elm.swallow.icon.clip";
      }
      program { name: "multi_down";
         signal: "elm,action,multi,down";
         source: "elm";
         script {
            set_int(multi_down, 1);
         }
      }
      program { name: "multi_up";
         signal: "elm,action,multi,up";
         source: "elm";
         script {
            set_int(multi_down, 0);
         }
      }
      program { name: "selected_ef";
         action: STATE_SET "selected" 0.0;
         target: "elm.swallow.bg_image.clip";
         target: "item,bg_image";
         target: "elm.swallow.icon.clip";
         target: "item,icon";
         transition: CUBIC_BEZIER 0.45 0.25 0.46 0.45 1.0;
      }
      program { name: "unselected_ef";
         action: STATE_SET "default" 0.0;
         transition: CUBIC_BEZIER 0.45 0.25 0.46 0.45 1.0;
         target: "elm.swallow.bg_image.clip";
         target: "item,bg_image";
         target: "elm.swallow.icon.clip";
         target: "item,icon";
      }
   }
}
